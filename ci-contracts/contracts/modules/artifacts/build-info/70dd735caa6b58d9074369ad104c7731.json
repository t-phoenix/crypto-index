{
	"id": "70dd735caa6b58d9074369ad104c7731",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.10",
	"solcLongVersion": "0.6.10+commit.00c0fcaf",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/modules/BasicIssuanceModule.sol": {
				"content": "/*\n    Copyright 2020 Set Labs Inc.\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n    http://www.apache.org/licenses/LICENSE-2.0\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n    SPDX-License-Identifier: Apache License, Version 2.0\n*/\n\npragma solidity 0.6.10;\npragma experimental \"ABIEncoderV2\";\n\nimport { IERC20 } from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport { ReentrancyGuard } from \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport { SafeCast } from \"@openzeppelin/contracts/utils/SafeCast.sol\";\nimport { SafeMath } from \"@openzeppelin/contracts/math/SafeMath.sol\";\n\nimport { IController } from \"../interfaces/IController.sol\";\nimport { IManagerIssuanceHook } from \"../interfaces/IManagerIssuanceHook.sol\";\nimport { Invoke } from \"../lib/Invoke.sol\";\nimport { ISetToken } from \"../interfaces/ISetToken.sol\";\nimport { ModuleBase } from \"../lib/ModuleBase.sol\";\nimport { Position } from \"../lib/Position.sol\";\nimport { PreciseUnitMath } from \"../lib/PreciseUnitMath.sol\";\n\n/**\n * @title BasicIssuanceModule\n * @author Set Protocol\n *\n * Module that enables issuance and redemption functionality on a SetToken. This is a module that is\n * required to bring the totalSupply of a Set above 0.\n */\ncontract BasicIssuanceModule is ModuleBase, ReentrancyGuard {\n    using Invoke for ISetToken;\n    using Position for ISetToken.Position;\n    using Position for ISetToken;\n    using PreciseUnitMath for uint256;\n    using SafeMath for uint256;\n    using SafeCast for int256;\n\n    /* ============ Events ============ */\n\n    event SetTokenIssued(\n        address indexed _setToken,\n        address indexed _issuer,\n        address indexed _to,\n        address _hookContract,\n        uint256 _quantity\n    );\n    event SetTokenRedeemed(\n        address indexed _setToken,\n        address indexed _redeemer,\n        address indexed _to,\n        uint256 _quantity\n    );\n\n    /* ============ State Variables ============ */\n\n    // Mapping of SetToken to Issuance hook configurations\n    mapping(ISetToken => IManagerIssuanceHook) public managerIssuanceHook;\n\n    /* ============ Constructor ============ */\n\n    /**\n     * Set state controller state variable\n     *\n     * @param _controller             Address of controller contract\n     */\n    constructor(IController _controller) public ModuleBase(_controller) {}\n\n    /* ============ External Functions ============ */\n\n    /**\n     * Deposits the SetToken's position components into the SetToken and mints the SetToken of the given quantity\n     * to the specified _to address. This function only handles Default Positions (positionState = 0).\n     *\n     * @param _setToken             Instance of the SetToken contract\n     * @param _quantity             Quantity of the SetToken to mint\n     * @param _to                   Address to mint SetToken to\n     */\n    function issue(\n        ISetToken _setToken,\n        uint256 _quantity,\n        address _to\n    )\n        external\n        nonReentrant\n        onlyValidAndInitializedSet(_setToken)\n    {\n        require(_quantity > 0, \"Issue quantity must be > 0\");\n\n        address hookContract = _callPreIssueHooks(_setToken, _quantity, msg.sender, _to);\n\n        (\n            address[] memory components,\n            uint256[] memory componentQuantities\n        ) = getRequiredComponentUnitsForIssue(_setToken, _quantity);\n\n        // For each position, transfer the required underlying to the SetToken\n        for (uint256 i = 0; i < components.length; i++) {\n            // Transfer the component to the SetToken\n            transferFrom(\n                IERC20(components[i]),\n                msg.sender,\n                address(_setToken),\n                componentQuantities[i]\n            );\n        }\n\n        // Mint the SetToken\n        _setToken.mint(_to, _quantity);\n\n        emit SetTokenIssued(address(_setToken), msg.sender, _to, hookContract, _quantity);\n    }\n\n    /**\n     * Redeems the SetToken's positions and sends the components of the given\n     * quantity to the caller. This function only handles Default Positions (positionState = 0).\n     *\n     * @param _setToken             Instance of the SetToken contract\n     * @param _quantity             Quantity of the SetToken to redeem\n     * @param _to                   Address to send component assets to\n     */\n    function redeem(\n        ISetToken _setToken,\n        uint256 _quantity,\n        address _to\n    )\n        external\n        nonReentrant\n        onlyValidAndInitializedSet(_setToken)\n    {\n        require(_quantity > 0, \"Redeem quantity must be > 0\");\n\n        // Burn the SetToken - ERC20's internal burn already checks that the user has enough balance\n        _setToken.burn(msg.sender, _quantity);\n\n        // For each position, invoke the SetToken to transfer the tokens to the user\n        address[] memory components = _setToken.getComponents();\n        for (uint256 i = 0; i < components.length; i++) {\n            address component = components[i];\n            require(!_setToken.hasExternalPosition(component), \"Only default positions are supported\");\n\n            uint256 unit = _setToken.getDefaultPositionRealUnit(component).toUint256();\n\n            // Use preciseMul to round down to ensure overcollateration when small redeem quantities are provided\n            uint256 componentQuantity = _quantity.preciseMul(unit);\n\n            // Instruct the SetToken to transfer the component to the user\n            _setToken.strictInvokeTransfer(\n                component,\n                _to,\n                componentQuantity\n            );\n        }\n\n        emit SetTokenRedeemed(address(_setToken), msg.sender, _to, _quantity);\n    }\n\n    /**\n     * Initializes this module to the SetToken with issuance-related hooks. Only callable by the SetToken's manager.\n     * Hook addresses are optional. Address(0) means that no hook will be called\n     *\n     * @param _setToken             Instance of the SetToken to issue\n     * @param _preIssueHook         Instance of the Manager Contract with the Pre-Issuance Hook function\n     */\n    function initialize(\n        ISetToken _setToken,\n        IManagerIssuanceHook _preIssueHook\n    )\n        external\n        onlySetManager(_setToken, msg.sender)\n        onlyValidAndPendingSet(_setToken)\n    {\n        managerIssuanceHook[_setToken] = _preIssueHook;\n\n        _setToken.initializeModule();\n    }\n\n    /**\n     * Reverts as this module should not be removable after added. Users should always\n     * have a way to redeem their Sets\n     */\n    function removeModule() external override {\n        revert(\"The BasicIssuanceModule module cannot be removed\");\n    }\n\n    /* ============ External Getter Functions ============ */\n\n    /**\n     * Retrieves the addresses and units required to mint a particular quantity of SetToken.\n     *\n     * @param _setToken             Instance of the SetToken to issue\n     * @param _quantity             Quantity of SetToken to issue\n     * @return address[]            List of component addresses\n     * @return uint256[]            List of component units required to issue the quantity of SetTokens\n     */\n    function getRequiredComponentUnitsForIssue(\n        ISetToken _setToken,\n        uint256 _quantity\n    )\n        public\n        view\n        onlyValidAndInitializedSet(_setToken)\n        returns (address[] memory, uint256[] memory)\n    {\n        address[] memory components = _setToken.getComponents();\n\n        uint256[] memory notionalUnits = new uint256[](components.length);\n\n        for (uint256 i = 0; i < components.length; i++) {\n            require(!_setToken.hasExternalPosition(components[i]), \"Only default positions are supported\");\n\n            notionalUnits[i] = _setToken.getDefaultPositionRealUnit(components[i]).toUint256().preciseMulCeil(_quantity);\n        }\n\n        return (components, notionalUnits);\n    }\n\n    /* ============ Internal Functions ============ */\n\n    /**\n     * If a pre-issue hook has been configured, call the external-protocol contract. Pre-issue hook logic\n     * can contain arbitrary logic including validations, external function calls, etc.\n     */\n    function _callPreIssueHooks(\n        ISetToken _setToken,\n        uint256 _quantity,\n        address _caller,\n        address _to\n    )\n        internal\n        returns(address)\n    {\n        IManagerIssuanceHook preIssueHook = managerIssuanceHook[_setToken];\n        if (address(preIssueHook) != address(0)) {\n            preIssueHook.invokePreIssueHook(_setToken, _quantity, _caller, _to);\n            return address(preIssueHook);\n        }\n\n        return address(0);\n    }\n}"
			},
			"contracts/lib/PreciseUnitMath.sol": {
				"content": "/*\n    Copyright 2020 Set Labs Inc.\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n    SPDX-License-Identifier: Apache License, Version 2.0\n*/\n\npragma solidity 0.6.10;\npragma experimental ABIEncoderV2;\n\nimport { SafeCast } from \"@openzeppelin/contracts/utils/SafeCast.sol\";\nimport { SafeMath } from \"@openzeppelin/contracts/math/SafeMath.sol\";\nimport { SignedSafeMath } from \"@openzeppelin/contracts/math/SignedSafeMath.sol\";\n\n\n/**\n * @title PreciseUnitMath\n * @author Set Protocol\n *\n * Arithmetic for fixed-point numbers with 18 decimals of precision. Some functions taken from\n * dYdX's BaseMath library.\n *\n * CHANGELOG:\n * - 9/21/20: Added safePower function\n * - 4/21/21: Added approximatelyEquals function\n * - 12/13/21: Added preciseDivCeil (int overloads) function\n * - 12/13/21: Added abs function\n */\nlibrary PreciseUnitMath {\n    using SafeMath for uint256;\n    using SignedSafeMath for int256;\n    using SafeCast for int256;\n\n    // The number One in precise units.\n    uint256 constant internal PRECISE_UNIT = 10 ** 18;\n    int256 constant internal PRECISE_UNIT_INT = 10 ** 18;\n\n    // Max unsigned integer value\n    uint256 constant internal MAX_UINT_256 = type(uint256).max;\n    // Max and min signed integer value\n    int256 constant internal MAX_INT_256 = type(int256).max;\n    int256 constant internal MIN_INT_256 = type(int256).min;\n\n    /**\n     * @dev Getter function since constants can't be read directly from libraries.\n     */\n    function preciseUnit() internal pure returns (uint256) {\n        return PRECISE_UNIT;\n    }\n\n    /**\n     * @dev Getter function since constants can't be read directly from libraries.\n     */\n    function preciseUnitInt() internal pure returns (int256) {\n        return PRECISE_UNIT_INT;\n    }\n\n    /**\n     * @dev Getter function since constants can't be read directly from libraries.\n     */\n    function maxUint256() internal pure returns (uint256) {\n        return MAX_UINT_256;\n    }\n\n    /**\n     * @dev Getter function since constants can't be read directly from libraries.\n     */\n    function maxInt256() internal pure returns (int256) {\n        return MAX_INT_256;\n    }\n\n    /**\n     * @dev Getter function since constants can't be read directly from libraries.\n     */\n    function minInt256() internal pure returns (int256) {\n        return MIN_INT_256;\n    }\n\n    /**\n     * @dev Multiplies value a by value b (result is rounded down). It's assumed that the value b is the significand\n     * of a number with 18 decimals precision.\n     */\n    function preciseMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a.mul(b).div(PRECISE_UNIT);\n    }\n\n    /**\n     * @dev Multiplies value a by value b (result is rounded towards zero). It's assumed that the value b is the\n     * significand of a number with 18 decimals precision.\n     */\n    function preciseMul(int256 a, int256 b) internal pure returns (int256) {\n        return a.mul(b).div(PRECISE_UNIT_INT);\n    }\n\n    /**\n     * @dev Multiplies value a by value b (result is rounded up). It's assumed that the value b is the significand\n     * of a number with 18 decimals precision.\n     */\n    function preciseMulCeil(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0 || b == 0) {\n            return 0;\n        }\n        return a.mul(b).sub(1).div(PRECISE_UNIT).add(1);\n    }\n\n    /**\n     * @dev Divides value a by value b (result is rounded down).\n     */\n    function preciseDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a.mul(PRECISE_UNIT).div(b);\n    }\n\n\n    /**\n     * @dev Divides value a by value b (result is rounded towards 0).\n     */\n    function preciseDiv(int256 a, int256 b) internal pure returns (int256) {\n        return a.mul(PRECISE_UNIT_INT).div(b);\n    }\n\n    /**\n     * @dev Divides value a by value b (result is rounded up or away from 0).\n     */\n    function preciseDivCeil(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b != 0, \"Cant divide by 0\");\n\n        return a > 0 ? a.mul(PRECISE_UNIT).sub(1).div(b).add(1) : 0;\n    }\n\n    /**\n     * @dev Divides value a by value b (result is rounded up or away from 0). When `a` is 0, 0 is\n     * returned. When `b` is 0, method reverts with divide-by-zero error.\n     */\n    function preciseDivCeil(int256 a, int256 b) internal pure returns (int256) {\n        require(b != 0, \"Cant divide by 0\");\n        \n        a = a.mul(PRECISE_UNIT_INT);\n        int256 c = a.div(b);\n\n        if (a % b != 0) {\n            // a ^ b == 0 case is covered by the previous if statement, hence it won't resolve to --c\n            (a ^ b > 0) ? ++c : --c;\n        }\n\n        return c;\n    }\n\n    /**\n     * @dev Divides value a by value b (result is rounded down - positive numbers toward 0 and negative away from 0).\n     */\n    function divDown(int256 a, int256 b) internal pure returns (int256) {\n        require(b != 0, \"Cant divide by 0\");\n        require(a != MIN_INT_256 || b != -1, \"Invalid input\");\n\n        int256 result = a.div(b);\n        if (a ^ b < 0 && a % b != 0) {\n            result -= 1;\n        }\n\n        return result;\n    }\n\n    /**\n     * @dev Multiplies value a by value b where rounding is towards the lesser number.\n     * (positive values are rounded towards zero and negative values are rounded away from 0).\n     */\n    function conservativePreciseMul(int256 a, int256 b) internal pure returns (int256) {\n        return divDown(a.mul(b), PRECISE_UNIT_INT);\n    }\n\n    /**\n     * @dev Divides value a by value b where rounding is towards the lesser number.\n     * (positive values are rounded towards zero and negative values are rounded away from 0).\n     */\n    function conservativePreciseDiv(int256 a, int256 b) internal pure returns (int256) {\n        return divDown(a.mul(PRECISE_UNIT_INT), b);\n    }\n\n    /**\n    * @dev Performs the power on a specified value, reverts on overflow.\n    */\n    function safePower(\n        uint256 a,\n        uint256 pow\n    )\n        internal\n        pure\n        returns (uint256)\n    {\n        require(a > 0, \"Value must be positive\");\n\n        uint256 result = 1;\n        for (uint256 i = 0; i < pow; i++){\n            uint256 previousResult = result;\n\n            // Using safemath multiplication prevents overflows\n            result = previousResult.mul(a);\n        }\n\n        return result;\n    }\n\n    /**\n     * @dev Returns true if a =~ b within range, false otherwise.\n     */\n    function approximatelyEquals(uint256 a, uint256 b, uint256 range) internal pure returns (bool) {\n        return a <= b.add(range) && a >= b.sub(range);\n    }\n\n    /**\n     * Returns the absolute value of int256 `a` as a uint256\n     */\n    function abs(int256 a) internal pure returns (uint) {\n        return a >= 0 ? a.toUint256() : a.mul(-1).toUint256();\n    }\n\n    /**\n     * Returns the negation of a\n     */\n    function neg(int256 a) internal pure returns (int256) {\n        require(a > MIN_INT_256, \"Inversion overflow\");\n        return -a;\n    }\n}\n"
			},
			"contracts/lib/Position.sol": {
				"content": "/*\n    Copyright 2020 Set Labs Inc.\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n    SPDX-License-Identifier: Apache License, Version 2.0\n*/\n\npragma solidity 0.6.10;\npragma experimental \"ABIEncoderV2\";\n\nimport { IERC20 } from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport { SafeCast } from \"@openzeppelin/contracts/utils/SafeCast.sol\";\nimport { SafeMath } from \"@openzeppelin/contracts/math/SafeMath.sol\";\nimport { SignedSafeMath } from \"@openzeppelin/contracts/math/SignedSafeMath.sol\";\n\nimport { ISetToken } from \"../interfaces/ISetToken.sol\";\nimport { PreciseUnitMath } from \"./PreciseUnitMath.sol\";\n\n\n/**\n * @title Position\n * @author Set Protocol\n *\n * Collection of helper functions for handling and updating SetToken Positions\n *\n * CHANGELOG:\n *  - Updated editExternalPosition to work when no external position is associated with module\n */\nlibrary Position {\n    using SafeCast for uint256;\n    using SafeMath for uint256;\n    using SafeCast for int256;\n    using SignedSafeMath for int256;\n    using PreciseUnitMath for uint256;\n\n    /* ============ Helper ============ */\n\n    /**\n     * Returns whether the SetToken has a default position for a given component (if the real unit is > 0)\n     */\n    function hasDefaultPosition(ISetToken _setToken, address _component) internal view returns(bool) {\n        return _setToken.getDefaultPositionRealUnit(_component) > 0;\n    }\n\n    /**\n     * Returns whether the SetToken has an external position for a given component (if # of position modules is > 0)\n     */\n    function hasExternalPosition(ISetToken _setToken, address _component) internal view returns(bool) {\n        return _setToken.getExternalPositionModules(_component).length > 0;\n    }\n    \n    /**\n     * Returns whether the SetToken component default position real unit is greater than or equal to units passed in.\n     */\n    function hasSufficientDefaultUnits(ISetToken _setToken, address _component, uint256 _unit) internal view returns(bool) {\n        return _setToken.getDefaultPositionRealUnit(_component) >= _unit.toInt256();\n    }\n\n    /**\n     * Returns whether the SetToken component external position is greater than or equal to the real units passed in.\n     */\n    function hasSufficientExternalUnits(\n        ISetToken _setToken,\n        address _component,\n        address _positionModule,\n        uint256 _unit\n    )\n        internal\n        view\n        returns(bool)\n    {\n       return _setToken.getExternalPositionRealUnit(_component, _positionModule) >= _unit.toInt256();    \n    }\n\n    /**\n     * If the position does not exist, create a new Position and add to the SetToken. If it already exists,\n     * then set the position units. If the new units is 0, remove the position. Handles adding/removing of \n     * components where needed (in light of potential external positions).\n     *\n     * @param _setToken           Address of SetToken being modified\n     * @param _component          Address of the component\n     * @param _newUnit            Quantity of Position units - must be >= 0\n     */\n    function editDefaultPosition(ISetToken _setToken, address _component, uint256 _newUnit) internal {\n        bool isPositionFound = hasDefaultPosition(_setToken, _component);\n        if (!isPositionFound && _newUnit > 0) {\n            // If there is no Default Position and no External Modules, then component does not exist\n            if (!hasExternalPosition(_setToken, _component)) {\n                _setToken.addComponent(_component);\n            }\n        } else if (isPositionFound && _newUnit == 0) {\n            // If there is a Default Position and no external positions, remove the component\n            if (!hasExternalPosition(_setToken, _component)) {\n                _setToken.removeComponent(_component);\n            }\n        }\n\n        _setToken.editDefaultPositionUnit(_component, _newUnit.toInt256());\n    }\n\n    /**\n     * Update an external position and remove and external positions or components if necessary. The logic flows as follows:\n     * 1) If component is not already added then add component and external position. \n     * 2) If component is added but no existing external position using the passed module exists then add the external position.\n     * 3) If the existing position is being added to then just update the unit and data\n     * 4) If the position is being closed and no other external positions or default positions are associated with the component\n     *    then untrack the component and remove external position.\n     * 5) If the position is being closed and other existing positions still exist for the component then just remove the\n     *    external position.\n     *\n     * @param _setToken         SetToken being updated\n     * @param _component        Component position being updated\n     * @param _module           Module external position is associated with\n     * @param _newUnit          Position units of new external position\n     * @param _data             Arbitrary data associated with the position\n     */\n    function editExternalPosition(\n        ISetToken _setToken,\n        address _component,\n        address _module,\n        int256 _newUnit,\n        bytes memory _data\n    )\n        internal\n    {\n        if (_newUnit != 0) {\n            if (!_setToken.isComponent(_component)) {\n                _setToken.addComponent(_component);\n                _setToken.addExternalPositionModule(_component, _module);\n            } else if (!_setToken.isExternalPositionModule(_component, _module)) {\n                _setToken.addExternalPositionModule(_component, _module);\n            }\n            _setToken.editExternalPositionUnit(_component, _module, _newUnit);\n            _setToken.editExternalPositionData(_component, _module, _data);\n        } else {\n            require(_data.length == 0, \"Passed data must be null\");\n            // If no default or external position remaining then remove component from components array\n            if (_setToken.getExternalPositionRealUnit(_component, _module) != 0) {\n                address[] memory positionModules = _setToken.getExternalPositionModules(_component);\n                if (_setToken.getDefaultPositionRealUnit(_component) == 0 && positionModules.length == 1) {\n                    require(positionModules[0] == _module, \"External positions must be 0 to remove component\");\n                    _setToken.removeComponent(_component);\n                }\n                _setToken.removeExternalPositionModule(_component, _module);\n            }\n        }\n    }\n\n    /**\n     * Get total notional amount of Default position\n     *\n     * @param _setTokenSupply     Supply of SetToken in precise units (10^18)\n     * @param _positionUnit       Quantity of Position units\n     *\n     * @return                    Total notional amount of units\n     */\n    function getDefaultTotalNotional(uint256 _setTokenSupply, uint256 _positionUnit) internal pure returns (uint256) {\n        return _setTokenSupply.preciseMul(_positionUnit);\n    }\n\n    /**\n     * Get position unit from total notional amount\n     *\n     * @param _setTokenSupply     Supply of SetToken in precise units (10^18)\n     * @param _totalNotional      Total notional amount of component prior to\n     * @return                    Default position unit\n     */\n    function getDefaultPositionUnit(uint256 _setTokenSupply, uint256 _totalNotional) internal pure returns (uint256) {\n        return _totalNotional.preciseDiv(_setTokenSupply);\n    }\n\n    /**\n     * Get the total tracked balance - total supply * position unit\n     *\n     * @param _setToken           Address of the SetToken\n     * @param _component          Address of the component\n     * @return                    Notional tracked balance\n     */\n    function getDefaultTrackedBalance(ISetToken _setToken, address _component) internal view returns(uint256) {\n        int256 positionUnit = _setToken.getDefaultPositionRealUnit(_component); \n        return _setToken.totalSupply().preciseMul(positionUnit.toUint256());\n    }\n\n    /**\n     * Calculates the new default position unit and performs the edit with the new unit\n     *\n     * @param _setToken                 Address of the SetToken\n     * @param _component                Address of the component\n     * @param _setTotalSupply           Current SetToken supply\n     * @param _componentPreviousBalance Pre-action component balance\n     * @return                          Current component balance\n     * @return                          Previous position unit\n     * @return                          New position unit\n     */\n    function calculateAndEditDefaultPosition(\n        ISetToken _setToken,\n        address _component,\n        uint256 _setTotalSupply,\n        uint256 _componentPreviousBalance\n    )\n        internal\n        returns(uint256, uint256, uint256)\n    {\n        uint256 currentBalance = IERC20(_component).balanceOf(address(_setToken));\n        uint256 positionUnit = _setToken.getDefaultPositionRealUnit(_component).toUint256();\n\n        uint256 newTokenUnit;\n        if (currentBalance > 0) {\n            newTokenUnit = calculateDefaultEditPositionUnit(\n                _setTotalSupply,\n                _componentPreviousBalance,\n                currentBalance,\n                positionUnit\n            );\n        } else {\n            newTokenUnit = 0;\n        }\n\n        editDefaultPosition(_setToken, _component, newTokenUnit);\n\n        return (currentBalance, positionUnit, newTokenUnit);\n    }\n\n    /**\n     * Calculate the new position unit given total notional values pre and post executing an action that changes SetToken state\n     * The intention is to make updates to the units without accidentally picking up airdropped assets as well.\n     *\n     * @param _setTokenSupply     Supply of SetToken in precise units (10^18)\n     * @param _preTotalNotional   Total notional amount of component prior to executing action\n     * @param _postTotalNotional  Total notional amount of component after the executing action\n     * @param _prePositionUnit    Position unit of SetToken prior to executing action\n     * @return                    New position unit\n     */\n    function calculateDefaultEditPositionUnit(\n        uint256 _setTokenSupply,\n        uint256 _preTotalNotional,\n        uint256 _postTotalNotional,\n        uint256 _prePositionUnit\n    )\n        internal\n        pure\n        returns (uint256)\n    {\n        // If pre action total notional amount is greater then subtract post action total notional and calculate new position units\n        uint256 airdroppedAmount = _preTotalNotional.sub(_prePositionUnit.preciseMul(_setTokenSupply));\n        return _postTotalNotional.sub(airdroppedAmount).preciseDiv(_setTokenSupply);\n    }\n}\n"
			},
			"contracts/lib/ModuleBase.sol": {
				"content": "/*\n    Copyright 2020 Set Labs Inc.\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n    SPDX-License-Identifier: Apache License, Version 2.0\n*/\n\npragma solidity 0.6.10;\n\nimport { IERC20 } from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\nimport { AddressArrayUtils } from \"./AddressArrayUtils.sol\";\nimport { ExplicitERC20 } from \"./ExplicitERC20.sol\";\nimport { IController } from \"../interfaces/IController.sol\";\nimport { IModule } from \"../interfaces/IModule.sol\";\nimport { ISetToken } from \"../interfaces/ISetToken.sol\";\nimport { Invoke } from \"./Invoke.sol\";\nimport { Position } from \"./Position.sol\";\nimport { PreciseUnitMath } from \"./PreciseUnitMath.sol\";\nimport { ResourceIdentifier } from \"./ResourceIdentifier.sol\";\nimport { SafeCast } from \"@openzeppelin/contracts/utils/SafeCast.sol\";\nimport { SafeMath } from \"@openzeppelin/contracts/math/SafeMath.sol\";\nimport { SignedSafeMath } from \"@openzeppelin/contracts/math/SignedSafeMath.sol\";\n\n/**\n * @title ModuleBase\n * @author Set Protocol\n *\n * Abstract class that houses common Module-related state and functions.\n *\n * CHANGELOG:\n * - 4/21/21: Delegated modifier logic to internal helpers to reduce contract size\n *\n */\nabstract contract ModuleBase is IModule {\n    using AddressArrayUtils for address[];\n    using Invoke for ISetToken;\n    using Position for ISetToken;\n    using PreciseUnitMath for uint256;\n    using ResourceIdentifier for IController;\n    using SafeCast for int256;\n    using SafeCast for uint256;\n    using SafeMath for uint256;\n    using SignedSafeMath for int256;\n\n    /* ============ State Variables ============ */\n\n    // Address of the controller\n    IController public controller;\n\n    /* ============ Modifiers ============ */\n\n    modifier onlyManagerAndValidSet(ISetToken _setToken) {\n        _validateOnlyManagerAndValidSet(_setToken);\n        _;\n    }\n\n    modifier onlySetManager(ISetToken _setToken, address _caller) {\n        _validateOnlySetManager(_setToken, _caller);\n        _;\n    }\n\n    modifier onlyValidAndInitializedSet(ISetToken _setToken) {\n        _validateOnlyValidAndInitializedSet(_setToken);\n        _;\n    }\n\n    /**\n     * Throws if the sender is not a SetToken's module or module not enabled\n     */\n    modifier onlyModule(ISetToken _setToken) {\n        _validateOnlyModule(_setToken);\n        _;\n    }\n\n    /**\n     * Utilized during module initializations to check that the module is in pending state\n     * and that the SetToken is valid\n     */\n    modifier onlyValidAndPendingSet(ISetToken _setToken) {\n        _validateOnlyValidAndPendingSet(_setToken);\n        _;\n    }\n\n    /* ============ Constructor ============ */\n\n    /**\n     * Set state variables and map asset pairs to their oracles\n     *\n     * @param _controller             Address of controller contract\n     */\n    constructor(IController _controller) public {\n        controller = _controller;\n    }\n\n    /* ============ Internal Functions ============ */\n\n    /**\n     * Transfers tokens from an address (that has set allowance on the module).\n     *\n     * @param  _token          The address of the ERC20 token\n     * @param  _from           The address to transfer from\n     * @param  _to             The address to transfer to\n     * @param  _quantity       The number of tokens to transfer\n     */\n    function transferFrom(IERC20 _token, address _from, address _to, uint256 _quantity) internal {\n        ExplicitERC20.transferFrom(_token, _from, _to, _quantity);\n    }\n\n    /**\n     * Gets the integration for the module with the passed in name. Validates that the address is not empty\n     */\n    function getAndValidateAdapter(string memory _integrationName) internal view returns(address) { \n        bytes32 integrationHash = getNameHash(_integrationName);\n        return getAndValidateAdapterWithHash(integrationHash);\n    }\n\n    /**\n     * Gets the integration for the module with the passed in hash. Validates that the address is not empty\n     */\n    function getAndValidateAdapterWithHash(bytes32 _integrationHash) internal view returns(address) { \n        address adapter = controller.getIntegrationRegistry().getIntegrationAdapterWithHash(\n            address(this),\n            _integrationHash\n        );\n\n        require(adapter != address(0), \"Must be valid adapter\"); \n        return adapter;\n    }\n\n    /**\n     * Gets the total fee for this module of the passed in index (fee % * quantity)\n     */\n    function getModuleFee(uint256 _feeIndex, uint256 _quantity) internal view returns(uint256) {\n        uint256 feePercentage = controller.getModuleFee(address(this), _feeIndex);\n        return _quantity.preciseMul(feePercentage);\n    }\n\n    /**\n     * Pays the _feeQuantity from the _setToken denominated in _token to the protocol fee recipient\n     */\n    function payProtocolFeeFromSetToken(ISetToken _setToken, address _token, uint256 _feeQuantity) internal {\n        if (_feeQuantity > 0) {\n            _setToken.strictInvokeTransfer(_token, controller.feeRecipient(), _feeQuantity); \n        }\n    }\n\n    /**\n     * Returns true if the module is in process of initialization on the SetToken\n     */\n    function isSetPendingInitialization(ISetToken _setToken) internal view returns(bool) {\n        return _setToken.isPendingModule(address(this));\n    }\n\n    /**\n     * Returns true if the address is the SetToken's manager\n     */\n    function isSetManager(ISetToken _setToken, address _toCheck) internal view returns(bool) {\n        return _setToken.manager() == _toCheck;\n    }\n\n    /**\n     * Returns true if SetToken must be enabled on the controller \n     * and module is registered on the SetToken\n     */\n    function isSetValidAndInitialized(ISetToken _setToken) internal view returns(bool) {\n        return controller.isSet(address(_setToken)) &&\n            _setToken.isInitializedModule(address(this));\n    }\n\n    /**\n     * Hashes the string and returns a bytes32 value\n     */\n    function getNameHash(string memory _name) internal pure returns(bytes32) {\n        return keccak256(bytes(_name));\n    }\n\n    /* ============== Modifier Helpers ===============\n     * Internal functions used to reduce bytecode size\n     */\n\n    /**\n     * Caller must SetToken manager and SetToken must be valid and initialized\n     */\n    function _validateOnlyManagerAndValidSet(ISetToken _setToken) internal view {\n       require(isSetManager(_setToken, msg.sender), \"Must be the SetToken manager\");\n       require(isSetValidAndInitialized(_setToken), \"Must be a valid and initialized SetToken\");\n    }\n\n    /**\n     * Caller must SetToken manager\n     */\n    function _validateOnlySetManager(ISetToken _setToken, address _caller) internal view {\n        require(isSetManager(_setToken, _caller), \"Must be the SetToken manager\");\n    }\n\n    /**\n     * SetToken must be valid and initialized\n     */\n    function _validateOnlyValidAndInitializedSet(ISetToken _setToken) internal view {\n        require(isSetValidAndInitialized(_setToken), \"Must be a valid and initialized SetToken\");\n    }\n\n    /**\n     * Caller must be initialized module and module must be enabled on the controller\n     */\n    function _validateOnlyModule(ISetToken _setToken) internal view {\n        require(\n            _setToken.moduleStates(msg.sender) == ISetToken.ModuleState.INITIALIZED,\n            \"Only the module can call\"\n        );\n\n        require(\n            controller.isModule(msg.sender),\n            \"Module must be enabled on controller\"\n        );\n    }\n\n    /**\n     * SetToken must be in a pending state and module must be in pending state\n     */\n    function _validateOnlyValidAndPendingSet(ISetToken _setToken) internal view {\n        require(controller.isSet(address(_setToken)), \"Must be controller-enabled SetToken\");\n        require(isSetPendingInitialization(_setToken), \"Must be pending initialization\");\n    }\n}"
			},
			"contracts/interfaces/ISetToken.sol": {
				"content": "/*\n    Copyright 2020 Set Labs Inc.\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n    SPDX-License-Identifier: Apache License, Version 2.0\n*/\npragma solidity 0.6.10;\npragma experimental \"ABIEncoderV2\";\n\nimport { IERC20 } from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n/**\n * @title ISetToken\n * @author Set Protocol\n *\n * Interface for operating with SetTokens.\n */\ninterface ISetToken is IERC20 {\n\n    /* ============ Enums ============ */\n\n    enum ModuleState {\n        NONE,\n        PENDING,\n        INITIALIZED\n    }\n\n    /* ============ Structs ============ */\n    /**\n     * The base definition of a SetToken Position\n     *\n     * @param component           Address of token in the Position\n     * @param module              If not in default state, the address of associated module\n     * @param unit                Each unit is the # of components per 10^18 of a SetToken\n     * @param positionState       Position ENUM. Default is 0; External is 1\n     * @param data                Arbitrary data\n     */\n    struct Position {\n        address component;\n        address module;\n        int256 unit;\n        uint8 positionState;\n        bytes data;\n    }\n\n    /**\n     * A struct that stores a component's cash position details and external positions\n     * This data structure allows O(1) access to a component's cash position units and \n     * virtual units.\n     *\n     * @param virtualUnit               Virtual value of a component's DEFAULT position. Stored as virtual for efficiency\n     *                                  updating all units at once via the position multiplier. Virtual units are achieved\n     *                                  by dividing a \"real\" value by the \"positionMultiplier\"\n     * @param componentIndex            \n     * @param externalPositionModules   List of external modules attached to each external position. Each module\n     *                                  maps to an external position\n     * @param externalPositions         Mapping of module => ExternalPosition struct for a given component\n     */\n    struct ComponentPosition {\n      int256 virtualUnit;\n      address[] externalPositionModules;\n      mapping(address => ExternalPosition) externalPositions;\n    }\n\n    /**\n     * A struct that stores a component's external position details including virtual unit and any\n     * auxiliary data.\n     *\n     * @param virtualUnit       Virtual value of a component's EXTERNAL position.\n     * @param data              Arbitrary data\n     */\n    struct ExternalPosition {\n      int256 virtualUnit;\n      bytes data;\n    }\n\n\n    /* ============ Functions ============ */\n    \n    function addComponent(address _component) external;\n    function removeComponent(address _component) external;\n    function editDefaultPositionUnit(address _component, int256 _realUnit) external;\n    function addExternalPositionModule(address _component, address _positionModule) external;\n    function removeExternalPositionModule(address _component, address _positionModule) external;\n    function editExternalPositionUnit(address _component, address _positionModule, int256 _realUnit) external;\n    function editExternalPositionData(address _component, address _positionModule, bytes calldata _data) external;\n\n    function invoke(address _target, uint256 _value, bytes calldata _data) external returns(bytes memory);\n\n    function editPositionMultiplier(int256 _newMultiplier) external;\n\n    function mint(address _account, uint256 _quantity) external;\n    function burn(address _account, uint256 _quantity) external;\n\n    function lock() external;\n    function unlock() external;\n\n    function addModule(address _module) external;\n    function removeModule(address _module) external;\n    function initializeModule() external;\n\n    function setManager(address _manager) external;\n\n    function manager() external view returns (address);\n    function moduleStates(address _module) external view returns (ModuleState);\n    function getModules() external view returns (address[] memory);\n    \n    function getDefaultPositionRealUnit(address _component) external view returns(int256);\n    function getExternalPositionRealUnit(address _component, address _positionModule) external view returns(int256);\n    function getComponents() external view returns(address[] memory);\n    function getExternalPositionModules(address _component) external view returns(address[] memory);\n    function getExternalPositionData(address _component, address _positionModule) external view returns(bytes memory);\n    function isExternalPositionModule(address _component, address _module) external view returns(bool);\n    function isComponent(address _component) external view returns(bool);\n    \n    function positionMultiplier() external view returns (int256);\n    function getPositions() external view returns (Position[] memory);\n    function getTotalComponentRealUnits(address _component) external view returns(int256);\n\n    function isInitializedModule(address _module) external view returns(bool);\n    function isPendingModule(address _module) external view returns(bool);\n    function isLocked() external view returns (bool);\n}"
			},
			"contracts/lib/Invoke.sol": {
				"content": "/*\n    Copyright 2020 Set Labs Inc.\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n    SPDX-License-Identifier: Apache License, Version 2.0\n*/\n\npragma solidity 0.6.10;\n\nimport { IERC20 } from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport { SafeMath } from \"@openzeppelin/contracts/math/SafeMath.sol\";\n\nimport { ISetToken } from \"../interfaces/ISetToken.sol\";\n\n\n/**\n * @title Invoke\n * @author Set Protocol\n *\n * A collection of common utility functions for interacting with the SetToken's invoke function\n */\nlibrary Invoke {\n    using SafeMath for uint256;\n\n    /* ============ Internal ============ */\n\n    /**\n     * Instructs the SetToken to set approvals of the ERC20 token to a spender.\n     *\n     * @param _setToken        SetToken instance to invoke\n     * @param _token           ERC20 token to approve\n     * @param _spender         The account allowed to spend the SetToken's balance\n     * @param _quantity        The quantity of allowance to allow\n     */\n    function invokeApprove(\n        ISetToken _setToken,\n        address _token,\n        address _spender,\n        uint256 _quantity\n    )\n        internal\n    {\n        bytes memory callData = abi.encodeWithSignature(\"approve(address,uint256)\", _spender, _quantity);\n        _setToken.invoke(_token, 0, callData);\n    }\n\n    /**\n     * Instructs the SetToken to transfer the ERC20 token to a recipient.\n     *\n     * @param _setToken        SetToken instance to invoke\n     * @param _token           ERC20 token to transfer\n     * @param _to              The recipient account\n     * @param _quantity        The quantity to transfer\n     */\n    function invokeTransfer(\n        ISetToken _setToken,\n        address _token,\n        address _to,\n        uint256 _quantity\n    )\n        internal\n    {\n        if (_quantity > 0) {\n            bytes memory callData = abi.encodeWithSignature(\"transfer(address,uint256)\", _to, _quantity);\n            _setToken.invoke(_token, 0, callData);\n        }\n    }\n\n    /**\n     * Instructs the SetToken to transfer the ERC20 token to a recipient.\n     * The new SetToken balance must equal the existing balance less the quantity transferred\n     *\n     * @param _setToken        SetToken instance to invoke\n     * @param _token           ERC20 token to transfer\n     * @param _to              The recipient account\n     * @param _quantity        The quantity to transfer\n     */\n    function strictInvokeTransfer(\n        ISetToken _setToken,\n        address _token,\n        address _to,\n        uint256 _quantity\n    )\n        internal\n    {\n        if (_quantity > 0) {\n            // Retrieve current balance of token for the SetToken\n            uint256 existingBalance = IERC20(_token).balanceOf(address(_setToken));\n\n            Invoke.invokeTransfer(_setToken, _token, _to, _quantity);\n\n            // Get new balance of transferred token for SetToken\n            uint256 newBalance = IERC20(_token).balanceOf(address(_setToken));\n\n            // Verify only the transfer quantity is subtracted\n            require(\n                newBalance == existingBalance.sub(_quantity),\n                \"Invalid post transfer balance\"\n            );\n        }\n    }\n\n    /**\n     * Instructs the SetToken to unwrap the passed quantity of WETH\n     *\n     * @param _setToken        SetToken instance to invoke\n     * @param _weth            WETH address\n     * @param _quantity        The quantity to unwrap\n     */\n    function invokeUnwrapWETH(ISetToken _setToken, address _weth, uint256 _quantity) internal {\n        bytes memory callData = abi.encodeWithSignature(\"withdraw(uint256)\", _quantity);\n        _setToken.invoke(_weth, 0, callData);\n    }\n\n    /**\n     * Instructs the SetToken to wrap the passed quantity of ETH\n     *\n     * @param _setToken        SetToken instance to invoke\n     * @param _weth            WETH address\n     * @param _quantity        The quantity to unwrap\n     */\n    function invokeWrapWETH(ISetToken _setToken, address _weth, uint256 _quantity) internal {\n        bytes memory callData = abi.encodeWithSignature(\"deposit()\");\n        _setToken.invoke(_weth, _quantity, callData);\n    }\n}"
			},
			"contracts/interfaces/IManagerIssuanceHook.sol": {
				"content": "/*\n    Copyright 2020 Set Labs Inc.\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n    SPDX-License-Identifier: Apache License, Version 2.0\n*/\npragma solidity 0.6.10;\n\nimport { ISetToken } from \"./ISetToken.sol\";\n\ninterface IManagerIssuanceHook {\n    function invokePreIssueHook(ISetToken _setToken, uint256 _issueQuantity, address _sender, address _to) external;\n    function invokePreRedeemHook(ISetToken _setToken, uint256 _redeemQuantity, address _sender, address _to) external;\n}"
			},
			"contracts/interfaces/IController.sol": {
				"content": "/*\n    Copyright 2020 Set Labs Inc.\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n    SPDX-License-Identifier: Apache License, Version 2.0\n*/\npragma solidity 0.6.10;\n\ninterface IController {\n    function addSet(address _setToken) external;\n    function feeRecipient() external view returns(address);\n    function getModuleFee(address _module, uint256 _feeType) external view returns(uint256);\n    function isModule(address _module) external view returns(bool);\n    function isSet(address _setToken) external view returns(bool);\n    function isSystemContract(address _contractAddress) external view returns (bool);\n    function resourceId(uint256 _id) external view returns(address);\n}"
			},
			"@openzeppelin/contracts/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        uint256 c = a + b;\n        if (c < a) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b > a) return (false, 0);\n        return (true, a - b);\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) return (true, 0);\n        uint256 c = a * b;\n        if (c / a != b) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a / b);\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a % b);\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a, \"SafeMath: subtraction overflow\");\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) return 0;\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: division by zero\");\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: modulo by zero\");\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a % b;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/SafeCast.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n *\n * Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\n * all math on `uint256` and `int256` and then downcasting.\n */\nlibrary SafeCast {\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        require(value < 2**128, \"SafeCast: value doesn\\'t fit in 128 bits\");\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        require(value < 2**64, \"SafeCast: value doesn\\'t fit in 64 bits\");\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        require(value < 2**32, \"SafeCast: value doesn\\'t fit in 32 bits\");\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        require(value < 2**16, \"SafeCast: value doesn\\'t fit in 16 bits\");\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits.\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        require(value < 2**8, \"SafeCast: value doesn\\'t fit in 8 bits\");\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        require(value >= 0, \"SafeCast: value must be positive\");\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt128(int256 value) internal pure returns (int128) {\n        require(value >= -2**127 && value < 2**127, \"SafeCast: value doesn\\'t fit in 128 bits\");\n        return int128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt64(int256 value) internal pure returns (int64) {\n        require(value >= -2**63 && value < 2**63, \"SafeCast: value doesn\\'t fit in 64 bits\");\n        return int64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt32(int256 value) internal pure returns (int32) {\n        require(value >= -2**31 && value < 2**31, \"SafeCast: value doesn\\'t fit in 32 bits\");\n        return int32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt16(int256 value) internal pure returns (int16) {\n        require(value >= -2**15 && value < 2**15, \"SafeCast: value doesn\\'t fit in 16 bits\");\n        return int16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits.\n     *\n     * _Available since v3.1._\n     */\n    function toInt8(int256 value) internal pure returns (int8) {\n        require(value >= -2**7 && value < 2**7, \"SafeCast: value doesn\\'t fit in 8 bits\");\n        return int8(value);\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        require(value < 2**255, \"SafeCast: value doesn't fit in an int256\");\n        return int256(value);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor () internal {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and make it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"@openzeppelin/contracts/math/SignedSafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @title SignedSafeMath\n * @dev Signed math operations with safety checks that revert on error.\n */\nlibrary SignedSafeMath {\n    int256 constant private _INT256_MIN = -2**255;\n\n    /**\n     * @dev Returns the multiplication of two signed integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(int256 a, int256 b) internal pure returns (int256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        require(!(a == -1 && b == _INT256_MIN), \"SignedSafeMath: multiplication overflow\");\n\n        int256 c = a * b;\n        require(c / a == b, \"SignedSafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two signed integers. Reverts on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(int256 a, int256 b) internal pure returns (int256) {\n        require(b != 0, \"SignedSafeMath: division by zero\");\n        require(!(b == -1 && a == _INT256_MIN), \"SignedSafeMath: division overflow\");\n\n        int256 c = a / b;\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two signed integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(int256 a, int256 b) internal pure returns (int256) {\n        int256 c = a - b;\n        require((b >= 0 && c <= a) || (b < 0 && c > a), \"SignedSafeMath: subtraction overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the addition of two signed integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(int256 a, int256 b) internal pure returns (int256) {\n        int256 c = a + b;\n        require((b >= 0 && c >= a) || (b < 0 && c < a), \"SignedSafeMath: addition overflow\");\n\n        return c;\n    }\n}\n"
			},
			"contracts/lib/ResourceIdentifier.sol": {
				"content": "/*\n    Copyright 2020 Set Labs Inc.\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n    SPDX-License-Identifier: Apache License, Version 2.0\n*/\n\npragma solidity 0.6.10;\n\nimport { IController } from \"../interfaces/IController.sol\";\nimport { IIntegrationRegistry } from \"../interfaces/IIntegrationRegistry.sol\";\nimport { IPriceOracle } from \"../interfaces/IPriceOracle.sol\";\nimport { ISetValuer } from \"../interfaces/ISetValuer.sol\";\n\n/**\n * @title ResourceIdentifier\n * @author Set Protocol\n *\n * A collection of utility functions to fetch information related to Resource contracts in the system\n */\nlibrary ResourceIdentifier {\n\n    // IntegrationRegistry will always be resource ID 0 in the system\n    uint256 constant internal INTEGRATION_REGISTRY_RESOURCE_ID = 0;\n    // PriceOracle will always be resource ID 1 in the system\n    uint256 constant internal PRICE_ORACLE_RESOURCE_ID = 1;\n    // SetValuer resource will always be resource ID 2 in the system\n    uint256 constant internal SET_VALUER_RESOURCE_ID = 2;\n\n    /* ============ Internal ============ */\n\n    /**\n     * Gets the instance of integration registry stored on Controller. Note: IntegrationRegistry is stored as index 0 on\n     * the Controller\n     */\n    function getIntegrationRegistry(IController _controller) internal view returns (IIntegrationRegistry) {\n        return IIntegrationRegistry(_controller.resourceId(INTEGRATION_REGISTRY_RESOURCE_ID));\n    }\n\n    /**\n     * Gets instance of price oracle on Controller. Note: PriceOracle is stored as index 1 on the Controller\n     */\n    function getPriceOracle(IController _controller) internal view returns (IPriceOracle) {\n        return IPriceOracle(_controller.resourceId(PRICE_ORACLE_RESOURCE_ID));\n    }\n\n    /**\n     * Gets the instance of Set valuer on Controller. Note: SetValuer is stored as index 2 on the Controller\n     */\n    function getSetValuer(IController _controller) internal view returns (ISetValuer) {\n        return ISetValuer(_controller.resourceId(SET_VALUER_RESOURCE_ID));\n    }\n}"
			},
			"contracts/interfaces/IModule.sol": {
				"content": "/*\n    Copyright 2020 Set Labs Inc.\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n    SPDX-License-Identifier: Apache License, Version 2.0\n*/\npragma solidity 0.6.10;\n\n\n/**\n * @title IModule\n * @author Set Protocol\n *\n * Interface for interacting with Modules.\n */\ninterface IModule {\n    /**\n     * Called by a SetToken to notify that this module was removed from the Set token. Any logic can be included\n     * in case checks need to be made or state needs to be cleared.\n     */\n    function removeModule() external;\n}"
			},
			"contracts/lib/ExplicitERC20.sol": {
				"content": "/*\n    Copyright 2020 Set Labs Inc.\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n    SPDX-License-Identifier: Apache License, Version 2.0\n*/\n\npragma solidity 0.6.10;\n\nimport { IERC20 } from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport { SafeERC20 } from \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\";\nimport { SafeMath } from \"@openzeppelin/contracts/math/SafeMath.sol\";\n\n/**\n * @title ExplicitERC20\n * @author Set Protocol\n *\n * Utility functions for ERC20 transfers that require the explicit amount to be transferred.\n */\nlibrary ExplicitERC20 {\n    using SafeMath for uint256;\n\n    /**\n     * When given allowance, transfers a token from the \"_from\" to the \"_to\" of quantity \"_quantity\".\n     * Ensures that the recipient has received the correct quantity (ie no fees taken on transfer)\n     *\n     * @param _token           ERC20 token to approve\n     * @param _from            The account to transfer tokens from\n     * @param _to              The account to transfer tokens to\n     * @param _quantity        The quantity to transfer\n     */\n    function transferFrom(\n        IERC20 _token,\n        address _from,\n        address _to,\n        uint256 _quantity\n    )\n        internal\n    {\n        // Call specified ERC20 contract to transfer tokens (via proxy).\n        if (_quantity > 0) {\n            uint256 existingBalance = _token.balanceOf(_to);\n\n            SafeERC20.safeTransferFrom(\n                _token,\n                _from,\n                _to,\n                _quantity\n            );\n\n            uint256 newBalance = _token.balanceOf(_to);\n\n            // Verify transfer quantity is reflected in balance\n            require(\n                newBalance == existingBalance.add(_quantity),\n                \"Invalid post transfer balance\"\n            );\n        }\n    }\n}\n"
			},
			"contracts/lib/AddressArrayUtils.sol": {
				"content": "/*\n    Copyright 2020 Set Labs Inc.\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n    SPDX-License-Identifier: Apache License, Version 2.0\n\n*/\n\npragma solidity 0.6.10;\n\n/**\n * @title AddressArrayUtils\n * @author Set Protocol\n *\n * Utility functions to handle Address Arrays\n *\n * CHANGELOG:\n * - 4/21/21: Added validatePairsWithArray methods\n */\nlibrary AddressArrayUtils {\n\n    /**\n     * Finds the index of the first occurrence of the given element.\n     * @param A The input array to search\n     * @param a The value to find\n     * @return Returns (index and isIn) for the first occurrence starting from index 0\n     */\n    function indexOf(address[] memory A, address a) internal pure returns (uint256, bool) {\n        uint256 length = A.length;\n        for (uint256 i = 0; i < length; i++) {\n            if (A[i] == a) {\n                return (i, true);\n            }\n        }\n        return (uint256(-1), false);\n    }\n\n    /**\n    * Returns true if the value is present in the list. Uses indexOf internally.\n    * @param A The input array to search\n    * @param a The value to find\n    * @return Returns isIn for the first occurrence starting from index 0\n    */\n    function contains(address[] memory A, address a) internal pure returns (bool) {\n        (, bool isIn) = indexOf(A, a);\n        return isIn;\n    }\n\n    /**\n    * Returns true if there are 2 elements that are the same in an array\n    * @param A The input array to search\n    * @return Returns boolean for the first occurrence of a duplicate\n    */\n    function hasDuplicate(address[] memory A) internal pure returns(bool) {\n        require(A.length > 0, \"A is empty\");\n\n        for (uint256 i = 0; i < A.length - 1; i++) {\n            address current = A[i];\n            for (uint256 j = i + 1; j < A.length; j++) {\n                if (current == A[j]) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    /**\n     * @param A The input array to search\n     * @param a The address to remove\n     * @return Returns the array with the object removed.\n     */\n    function remove(address[] memory A, address a)\n        internal\n        pure\n        returns (address[] memory)\n    {\n        (uint256 index, bool isIn) = indexOf(A, a);\n        if (!isIn) {\n            revert(\"Address not in array.\");\n        } else {\n            (address[] memory _A,) = pop(A, index);\n            return _A;\n        }\n    }\n\n    /**\n     * @param A The input array to search\n     * @param a The address to remove\n     */\n    function removeStorage(address[] storage A, address a)\n        internal\n    {\n        (uint256 index, bool isIn) = indexOf(A, a);\n        if (!isIn) {\n            revert(\"Address not in array.\");\n        } else {\n            uint256 lastIndex = A.length - 1; // If the array would be empty, the previous line would throw, so no underflow here\n            if (index != lastIndex) { A[index] = A[lastIndex]; }\n            A.pop();\n        }\n    }\n\n    /**\n    * Removes specified index from array\n    * @param A The input array to search\n    * @param index The index to remove\n    * @return Returns the new array and the removed entry\n    */\n    function pop(address[] memory A, uint256 index)\n        internal\n        pure\n        returns (address[] memory, address)\n    {\n        uint256 length = A.length;\n        require(index < A.length, \"Index must be < A length\");\n        address[] memory newAddresses = new address[](length - 1);\n        for (uint256 i = 0; i < index; i++) {\n            newAddresses[i] = A[i];\n        }\n        for (uint256 j = index + 1; j < length; j++) {\n            newAddresses[j - 1] = A[j];\n        }\n        return (newAddresses, A[index]);\n    }\n\n    /**\n     * Returns the combination of the two arrays\n     * @param A The first array\n     * @param B The second array\n     * @return Returns A extended by B\n     */\n    function extend(address[] memory A, address[] memory B) internal pure returns (address[] memory) {\n        uint256 aLength = A.length;\n        uint256 bLength = B.length;\n        address[] memory newAddresses = new address[](aLength + bLength);\n        for (uint256 i = 0; i < aLength; i++) {\n            newAddresses[i] = A[i];\n        }\n        for (uint256 j = 0; j < bLength; j++) {\n            newAddresses[aLength + j] = B[j];\n        }\n        return newAddresses;\n    }\n\n    /**\n     * Validate that address and uint array lengths match. Validate address array is not empty\n     * and contains no duplicate elements.\n     *\n     * @param A         Array of addresses\n     * @param B         Array of uint\n     */\n    function validatePairsWithArray(address[] memory A, uint[] memory B) internal pure {\n        require(A.length == B.length, \"Array length mismatch\");\n        _validateLengthAndUniqueness(A);\n    }\n\n    /**\n     * Validate that address and bool array lengths match. Validate address array is not empty\n     * and contains no duplicate elements.\n     *\n     * @param A         Array of addresses\n     * @param B         Array of bool\n     */\n    function validatePairsWithArray(address[] memory A, bool[] memory B) internal pure {\n        require(A.length == B.length, \"Array length mismatch\");\n        _validateLengthAndUniqueness(A);\n    }\n\n    /**\n     * Validate that address and string array lengths match. Validate address array is not empty\n     * and contains no duplicate elements.\n     *\n     * @param A         Array of addresses\n     * @param B         Array of strings\n     */\n    function validatePairsWithArray(address[] memory A, string[] memory B) internal pure {\n        require(A.length == B.length, \"Array length mismatch\");\n        _validateLengthAndUniqueness(A);\n    }\n\n    /**\n     * Validate that address array lengths match, and calling address array are not empty\n     * and contain no duplicate elements.\n     *\n     * @param A         Array of addresses\n     * @param B         Array of addresses\n     */\n    function validatePairsWithArray(address[] memory A, address[] memory B) internal pure {\n        require(A.length == B.length, \"Array length mismatch\");\n        _validateLengthAndUniqueness(A);\n    }\n\n    /**\n     * Validate that address and bytes array lengths match. Validate address array is not empty\n     * and contains no duplicate elements.\n     *\n     * @param A         Array of addresses\n     * @param B         Array of bytes\n     */\n    function validatePairsWithArray(address[] memory A, bytes[] memory B) internal pure {\n        require(A.length == B.length, \"Array length mismatch\");\n        _validateLengthAndUniqueness(A);\n    }\n\n    /**\n     * Validate address array is not empty and contains no duplicate elements.\n     *\n     * @param A          Array of addresses\n     */\n    function _validateLengthAndUniqueness(address[] memory A) internal pure {\n        require(A.length > 0, \"Array length must be > 0\");\n        require(!hasDuplicate(A), \"Cannot duplicate addresses\");\n    }\n}\n"
			},
			"contracts/interfaces/ISetValuer.sol": {
				"content": "/*\n    Copyright 2020 Set Labs Inc.\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n    SPDX-License-Identifier: Apache License, Version 2.0\n*/\npragma solidity 0.6.10;\n\nimport { ISetToken } from \"./ISetToken.sol\";\n\ninterface ISetValuer {\n    function calculateSetTokenValuation(ISetToken _setToken, address _quoteAsset) external view returns (uint256);\n}"
			},
			"contracts/interfaces/IPriceOracle.sol": {
				"content": "/*\n    Copyright 2020 Set Labs Inc.\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n    SPDX-License-Identifier: Apache License, Version 2.0\n*/\npragma solidity 0.6.10;\n\n/**\n * @title IPriceOracle\n * @author Set Protocol\n *\n * Interface for interacting with PriceOracle\n */\ninterface IPriceOracle {\n\n    /* ============ Functions ============ */\n\n    function getPrice(address _assetOne, address _assetTwo) external view returns (uint256);\n    function masterQuoteAsset() external view returns (address);\n}"
			},
			"contracts/interfaces/IIntegrationRegistry.sol": {
				"content": "/*\n    Copyright 2020 Set Labs Inc.\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n    SPDX-License-Identifier: Apache License, Version 2.0\n*/\npragma solidity 0.6.10;\n\ninterface IIntegrationRegistry {\n    function addIntegration(address _module, string memory _id, address _wrapper) external;\n    function getIntegrationAdapter(address _module, string memory _id) external view returns(address);\n    function getIntegrationAdapterWithHash(address _module, bytes32 _id) external view returns(address);\n    function isValidIntegration(address _module, string memory _id) external view returns(bool);\n}"
			},
			"@openzeppelin/contracts/token/ERC20/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"../../math/SafeMath.sol\";\nimport \"../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using SafeMath for uint256;\n    using Address for address;\n\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        // solhint-disable-next-line max-line-length\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \"SafeERC20: decreased allowance below zero\");\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) { // Return data is optional\n            // solhint-disable-next-line max-line-length\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.2 <0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { size := extcodesize(account) }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n        (bool success, ) = recipient.call{ value: amount }(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain`call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n      return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/math/SafeMath.sol\":630:7224  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":630:7224  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122008c12926a211f62f29e538b6499d0a935016bb2103756f9f85e9845691d3006664736f6c634300060a0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122008c12926a211f62f29e538b6499d0a935016bb2103756f9f85e9845691d3006664736f6c634300060a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD 0xC1 0x29 0x26 LOG2 GT 0xF6 0x2F 0x29 0xE5 CODESIZE 0xB6 0x49 SWAP14 EXP SWAP4 POP AND 0xBB 0x21 SUB PUSH22 0x6F9F85E9845691D3006664736F6C634300060A003300 ",
							"sourceMap": "630:6594:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122008c12926a211f62f29e538b6499d0a935016bb2103756f9f85e9845691d3006664736f6c634300060a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD 0xC1 0x29 0x26 LOG2 GT 0xF6 0x2F 0x29 0xE5 CODESIZE 0xB6 0x49 SWAP14 EXP SWAP4 POP AND 0xBB 0x21 SUB PUSH22 0x6F9F85E9845691D3006664736F6C634300060A003300 ",
							"sourceMap": "630:6594:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122008c12926a211f62f29e538b6499d0a935016bb2103756f9f85e9845691d3006664736f6c634300060a0033",
									".code": [
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.10+commit.00c0fcaf\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"@openzeppelin/contracts/math/SignedSafeMath.sol": {
				"SignedSafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Signed math operations with safety checks that revert on error.",
						"methods": {},
						"title": "SignedSafeMath"
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/math/SignedSafeMath.sol\":171:2666  library SignedSafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/math/SignedSafeMath.sol\":171:2666  library SignedSafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205fa6025ec62e0635604642a3cdeeb0314d4c1605e47f5fbbf206317936dd8dee64736f6c634300060a0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205fa6025ec62e0635604642a3cdeeb0314d4c1605e47f5fbbf206317936dd8dee64736f6c634300060a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5F 0xA6 MUL 0x5E 0xC6 0x2E MOD CALLDATALOAD PUSH1 0x46 TIMESTAMP LOG3 0xCD 0xEE 0xB0 BALANCE 0x4D 0x4C AND SDIV 0xE4 PUSH32 0x5FBBF206317936DD8DEE64736F6C634300060A00330000000000000000000000 ",
							"sourceMap": "171:2495:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205fa6025ec62e0635604642a3cdeeb0314d4c1605e47f5fbbf206317936dd8dee64736f6c634300060a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5F 0xA6 MUL 0x5E 0xC6 0x2E MOD CALLDATALOAD PUSH1 0x46 TIMESTAMP LOG3 0xCD 0xEE 0xB0 BALANCE 0x4D 0x4C AND SDIV 0xE4 PUSH32 0x5FBBF206317936DD8DEE64736F6C634300060A00330000000000000000000000 ",
							"sourceMap": "171:2495:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(int256,int256)": "infinite",
								"div(int256,int256)": "infinite",
								"mul(int256,int256)": "infinite",
								"sub(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 171,
									"end": 2666,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 171,
									"end": 2666,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 171,
									"end": 2666,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 171,
									"end": 2666,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 171,
									"end": 2666,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 171,
									"end": 2666,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 171,
									"end": 2666,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 171,
									"end": 2666,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 171,
									"end": 2666,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 171,
									"end": 2666,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 171,
									"end": 2666,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 171,
									"end": 2666,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 171,
									"end": 2666,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 171,
									"end": 2666,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 171,
									"end": 2666,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 171,
									"end": 2666,
									"name": "INVALID",
									"source": 1
								},
								{
									"begin": 171,
									"end": 2666,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 171,
									"end": 2666,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 171,
									"end": 2666,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 171,
									"end": 2666,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 171,
									"end": 2666,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 171,
									"end": 2666,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 171,
									"end": 2666,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 171,
									"end": 2666,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 171,
									"end": 2666,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 171,
									"end": 2666,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 171,
									"end": 2666,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205fa6025ec62e0635604642a3cdeeb0314d4c1605e47f5fbbf206317936dd8dee64736f6c634300060a0033",
									".code": [
										{
											"begin": 171,
											"end": 2666,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 171,
											"end": 2666,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 171,
											"end": 2666,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 171,
											"end": 2666,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 171,
											"end": 2666,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 171,
											"end": 2666,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 171,
											"end": 2666,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 171,
											"end": 2666,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 171,
											"end": 2666,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.10+commit.00c0fcaf\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signed math operations with safety checks that revert on error.\",\"methods\":{},\"title\":\"SignedSafeMath\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/math/SignedSafeMath.sol\":\"SignedSafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/math/SignedSafeMath.sol\":{\"keccak256\":\"0xd17ac7e1d8f83d20d80e652adfed83da122f3a3c7b69fefa2985d85aebf0a3e9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://64e13936e5e7382737f9c12918f5365fd9e68bf96e83d66f3323f47b1d7162c7\",\"dweb:/ipfs/Qmd2qkUCFdpAXJ6NNTkPxmkKaPzYYmeBhDey8N8XN39wqw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.10+commit.00c0fcaf\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"methods": {},
						"title": "SafeERC20"
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":616:3720  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":616:3720  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d206cfe4477b97eea716918262d6b9240968d4b56c262cd80f2d8baa3c9bf0e664736f6c634300060a0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d206cfe4477b97eea716918262d6b9240968d4b56c262cd80f2d8baa3c9bf0e664736f6c634300060a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD2 MOD 0xCF 0xE4 SELFBALANCE PUSH28 0x97EEA716918262D6B9240968D4B56C262CD80F2D8BAA3C9BF0E66473 PUSH16 0x6C634300060A00330000000000000000 ",
							"sourceMap": "616:3104:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d206cfe4477b97eea716918262d6b9240968d4b56c262cd80f2d8baa3c9bf0e664736f6c634300060a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD2 MOD 0xCF 0xE4 SELFBALANCE PUSH28 0x97EEA716918262D6B9240968D4B56C262CD80F2D8BAA3C9BF0E66473 PUSH16 0x6C634300060A00330000000000000000 ",
							"sourceMap": "616:3104:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 616,
									"end": 3720,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "INVALID",
									"source": 3
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d206cfe4477b97eea716918262d6b9240968d4b56c262cd80f2d8baa3c9bf0e664736f6c634300060a0033",
									".code": [
										{
											"begin": 616,
											"end": 3720,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 616,
											"end": 3720,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 616,
											"end": 3720,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 616,
											"end": 3720,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 616,
											"end": 3720,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 616,
											"end": 3720,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 616,
											"end": 3720,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 616,
											"end": 3720,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 616,
											"end": 3720,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.10+commit.00c0fcaf\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"methods\":{},\"title\":\"SafeERC20\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xf12dfbe97e6276980b83d2830bb0eb75e0cf4f3e626c2471137f82158ae6a0fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a849c2d95e85463909e5b5c920b13e7a11216ca14127085e16d22b9379d52a\",\"dweb:/ipfs/QmUg3CZDbCCcQdroEpexBy5ZFd5vD1UWijWQq9qHZjtJNQ\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":134:7818  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":134:7818  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b7e4a441e46ca7eb59a66b489e6302096a6c5343fecebdf9795deefc5fd8303864736f6c634300060a0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b7e4a441e46ca7eb59a66b489e6302096a6c5343fecebdf9795deefc5fd8303864736f6c634300060a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB7 0xE4 LOG4 COINBASE 0xE4 PUSH13 0xA7EB59A66B489E6302096A6C53 NUMBER INVALID 0xCE 0xBD 0xF9 PUSH26 0x5DEEFC5FD8303864736F6C634300060A00330000000000000000 ",
							"sourceMap": "134:7684:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b7e4a441e46ca7eb59a66b489e6302096a6c5343fecebdf9795deefc5fd8303864736f6c634300060a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB7 0xE4 LOG4 COINBASE 0xE4 PUSH13 0xA7EB59A66B489E6302096A6C53 NUMBER INVALID 0xCE 0xBD 0xF9 PUSH26 0x5DEEFC5FD8303864736F6C634300060A00330000000000000000 ",
							"sourceMap": "134:7684:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "INVALID",
									"source": 4
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b7e4a441e46ca7eb59a66b489e6302096a6c5343fecebdf9795deefc5fd8303864736f6c634300060a0033",
									".code": [
										{
											"begin": 134,
											"end": 7818,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.10+commit.00c0fcaf\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.10+commit.00c0fcaf\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x8bbbc2f5c10065ee272592ae0a7a6ceb23de2fbd81564ee0bb015ecf404d5f61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b95e56c1640d0ef789fc5c16269e141e992f6c8ac97cc6d377bd3825e9cab182\",\"dweb:/ipfs/QmVzaxJZY51EhagrcNnkxoU6Uq17RhATe7aHvtkC6wUkgK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1131,
								"contract": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"@openzeppelin/contracts/utils/SafeCast.sol": {
				"SafeCast": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's uintXX/intXX casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always. Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing all math on `uint256` and `int256` and then downcasting.",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/SafeCast.sol\":777:6542  library SafeCast {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/SafeCast.sol\":777:6542  library SafeCast {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208b6f8b21d4ed144f624522676041970aa81eee0979b9baf24cdc56ae58ba786b64736f6c634300060a0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208b6f8b21d4ed144f624522676041970aa81eee0979b9baf24cdc56ae58ba786b64736f6c634300060a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP12 PUSH16 0x8B21D4ED144F624522676041970AA81E 0xEE MULMOD PUSH26 0xB9BAF24CDC56AE58BA786B64736F6C634300060A003300000000 ",
							"sourceMap": "777:5765:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208b6f8b21d4ed144f624522676041970aa81eee0979b9baf24cdc56ae58ba786b64736f6c634300060a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP12 PUSH16 0x8B21D4ED144F624522676041970AA81E 0xEE MULMOD PUSH26 0xB9BAF24CDC56AE58BA786B64736F6C634300060A003300000000 ",
							"sourceMap": "777:5765:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"toInt128(int256)": "infinite",
								"toInt16(int256)": "infinite",
								"toInt256(uint256)": "infinite",
								"toInt32(int256)": "infinite",
								"toInt64(int256)": "infinite",
								"toInt8(int256)": "infinite",
								"toUint128(uint256)": "infinite",
								"toUint16(uint256)": "infinite",
								"toUint256(int256)": "infinite",
								"toUint32(uint256)": "infinite",
								"toUint64(uint256)": "infinite",
								"toUint8(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 777,
									"end": 6542,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 777,
									"end": 6542,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 777,
									"end": 6542,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 777,
									"end": 6542,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 777,
									"end": 6542,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 777,
									"end": 6542,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 777,
									"end": 6542,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 777,
									"end": 6542,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 777,
									"end": 6542,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 777,
									"end": 6542,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 777,
									"end": 6542,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 777,
									"end": 6542,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 777,
									"end": 6542,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 777,
									"end": 6542,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 777,
									"end": 6542,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 777,
									"end": 6542,
									"name": "INVALID",
									"source": 6
								},
								{
									"begin": 777,
									"end": 6542,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 777,
									"end": 6542,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 777,
									"end": 6542,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 777,
									"end": 6542,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 777,
									"end": 6542,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 777,
									"end": 6542,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 777,
									"end": 6542,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 777,
									"end": 6542,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 777,
									"end": 6542,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 777,
									"end": 6542,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 777,
									"end": 6542,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208b6f8b21d4ed144f624522676041970aa81eee0979b9baf24cdc56ae58ba786b64736f6c634300060a0033",
									".code": [
										{
											"begin": 777,
											"end": 6542,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 777,
											"end": 6542,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 777,
											"end": 6542,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 777,
											"end": 6542,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 777,
											"end": 6542,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 777,
											"end": 6542,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 777,
											"end": 6542,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 777,
											"end": 6542,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 777,
											"end": 6542,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.10+commit.00c0fcaf\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always. Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing all math on `uint256` and `int256` and then downcasting.\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/SafeCast.sol\":{\"keccak256\":\"0x7b2b8baa20fd60ab4a328c8e34c64a353651b80ba4b5b157cbb61813f6f85d55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://125b7f9efa390e663d630c62b97ae4e0707f31623bea989ef94c97ca9d777dd2\",\"dweb:/ipfs/QmaaLSuwvqK7wqcgyS3utHgfmB7RntcvP7eJSuvQod8Z9P\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/interfaces/IController.sol": {
				"IController": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_setToken",
									"type": "address"
								}
							],
							"name": "addSet",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeRecipient",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_module",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_feeType",
									"type": "uint256"
								}
							],
							"name": "getModuleFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_module",
									"type": "address"
								}
							],
							"name": "isModule",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_setToken",
									"type": "address"
								}
							],
							"name": "isSet",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_contractAddress",
									"type": "address"
								}
							],
							"name": "isSystemContract",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "resourceId",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addSet(address)": "d580ded4",
							"feeRecipient()": "46904840",
							"getModuleFee(address,uint256)": "792aa04f",
							"isModule(address)": "42f6e389",
							"isSet(address)": "74ebe3ec",
							"isSystemContract(address)": "13bc6d4b",
							"resourceId(uint256)": "e765ced6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.10+commit.00c0fcaf\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_setToken\",\"type\":\"address\"}],\"name\":\"addSet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_module\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_feeType\",\"type\":\"uint256\"}],\"name\":\"getModuleFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_module\",\"type\":\"address\"}],\"name\":\"isModule\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_setToken\",\"type\":\"address\"}],\"name\":\"isSet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractAddress\",\"type\":\"address\"}],\"name\":\"isSystemContract\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"resourceId\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IController.sol\":\"IController\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IController.sol\":{\"keccak256\":\"0x8deb2f94e24e9524ce4de88804c98694781d8f38fbadccc3207d28b8e0ce4911\",\"license\":\"Apache License\",\"urls\":[\"bzz-raw://755f656a314737b0eeffbee1b7dc257b751c0764d70f008beb6cccececaeb2d7\",\"dweb:/ipfs/QmUmFs1ukqWUmfcm5irGYHYZnv8NwMYGD3EUuoA5BvbhER\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/interfaces/IIntegrationRegistry.sol": {
				"IIntegrationRegistry": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_module",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "_id",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "_wrapper",
									"type": "address"
								}
							],
							"name": "addIntegration",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_module",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "_id",
									"type": "string"
								}
							],
							"name": "getIntegrationAdapter",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_module",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "_id",
									"type": "bytes32"
								}
							],
							"name": "getIntegrationAdapterWithHash",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_module",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "_id",
									"type": "string"
								}
							],
							"name": "isValidIntegration",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addIntegration(address,string,address)": "a30945cb",
							"getIntegrationAdapter(address,string)": "a19ba6dc",
							"getIntegrationAdapterWithHash(address,bytes32)": "e6d642c5",
							"isValidIntegration(address,string)": "639a3978"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.10+commit.00c0fcaf\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_module\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_id\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_wrapper\",\"type\":\"address\"}],\"name\":\"addIntegration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_module\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_id\",\"type\":\"string\"}],\"name\":\"getIntegrationAdapter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_module\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_id\",\"type\":\"bytes32\"}],\"name\":\"getIntegrationAdapterWithHash\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_module\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_id\",\"type\":\"string\"}],\"name\":\"isValidIntegration\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IIntegrationRegistry.sol\":\"IIntegrationRegistry\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IIntegrationRegistry.sol\":{\"keccak256\":\"0xb9a2f67aa926694fcfa6b9f2300423a253162078b12e3ff0b8c864c5a143c975\",\"license\":\"Apache License\",\"urls\":[\"bzz-raw://2448da2adc2ca3c858e2413a0833f7a384e4a9430af0a923411d0d0ff1c5076d\",\"dweb:/ipfs/QmTEdnKViq2riEoDzfLwuXxtWdieLL8ZfRL7WanfQwXxHf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/interfaces/IManagerIssuanceHook.sol": {
				"IManagerIssuanceHook": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract ISetToken",
									"name": "_setToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_issueQuantity",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								}
							],
							"name": "invokePreIssueHook",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ISetToken",
									"name": "_setToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_redeemQuantity",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								}
							],
							"name": "invokePreRedeemHook",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"invokePreIssueHook(address,uint256,address,address)": "a0458083",
							"invokePreRedeemHook(address,uint256,address,address)": "9b19c2bf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.10+commit.00c0fcaf\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ISetToken\",\"name\":\"_setToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_issueQuantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"invokePreIssueHook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISetToken\",\"name\":\"_setToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_redeemQuantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"invokePreRedeemHook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IManagerIssuanceHook.sol\":\"IManagerIssuanceHook\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"contracts/interfaces/IManagerIssuanceHook.sol\":{\"keccak256\":\"0x3e7ee6c0e4cd496b28d7b0a6bc3cc1823f70ef3ba2f096f258610f17d3b4faea\",\"license\":\"Apache License\",\"urls\":[\"bzz-raw://c708d6e63031497b2148a454a27437a56b6ae9f5e44bb00f05e16814ae911ec5\",\"dweb:/ipfs/QmetNS7a4qwmiynTXVkG54KPdRFAHz57aaN9BEyjqf5yCM\"]},\"contracts/interfaces/ISetToken.sol\":{\"keccak256\":\"0x2f24b90ffc5e6bb97b169482fa915e9016fadbaade011a73d352201b396ebe12\",\"license\":\"Apache License\",\"urls\":[\"bzz-raw://8fbcd20954a2c646a953586e4a0a1cca0b968b3726c24c304dc3f6a4ce632f72\",\"dweb:/ipfs/QmQRHbqemSeohZuMWDaNrUaoQUUbP9i9UUdwn4Pph4ayAj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/interfaces/IModule.sol": {
				"IModule": {
					"abi": [
						{
							"inputs": [],
							"name": "removeModule",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Set Protocol Interface for interacting with Modules.",
						"methods": {},
						"title": "IModule"
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"removeModule()": "847ef08d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.10+commit.00c0fcaf\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"removeModule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Set Protocol Interface for interacting with Modules.\",\"methods\":{},\"title\":\"IModule\"},\"userdoc\":{\"methods\":{\"removeModule()\":{\"notice\":\"Called by a SetToken to notify that this module was removed from the Set token. Any logic can be included in case checks need to be made or state needs to be cleared.\"}}}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IModule.sol\":\"IModule\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IModule.sol\":{\"keccak256\":\"0xc6fea62e0c2fe10548cb32ff8188b7f036cd072ea2048b664e90b3570ce538fb\",\"license\":\"Apache License\",\"urls\":[\"bzz-raw://2a7594ef174c6bce3a502d34269dccf4e7f7382fc521aa9421bf31d000ca3525\",\"dweb:/ipfs/QmRBnDZnMrsEm45nhTAjzvb7znsKXdVTWy8f6FX1CiH8cu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {
							"removeModule()": {
								"notice": "Called by a SetToken to notify that this module was removed from the Set token. Any logic can be included in case checks need to be made or state needs to be cleared."
							}
						}
					}
				}
			},
			"contracts/interfaces/IPriceOracle.sol": {
				"IPriceOracle": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_assetOne",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_assetTwo",
									"type": "address"
								}
							],
							"name": "getPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "masterQuoteAsset",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Set Protocol Interface for interacting with PriceOracle",
						"methods": {},
						"title": "IPriceOracle"
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getPrice(address,address)": "ac41865a",
							"masterQuoteAsset()": "34283354"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.10+commit.00c0fcaf\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_assetOne\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_assetTwo\",\"type\":\"address\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"masterQuoteAsset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Set Protocol Interface for interacting with PriceOracle\",\"methods\":{},\"title\":\"IPriceOracle\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IPriceOracle.sol\":\"IPriceOracle\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IPriceOracle.sol\":{\"keccak256\":\"0xe7882bdc45986d01ebdbe189ac7b2b42de6ba06d070a331c2de61668ac805a62\",\"license\":\"Apache License\",\"urls\":[\"bzz-raw://ad37f4650905c70d415ddc8836e363e8a386f30a9764bb6b3f9fb0e183d73703\",\"dweb:/ipfs/QmNpk6Q3nAZmh4GDsdPaU56yLR4vuAwnoqQuQzBndDJTVq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/interfaces/ISetToken.sol": {
				"ISetToken": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_component",
									"type": "address"
								}
							],
							"name": "addComponent",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_component",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_positionModule",
									"type": "address"
								}
							],
							"name": "addExternalPositionModule",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_module",
									"type": "address"
								}
							],
							"name": "addModule",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_quantity",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_component",
									"type": "address"
								},
								{
									"internalType": "int256",
									"name": "_realUnit",
									"type": "int256"
								}
							],
							"name": "editDefaultPositionUnit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_component",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_positionModule",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "editExternalPositionData",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_component",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_positionModule",
									"type": "address"
								},
								{
									"internalType": "int256",
									"name": "_realUnit",
									"type": "int256"
								}
							],
							"name": "editExternalPositionUnit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "_newMultiplier",
									"type": "int256"
								}
							],
							"name": "editPositionMultiplier",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getComponents",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_component",
									"type": "address"
								}
							],
							"name": "getDefaultPositionRealUnit",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_component",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_positionModule",
									"type": "address"
								}
							],
							"name": "getExternalPositionData",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_component",
									"type": "address"
								}
							],
							"name": "getExternalPositionModules",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_component",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_positionModule",
									"type": "address"
								}
							],
							"name": "getExternalPositionRealUnit",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getModules",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPositions",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "component",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "module",
											"type": "address"
										},
										{
											"internalType": "int256",
											"name": "unit",
											"type": "int256"
										},
										{
											"internalType": "uint8",
											"name": "positionState",
											"type": "uint8"
										},
										{
											"internalType": "bytes",
											"name": "data",
											"type": "bytes"
										}
									],
									"internalType": "struct ISetToken.Position[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_component",
									"type": "address"
								}
							],
							"name": "getTotalComponentRealUnits",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initializeModule",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_target",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "invoke",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_component",
									"type": "address"
								}
							],
							"name": "isComponent",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_component",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_module",
									"type": "address"
								}
							],
							"name": "isExternalPositionModule",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_module",
									"type": "address"
								}
							],
							"name": "isInitializedModule",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isLocked",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_module",
									"type": "address"
								}
							],
							"name": "isPendingModule",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lock",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "manager",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_quantity",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_module",
									"type": "address"
								}
							],
							"name": "moduleStates",
							"outputs": [
								{
									"internalType": "enum ISetToken.ModuleState",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "positionMultiplier",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_component",
									"type": "address"
								}
							],
							"name": "removeComponent",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_component",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_positionModule",
									"type": "address"
								}
							],
							"name": "removeExternalPositionModule",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_module",
									"type": "address"
								}
							],
							"name": "removeModule",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_manager",
									"type": "address"
								}
							],
							"name": "setManager",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unlock",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Set Protocol Interface for operating with SetTokens.",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"title": "ISetToken"
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addComponent(address)": "4e353270",
							"addExternalPositionModule(address,address)": "ea0ee559",
							"addModule(address)": "1ed86f19",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address,uint256)": "9dc29fac",
							"editDefaultPositionUnit(address,int256)": "2ba57d17",
							"editExternalPositionData(address,address,bytes)": "26898fe1",
							"editExternalPositionUnit(address,address,int256)": "63a90fc1",
							"editPositionMultiplier(int256)": "c2de0e9d",
							"getComponents()": "99d50d5d",
							"getDefaultPositionRealUnit(address)": "66cb8d2f",
							"getExternalPositionData(address,address)": "8ae458da",
							"getExternalPositionModules(address)": "a7bdad03",
							"getExternalPositionRealUnit(address,address)": "22ebeba4",
							"getModules()": "b2494df3",
							"getPositions()": "80275860",
							"getTotalComponentRealUnits(address)": "eaf993e1",
							"initializeModule()": "0ffe0f1e",
							"invoke(address,uint256,bytes)": "8f6f0332",
							"isComponent(address)": "df5e9b29",
							"isExternalPositionModule(address,address)": "7d966593",
							"isInitializedModule(address)": "d7f1b27c",
							"isLocked()": "a4e2d634",
							"isPendingModule(address)": "53bae5f7",
							"lock()": "f83d08ba",
							"manager()": "481c6a75",
							"mint(address,uint256)": "40c10f19",
							"moduleStates(address)": "35bc4e52",
							"positionMultiplier()": "5230c396",
							"removeComponent(address)": "6f86c897",
							"removeExternalPositionModule(address,address)": "acf3f077",
							"removeModule(address)": "a0632461",
							"setManager(address)": "d0ebdbe7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"unlock()": "a69df4b5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.10+commit.00c0fcaf\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_component\",\"type\":\"address\"}],\"name\":\"addComponent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_component\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_positionModule\",\"type\":\"address\"}],\"name\":\"addExternalPositionModule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_module\",\"type\":\"address\"}],\"name\":\"addModule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_component\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"_realUnit\",\"type\":\"int256\"}],\"name\":\"editDefaultPositionUnit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_component\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_positionModule\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"editExternalPositionData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_component\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_positionModule\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"_realUnit\",\"type\":\"int256\"}],\"name\":\"editExternalPositionUnit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"_newMultiplier\",\"type\":\"int256\"}],\"name\":\"editPositionMultiplier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getComponents\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_component\",\"type\":\"address\"}],\"name\":\"getDefaultPositionRealUnit\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_component\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_positionModule\",\"type\":\"address\"}],\"name\":\"getExternalPositionData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_component\",\"type\":\"address\"}],\"name\":\"getExternalPositionModules\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_component\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_positionModule\",\"type\":\"address\"}],\"name\":\"getExternalPositionRealUnit\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getModules\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPositions\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"component\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"unit\",\"type\":\"int256\"},{\"internalType\":\"uint8\",\"name\":\"positionState\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct ISetToken.Position[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_component\",\"type\":\"address\"}],\"name\":\"getTotalComponentRealUnits\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initializeModule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"invoke\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_component\",\"type\":\"address\"}],\"name\":\"isComponent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_component\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_module\",\"type\":\"address\"}],\"name\":\"isExternalPositionModule\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_module\",\"type\":\"address\"}],\"name\":\"isInitializedModule\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isLocked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_module\",\"type\":\"address\"}],\"name\":\"isPendingModule\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_module\",\"type\":\"address\"}],\"name\":\"moduleStates\",\"outputs\":[{\"internalType\":\"enum ISetToken.ModuleState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"positionMultiplier\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_component\",\"type\":\"address\"}],\"name\":\"removeComponent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_component\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_positionModule\",\"type\":\"address\"}],\"name\":\"removeExternalPositionModule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_module\",\"type\":\"address\"}],\"name\":\"removeModule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_manager\",\"type\":\"address\"}],\"name\":\"setManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Set Protocol Interface for operating with SetTokens.\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"title\":\"ISetToken\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ISetToken.sol\":\"ISetToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"contracts/interfaces/ISetToken.sol\":{\"keccak256\":\"0x2f24b90ffc5e6bb97b169482fa915e9016fadbaade011a73d352201b396ebe12\",\"license\":\"Apache License\",\"urls\":[\"bzz-raw://8fbcd20954a2c646a953586e4a0a1cca0b968b3726c24c304dc3f6a4ce632f72\",\"dweb:/ipfs/QmQRHbqemSeohZuMWDaNrUaoQUUbP9i9UUdwn4Pph4ayAj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/interfaces/ISetValuer.sol": {
				"ISetValuer": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract ISetToken",
									"name": "_setToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_quoteAsset",
									"type": "address"
								}
							],
							"name": "calculateSetTokenValuation",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"calculateSetTokenValuation(address,address)": "6101c540"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.10+commit.00c0fcaf\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ISetToken\",\"name\":\"_setToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_quoteAsset\",\"type\":\"address\"}],\"name\":\"calculateSetTokenValuation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ISetValuer.sol\":\"ISetValuer\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"contracts/interfaces/ISetToken.sol\":{\"keccak256\":\"0x2f24b90ffc5e6bb97b169482fa915e9016fadbaade011a73d352201b396ebe12\",\"license\":\"Apache License\",\"urls\":[\"bzz-raw://8fbcd20954a2c646a953586e4a0a1cca0b968b3726c24c304dc3f6a4ce632f72\",\"dweb:/ipfs/QmQRHbqemSeohZuMWDaNrUaoQUUbP9i9UUdwn4Pph4ayAj\"]},\"contracts/interfaces/ISetValuer.sol\":{\"keccak256\":\"0xfd6d2658d8016f01c317bea67b4f4eb6af2ec2b953aa8a889d929115e045e834\",\"license\":\"Apache License\",\"urls\":[\"bzz-raw://c6265b2efc2d6a9bccf1c909e91b1ac6c83ce9aa91f597a7b69572d4ffd8ee8d\",\"dweb:/ipfs/QmeCnpzApGKUx52HYuRVKG8gKnMchh1gt5BjkGCWW6vV6m\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/lib/AddressArrayUtils.sol": {
				"AddressArrayUtils": {
					"abi": [],
					"devdoc": {
						"author": "Set Protocol Utility functions to handle Address Arrays CHANGELOG: - 4/21/21: Added validatePairsWithArray methods",
						"methods": {},
						"title": "AddressArrayUtils"
					},
					"evm": {
						"assembly": "    /* \"contracts/lib/AddressArrayUtils.sol\":858:7464  library AddressArrayUtils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/lib/AddressArrayUtils.sol\":858:7464  library AddressArrayUtils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f7d0e0be9bb09331c14a4b10df09dbbb415003939aedd59b272159c3568165ab64736f6c634300060a0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f7d0e0be9bb09331c14a4b10df09dbbb415003939aedd59b272159c3568165ab64736f6c634300060a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 0xD0 0xE0 0xBE SWAP12 0xB0 SWAP4 BALANCE 0xC1 0x4A 0x4B LT 0xDF MULMOD 0xDB 0xBB COINBASE POP SUB SWAP4 SWAP11 0xED 0xD5 SWAP12 0x27 0x21 MSIZE 0xC3 JUMP DUP2 PUSH6 0xAB64736F6C63 NUMBER STOP MOD EXP STOP CALLER ",
							"sourceMap": "858:6606:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f7d0e0be9bb09331c14a4b10df09dbbb415003939aedd59b272159c3568165ab64736f6c634300060a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 0xD0 0xE0 0xBE SWAP12 0xB0 SWAP4 BALANCE 0xC1 0x4A 0x4B LT 0xDF MULMOD 0xDB 0xBB COINBASE POP SUB SWAP4 SWAP11 0xED 0xD5 SWAP12 0x27 0x21 MSIZE 0xC3 JUMP DUP2 PUSH6 0xAB64736F6C63 NUMBER STOP MOD EXP STOP CALLER ",
							"sourceMap": "858:6606:14:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_validateLengthAndUniqueness(address[] memory)": "infinite",
								"contains(address[] memory,address)": "infinite",
								"extend(address[] memory,address[] memory)": "infinite",
								"hasDuplicate(address[] memory)": "infinite",
								"indexOf(address[] memory,address)": "infinite",
								"pop(address[] memory,uint256)": "infinite",
								"remove(address[] memory,address)": "infinite",
								"removeStorage(address[] storage pointer,address)": "infinite",
								"validatePairsWithArray(address[] memory,address[] memory)": "infinite",
								"validatePairsWithArray(address[] memory,bool[] memory)": "infinite",
								"validatePairsWithArray(address[] memory,bytes memory[] memory)": "infinite",
								"validatePairsWithArray(address[] memory,string memory[] memory)": "infinite",
								"validatePairsWithArray(address[] memory,uint256[] memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 858,
									"end": 7464,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 858,
									"end": 7464,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 858,
									"end": 7464,
									"name": "PUSH",
									"source": 14,
									"value": "B"
								},
								{
									"begin": 858,
									"end": 7464,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 858,
									"end": 7464,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 858,
									"end": 7464,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 858,
									"end": 7464,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 858,
									"end": 7464,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 858,
									"end": 7464,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 858,
									"end": 7464,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 858,
									"end": 7464,
									"name": "BYTE",
									"source": 14
								},
								{
									"begin": 858,
									"end": 7464,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 858,
									"end": 7464,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 858,
									"end": 7464,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 858,
									"end": 7464,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 858,
									"end": 7464,
									"name": "INVALID",
									"source": 14
								},
								{
									"begin": 858,
									"end": 7464,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 858,
									"end": 7464,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 858,
									"end": 7464,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 858,
									"end": 7464,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 858,
									"end": 7464,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 858,
									"end": 7464,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 858,
									"end": 7464,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 858,
									"end": 7464,
									"name": "MSTORE8",
									"source": 14
								},
								{
									"begin": 858,
									"end": 7464,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 858,
									"end": 7464,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 858,
									"end": 7464,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f7d0e0be9bb09331c14a4b10df09dbbb415003939aedd59b272159c3568165ab64736f6c634300060a0033",
									".code": [
										{
											"begin": 858,
											"end": 7464,
											"name": "PUSHDEPLOYADDRESS",
											"source": 14
										},
										{
											"begin": 858,
											"end": 7464,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 858,
											"end": 7464,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 858,
											"end": 7464,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 858,
											"end": 7464,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 858,
											"end": 7464,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 858,
											"end": 7464,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 858,
											"end": 7464,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 858,
											"end": 7464,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.10+commit.00c0fcaf\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Set Protocol Utility functions to handle Address Arrays CHANGELOG: - 4/21/21: Added validatePairsWithArray methods\",\"methods\":{},\"title\":\"AddressArrayUtils\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/lib/AddressArrayUtils.sol\":\"AddressArrayUtils\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lib/AddressArrayUtils.sol\":{\"keccak256\":\"0x02e1a8a5f6ed402db74bb4bd3fd13041e2b9f93e17e8ca263c202003ef9874a8\",\"license\":\"Apache License\",\"urls\":[\"bzz-raw://be3a572a477380c7f473643c0bdd270647c6bc097c959fb1a0348686c1844872\",\"dweb:/ipfs/QmTgDCb18k72PHZpBpLn6dLx8CXpiPWTRLiUz5KdmYcja8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/lib/ExplicitERC20.sol": {
				"ExplicitERC20": {
					"abi": [],
					"devdoc": {
						"author": "Set Protocol Utility functions for ERC20 transfers that require the explicit amount to be transferred.",
						"methods": {},
						"title": "ExplicitERC20"
					},
					"evm": {
						"assembly": "    /* \"contracts/lib/ExplicitERC20.sol\":1055:2325  library ExplicitERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/lib/ExplicitERC20.sol\":1055:2325  library ExplicitERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209bd6cb4061a1c91ffbca91c2188ee749c12feb6394341719a211e987461418e864736f6c634300060a0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209bd6cb4061a1c91ffbca91c2188ee749c12feb6394341719a211e987461418e864736f6c634300060a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP12 0xD6 0xCB BLOCKHASH PUSH2 0xA1C9 0x1F 0xFB 0xCA SWAP2 0xC2 XOR DUP15 0xE7 0x49 0xC1 0x2F 0xEB PUSH4 0x94341719 LOG2 GT 0xE9 DUP8 CHAINID EQ XOR 0xE8 PUSH5 0x736F6C6343 STOP MOD EXP STOP CALLER ",
							"sourceMap": "1055:1270:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209bd6cb4061a1c91ffbca91c2188ee749c12feb6394341719a211e987461418e864736f6c634300060a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP12 0xD6 0xCB BLOCKHASH PUSH2 0xA1C9 0x1F 0xFB 0xCA SWAP2 0xC2 XOR DUP15 0xE7 0x49 0xC1 0x2F 0xEB PUSH4 0x94341719 LOG2 GT 0xE9 DUP8 CHAINID EQ XOR 0xE8 PUSH5 0x736F6C6343 STOP MOD EXP STOP CALLER ",
							"sourceMap": "1055:1270:15:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"transferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1055,
									"end": 2325,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1055,
									"end": 2325,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1055,
									"end": 2325,
									"name": "PUSH",
									"source": 15,
									"value": "B"
								},
								{
									"begin": 1055,
									"end": 2325,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1055,
									"end": 2325,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1055,
									"end": 2325,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1055,
									"end": 2325,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 1055,
									"end": 2325,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 1055,
									"end": 2325,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 1055,
									"end": 2325,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1055,
									"end": 2325,
									"name": "BYTE",
									"source": 15
								},
								{
									"begin": 1055,
									"end": 2325,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 1055,
									"end": 2325,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 1055,
									"end": 2325,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 1055,
									"end": 2325,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 1055,
									"end": 2325,
									"name": "INVALID",
									"source": 15
								},
								{
									"begin": 1055,
									"end": 2325,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 1055,
									"end": 2325,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1055,
									"end": 2325,
									"name": "ADDRESS",
									"source": 15
								},
								{
									"begin": 1055,
									"end": 2325,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1055,
									"end": 2325,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 1055,
									"end": 2325,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 1055,
									"end": 2325,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1055,
									"end": 2325,
									"name": "MSTORE8",
									"source": 15
								},
								{
									"begin": 1055,
									"end": 2325,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1055,
									"end": 2325,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1055,
									"end": 2325,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209bd6cb4061a1c91ffbca91c2188ee749c12feb6394341719a211e987461418e864736f6c634300060a0033",
									".code": [
										{
											"begin": 1055,
											"end": 2325,
											"name": "PUSHDEPLOYADDRESS",
											"source": 15
										},
										{
											"begin": 1055,
											"end": 2325,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 1055,
											"end": 2325,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 1055,
											"end": 2325,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 1055,
											"end": 2325,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1055,
											"end": 2325,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1055,
											"end": 2325,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1055,
											"end": 2325,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1055,
											"end": 2325,
											"name": "REVERT",
											"source": 15
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.10+commit.00c0fcaf\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Set Protocol Utility functions for ERC20 transfers that require the explicit amount to be transferred.\",\"methods\":{},\"title\":\"ExplicitERC20\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/lib/ExplicitERC20.sol\":\"ExplicitERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xf12dfbe97e6276980b83d2830bb0eb75e0cf4f3e626c2471137f82158ae6a0fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a849c2d95e85463909e5b5c920b13e7a11216ca14127085e16d22b9379d52a\",\"dweb:/ipfs/QmUg3CZDbCCcQdroEpexBy5ZFd5vD1UWijWQq9qHZjtJNQ\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]},\"contracts/lib/ExplicitERC20.sol\":{\"keccak256\":\"0x6b68bb213cffd51cbece27b1c7235240d84cc0f6da7a9f2ffeb07e65b3e82299\",\"license\":\"Apache License\",\"urls\":[\"bzz-raw://8362c95ef29efaed3cb3f90b623661c2d1b5c20aef58bd9d3ecd375f123b74f1\",\"dweb:/ipfs/QmfBG1JW7PrjsWf3Zib6hF9UdgPLmpghGSssTh7SAQVUKh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/lib/Invoke.sol": {
				"Invoke": {
					"abi": [],
					"devdoc": {
						"author": "Set Protocol A collection of common utility functions for interacting with the SetToken's invoke function",
						"methods": {},
						"title": "Invoke"
					},
					"evm": {
						"assembly": "    /* \"contracts/lib/Invoke.sol\":1031:4651  library Invoke {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/lib/Invoke.sol\":1031:4651  library Invoke {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202403a93fddc19d28d89da101ec0369705d114d1634a24cd1ff99aec3ecca008c64736f6c634300060a0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202403a93fddc19d28d89da101ec0369705d114d1634a24cd1ff99aec3ecca008c64736f6c634300060a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x24 SUB 0xA9 EXTCODEHASH 0xDD 0xC1 SWAP14 0x28 0xD8 SWAP14 LOG1 ADD 0xEC SUB PUSH10 0x705D114D1634A24CD1FF SWAP10 0xAE 0xC3 0xEC 0xCA STOP DUP13 PUSH5 0x736F6C6343 STOP MOD EXP STOP CALLER ",
							"sourceMap": "1031:3620:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202403a93fddc19d28d89da101ec0369705d114d1634a24cd1ff99aec3ecca008c64736f6c634300060a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x24 SUB 0xA9 EXTCODEHASH 0xDD 0xC1 SWAP14 0x28 0xD8 SWAP14 LOG1 ADD 0xEC SUB PUSH10 0x705D114D1634A24CD1FF SWAP10 0xAE 0xC3 0xEC 0xCA STOP DUP13 PUSH5 0x736F6C6343 STOP MOD EXP STOP CALLER ",
							"sourceMap": "1031:3620:16:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"invokeApprove(contract ISetToken,address,address,uint256)": "infinite",
								"invokeTransfer(contract ISetToken,address,address,uint256)": "infinite",
								"invokeUnwrapWETH(contract ISetToken,address,uint256)": "infinite",
								"invokeWrapWETH(contract ISetToken,address,uint256)": "infinite",
								"strictInvokeTransfer(contract ISetToken,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1031,
									"end": 4651,
									"name": "PUSH #[$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1031,
									"end": 4651,
									"name": "PUSH [$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1031,
									"end": 4651,
									"name": "PUSH",
									"source": 16,
									"value": "B"
								},
								{
									"begin": 1031,
									"end": 4651,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1031,
									"end": 4651,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1031,
									"end": 4651,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1031,
									"end": 4651,
									"name": "CODECOPY",
									"source": 16
								},
								{
									"begin": 1031,
									"end": 4651,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1031,
									"end": 4651,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 1031,
									"end": 4651,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1031,
									"end": 4651,
									"name": "BYTE",
									"source": 16
								},
								{
									"begin": 1031,
									"end": 4651,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 1031,
									"end": 4651,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 1031,
									"end": 4651,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 1031,
									"end": 4651,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 1031,
									"end": 4651,
									"name": "INVALID",
									"source": 16
								},
								{
									"begin": 1031,
									"end": 4651,
									"name": "tag",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 1031,
									"end": 4651,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1031,
									"end": 4651,
									"name": "ADDRESS",
									"source": 16
								},
								{
									"begin": 1031,
									"end": 4651,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1031,
									"end": 4651,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 1031,
									"end": 4651,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 1031,
									"end": 4651,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1031,
									"end": 4651,
									"name": "MSTORE8",
									"source": 16
								},
								{
									"begin": 1031,
									"end": 4651,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1031,
									"end": 4651,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1031,
									"end": 4651,
									"name": "RETURN",
									"source": 16
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202403a93fddc19d28d89da101ec0369705d114d1634a24cd1ff99aec3ecca008c64736f6c634300060a0033",
									".code": [
										{
											"begin": 1031,
											"end": 4651,
											"name": "PUSHDEPLOYADDRESS",
											"source": 16
										},
										{
											"begin": 1031,
											"end": 4651,
											"name": "ADDRESS",
											"source": 16
										},
										{
											"begin": 1031,
											"end": 4651,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1031,
											"end": 4651,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 1031,
											"end": 4651,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1031,
											"end": 4651,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1031,
											"end": 4651,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1031,
											"end": 4651,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1031,
											"end": 4651,
											"name": "REVERT",
											"source": 16
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.10+commit.00c0fcaf\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Set Protocol A collection of common utility functions for interacting with the SetToken's invoke function\",\"methods\":{},\"title\":\"Invoke\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/lib/Invoke.sol\":\"Invoke\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"contracts/interfaces/ISetToken.sol\":{\"keccak256\":\"0x2f24b90ffc5e6bb97b169482fa915e9016fadbaade011a73d352201b396ebe12\",\"license\":\"Apache License\",\"urls\":[\"bzz-raw://8fbcd20954a2c646a953586e4a0a1cca0b968b3726c24c304dc3f6a4ce632f72\",\"dweb:/ipfs/QmQRHbqemSeohZuMWDaNrUaoQUUbP9i9UUdwn4Pph4ayAj\"]},\"contracts/lib/Invoke.sol\":{\"keccak256\":\"0x2de7e36a60fd21158bd18d5ad1029438e8ef56968a7d73311d9ee82c661517ee\",\"license\":\"Apache License\",\"urls\":[\"bzz-raw://6a2b560a709c26b35947585a5069804853905b8816af1a332588bf6e6b38b7d9\",\"dweb:/ipfs/QmTamJ76QyVqVZnk6Rd8h2czQFfzP6nrKhsPj6vrAJCuUY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/lib/ModuleBase.sol": {
				"ModuleBase": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IController",
									"name": "_controller",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "controller",
							"outputs": [
								{
									"internalType": "contract IController",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "removeModule",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Set Protocol Abstract class that houses common Module-related state and functions. CHANGELOG: - 4/21/21: Delegated modifier logic to internal helpers to reduce contract size",
						"methods": {
							"constructor": {
								"params": {
									"_controller": "Address of controller contract"
								}
							}
						},
						"title": "ModuleBase"
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"controller()": "f77c4791",
							"removeModule()": "847ef08d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.10+commit.00c0fcaf\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IController\",\"name\":\"_controller\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"contract IController\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"removeModule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Set Protocol Abstract class that houses common Module-related state and functions. CHANGELOG: - 4/21/21: Delegated modifier logic to internal helpers to reduce contract size\",\"methods\":{\"constructor\":{\"params\":{\"_controller\":\"Address of controller contract\"}}},\"title\":\"ModuleBase\"},\"userdoc\":{\"methods\":{\"constructor\":\"Set state variables and map asset pairs to their oracles\",\"removeModule()\":{\"notice\":\"Called by a SetToken to notify that this module was removed from the Set token. Any logic can be included in case checks need to be made or state needs to be cleared.\"}}}},\"settings\":{\"compilationTarget\":{\"contracts/lib/ModuleBase.sol\":\"ModuleBase\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"@openzeppelin/contracts/math/SignedSafeMath.sol\":{\"keccak256\":\"0xd17ac7e1d8f83d20d80e652adfed83da122f3a3c7b69fefa2985d85aebf0a3e9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://64e13936e5e7382737f9c12918f5365fd9e68bf96e83d66f3323f47b1d7162c7\",\"dweb:/ipfs/Qmd2qkUCFdpAXJ6NNTkPxmkKaPzYYmeBhDey8N8XN39wqw\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xf12dfbe97e6276980b83d2830bb0eb75e0cf4f3e626c2471137f82158ae6a0fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a849c2d95e85463909e5b5c920b13e7a11216ca14127085e16d22b9379d52a\",\"dweb:/ipfs/QmUg3CZDbCCcQdroEpexBy5ZFd5vD1UWijWQq9qHZjtJNQ\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]},\"@openzeppelin/contracts/utils/SafeCast.sol\":{\"keccak256\":\"0x7b2b8baa20fd60ab4a328c8e34c64a353651b80ba4b5b157cbb61813f6f85d55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://125b7f9efa390e663d630c62b97ae4e0707f31623bea989ef94c97ca9d777dd2\",\"dweb:/ipfs/QmaaLSuwvqK7wqcgyS3utHgfmB7RntcvP7eJSuvQod8Z9P\"]},\"contracts/interfaces/IController.sol\":{\"keccak256\":\"0x8deb2f94e24e9524ce4de88804c98694781d8f38fbadccc3207d28b8e0ce4911\",\"license\":\"Apache License\",\"urls\":[\"bzz-raw://755f656a314737b0eeffbee1b7dc257b751c0764d70f008beb6cccececaeb2d7\",\"dweb:/ipfs/QmUmFs1ukqWUmfcm5irGYHYZnv8NwMYGD3EUuoA5BvbhER\"]},\"contracts/interfaces/IIntegrationRegistry.sol\":{\"keccak256\":\"0xb9a2f67aa926694fcfa6b9f2300423a253162078b12e3ff0b8c864c5a143c975\",\"license\":\"Apache License\",\"urls\":[\"bzz-raw://2448da2adc2ca3c858e2413a0833f7a384e4a9430af0a923411d0d0ff1c5076d\",\"dweb:/ipfs/QmTEdnKViq2riEoDzfLwuXxtWdieLL8ZfRL7WanfQwXxHf\"]},\"contracts/interfaces/IModule.sol\":{\"keccak256\":\"0xc6fea62e0c2fe10548cb32ff8188b7f036cd072ea2048b664e90b3570ce538fb\",\"license\":\"Apache License\",\"urls\":[\"bzz-raw://2a7594ef174c6bce3a502d34269dccf4e7f7382fc521aa9421bf31d000ca3525\",\"dweb:/ipfs/QmRBnDZnMrsEm45nhTAjzvb7znsKXdVTWy8f6FX1CiH8cu\"]},\"contracts/interfaces/IPriceOracle.sol\":{\"keccak256\":\"0xe7882bdc45986d01ebdbe189ac7b2b42de6ba06d070a331c2de61668ac805a62\",\"license\":\"Apache License\",\"urls\":[\"bzz-raw://ad37f4650905c70d415ddc8836e363e8a386f30a9764bb6b3f9fb0e183d73703\",\"dweb:/ipfs/QmNpk6Q3nAZmh4GDsdPaU56yLR4vuAwnoqQuQzBndDJTVq\"]},\"contracts/interfaces/ISetToken.sol\":{\"keccak256\":\"0x2f24b90ffc5e6bb97b169482fa915e9016fadbaade011a73d352201b396ebe12\",\"license\":\"Apache License\",\"urls\":[\"bzz-raw://8fbcd20954a2c646a953586e4a0a1cca0b968b3726c24c304dc3f6a4ce632f72\",\"dweb:/ipfs/QmQRHbqemSeohZuMWDaNrUaoQUUbP9i9UUdwn4Pph4ayAj\"]},\"contracts/interfaces/ISetValuer.sol\":{\"keccak256\":\"0xfd6d2658d8016f01c317bea67b4f4eb6af2ec2b953aa8a889d929115e045e834\",\"license\":\"Apache License\",\"urls\":[\"bzz-raw://c6265b2efc2d6a9bccf1c909e91b1ac6c83ce9aa91f597a7b69572d4ffd8ee8d\",\"dweb:/ipfs/QmeCnpzApGKUx52HYuRVKG8gKnMchh1gt5BjkGCWW6vV6m\"]},\"contracts/lib/AddressArrayUtils.sol\":{\"keccak256\":\"0x02e1a8a5f6ed402db74bb4bd3fd13041e2b9f93e17e8ca263c202003ef9874a8\",\"license\":\"Apache License\",\"urls\":[\"bzz-raw://be3a572a477380c7f473643c0bdd270647c6bc097c959fb1a0348686c1844872\",\"dweb:/ipfs/QmTgDCb18k72PHZpBpLn6dLx8CXpiPWTRLiUz5KdmYcja8\"]},\"contracts/lib/ExplicitERC20.sol\":{\"keccak256\":\"0x6b68bb213cffd51cbece27b1c7235240d84cc0f6da7a9f2ffeb07e65b3e82299\",\"license\":\"Apache License\",\"urls\":[\"bzz-raw://8362c95ef29efaed3cb3f90b623661c2d1b5c20aef58bd9d3ecd375f123b74f1\",\"dweb:/ipfs/QmfBG1JW7PrjsWf3Zib6hF9UdgPLmpghGSssTh7SAQVUKh\"]},\"contracts/lib/Invoke.sol\":{\"keccak256\":\"0x2de7e36a60fd21158bd18d5ad1029438e8ef56968a7d73311d9ee82c661517ee\",\"license\":\"Apache License\",\"urls\":[\"bzz-raw://6a2b560a709c26b35947585a5069804853905b8816af1a332588bf6e6b38b7d9\",\"dweb:/ipfs/QmTamJ76QyVqVZnk6Rd8h2czQFfzP6nrKhsPj6vrAJCuUY\"]},\"contracts/lib/ModuleBase.sol\":{\"keccak256\":\"0x55d0d483afaeb545eb776eaa94b215e0cb182496d3a3b9fbb497e3e5e08d97b7\",\"license\":\"Apache License\",\"urls\":[\"bzz-raw://9318612340faabce229223b1b3e4d1e81b38ae6c7476e63e5b9756b931b22f44\",\"dweb:/ipfs/QmWW9D4ngTmC6P7sjh3J9ArpxmPN3mbd4BJo6WxtjhgVo6\"]},\"contracts/lib/Position.sol\":{\"keccak256\":\"0x02c5cbb568149293b6715d8f298df643309e69cbf1c29fd62ceb1327e428c2aa\",\"license\":\"Apache License\",\"urls\":[\"bzz-raw://ebdb82002fc0bbd71cc63ac38e821603c9612984d650eba399a50323c1a7e8ef\",\"dweb:/ipfs/QmQKzrYP5a6bpyq4MyCPcXuauZ5ebKPhYYSPnZXHZcyv9J\"]},\"contracts/lib/PreciseUnitMath.sol\":{\"keccak256\":\"0x5846fd768188c3abb41084cd45e9069cbb32022d7924a085c317ed31ec6a8235\",\"license\":\"Apache License\",\"urls\":[\"bzz-raw://059eafd78a8397b8d030e088ce7a32f5e6b4d8496a054f58a81fcd94eae0b1d0\",\"dweb:/ipfs/QmekUPstuKpn8vvabvzVhvEtPFb1GwRSUUkFAtjieWgyUb\"]},\"contracts/lib/ResourceIdentifier.sol\":{\"keccak256\":\"0xd7071e04e50e12dad99a0454e6e2a262004383a692dd81fa560bd5670a8ddbb8\",\"license\":\"Apache License\",\"urls\":[\"bzz-raw://7229d152936f49d3adb865f90eb8078908c881cbfa873a063fb506611658d590\",\"dweb:/ipfs/QmU8oTBfv2e3Kagkz4Fm2xVFHT8sFKpb4qBoSP3CKXecAb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2750,
								"contract": "contracts/lib/ModuleBase.sol:ModuleBase",
								"label": "controller",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IController)1523"
							}
						],
						"types": {
							"t_contract(IController)1523": {
								"encoding": "inplace",
								"label": "contract IController",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"methods": {
							"constructor": "Set state variables and map asset pairs to their oracles",
							"removeModule()": {
								"notice": "Called by a SetToken to notify that this module was removed from the Set token. Any logic can be included in case checks need to be made or state needs to be cleared."
							}
						}
					}
				}
			},
			"contracts/lib/Position.sol": {
				"Position": {
					"abi": [],
					"devdoc": {
						"author": "Set Protocol Collection of helper functions for handling and updating SetToken Positions CHANGELOG:  - Updated editExternalPosition to work when no external position is associated with module",
						"methods": {},
						"title": "Position"
					},
					"evm": {
						"assembly": "    /* \"contracts/lib/Position.sol\":1374:11247  library Position {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/lib/Position.sol\":1374:11247  library Position {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204a899071510979ad1ae334864ea8fe2ffdfc04540e227fb0bba0c01eebb9b55a64736f6c634300060a0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204a899071510979ad1ae334864ea8fe2ffdfc04540e227fb0bba0c01eebb9b55a64736f6c634300060a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4A DUP10 SWAP1 PUSH18 0x510979AD1AE334864EA8FE2FFDFC04540E22 PUSH32 0xB0BBA0C01EEBB9B55A64736F6C634300060A0033000000000000000000000000 ",
							"sourceMap": "1374:9873:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204a899071510979ad1ae334864ea8fe2ffdfc04540e227fb0bba0c01eebb9b55a64736f6c634300060a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4A DUP10 SWAP1 PUSH18 0x510979AD1AE334864EA8FE2FFDFC04540E22 PUSH32 0xB0BBA0C01EEBB9B55A64736F6C634300060A0033000000000000000000000000 ",
							"sourceMap": "1374:9873:18:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"calculateAndEditDefaultPosition(contract ISetToken,address,uint256,uint256)": "infinite",
								"calculateDefaultEditPositionUnit(uint256,uint256,uint256,uint256)": "infinite",
								"editDefaultPosition(contract ISetToken,address,uint256)": "infinite",
								"editExternalPosition(contract ISetToken,address,address,int256,bytes memory)": "infinite",
								"getDefaultPositionUnit(uint256,uint256)": "infinite",
								"getDefaultTotalNotional(uint256,uint256)": "infinite",
								"getDefaultTrackedBalance(contract ISetToken,address)": "infinite",
								"hasDefaultPosition(contract ISetToken,address)": "infinite",
								"hasExternalPosition(contract ISetToken,address)": "infinite",
								"hasSufficientDefaultUnits(contract ISetToken,address,uint256)": "infinite",
								"hasSufficientExternalUnits(contract ISetToken,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1374,
									"end": 11247,
									"name": "PUSH #[$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1374,
									"end": 11247,
									"name": "PUSH [$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1374,
									"end": 11247,
									"name": "PUSH",
									"source": 18,
									"value": "B"
								},
								{
									"begin": 1374,
									"end": 11247,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 1374,
									"end": 11247,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 1374,
									"end": 11247,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 1374,
									"end": 11247,
									"name": "CODECOPY",
									"source": 18
								},
								{
									"begin": 1374,
									"end": 11247,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 1374,
									"end": 11247,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 1374,
									"end": 11247,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1374,
									"end": 11247,
									"name": "BYTE",
									"source": 18
								},
								{
									"begin": 1374,
									"end": 11247,
									"name": "PUSH",
									"source": 18,
									"value": "73"
								},
								{
									"begin": 1374,
									"end": 11247,
									"name": "EQ",
									"source": 18
								},
								{
									"begin": 1374,
									"end": 11247,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 1374,
									"end": 11247,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 1374,
									"end": 11247,
									"name": "INVALID",
									"source": 18
								},
								{
									"begin": 1374,
									"end": 11247,
									"name": "tag",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 1374,
									"end": 11247,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1374,
									"end": 11247,
									"name": "ADDRESS",
									"source": 18
								},
								{
									"begin": 1374,
									"end": 11247,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1374,
									"end": 11247,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 1374,
									"end": 11247,
									"name": "PUSH",
									"source": 18,
									"value": "73"
								},
								{
									"begin": 1374,
									"end": 11247,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1374,
									"end": 11247,
									"name": "MSTORE8",
									"source": 18
								},
								{
									"begin": 1374,
									"end": 11247,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 1374,
									"end": 11247,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1374,
									"end": 11247,
									"name": "RETURN",
									"source": 18
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204a899071510979ad1ae334864ea8fe2ffdfc04540e227fb0bba0c01eebb9b55a64736f6c634300060a0033",
									".code": [
										{
											"begin": 1374,
											"end": 11247,
											"name": "PUSHDEPLOYADDRESS",
											"source": 18
										},
										{
											"begin": 1374,
											"end": 11247,
											"name": "ADDRESS",
											"source": 18
										},
										{
											"begin": 1374,
											"end": 11247,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 1374,
											"end": 11247,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 1374,
											"end": 11247,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1374,
											"end": 11247,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1374,
											"end": 11247,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1374,
											"end": 11247,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1374,
											"end": 11247,
											"name": "REVERT",
											"source": 18
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.10+commit.00c0fcaf\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Set Protocol Collection of helper functions for handling and updating SetToken Positions CHANGELOG:  - Updated editExternalPosition to work when no external position is associated with module\",\"methods\":{},\"title\":\"Position\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/lib/Position.sol\":\"Position\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"@openzeppelin/contracts/math/SignedSafeMath.sol\":{\"keccak256\":\"0xd17ac7e1d8f83d20d80e652adfed83da122f3a3c7b69fefa2985d85aebf0a3e9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://64e13936e5e7382737f9c12918f5365fd9e68bf96e83d66f3323f47b1d7162c7\",\"dweb:/ipfs/Qmd2qkUCFdpAXJ6NNTkPxmkKaPzYYmeBhDey8N8XN39wqw\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"@openzeppelin/contracts/utils/SafeCast.sol\":{\"keccak256\":\"0x7b2b8baa20fd60ab4a328c8e34c64a353651b80ba4b5b157cbb61813f6f85d55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://125b7f9efa390e663d630c62b97ae4e0707f31623bea989ef94c97ca9d777dd2\",\"dweb:/ipfs/QmaaLSuwvqK7wqcgyS3utHgfmB7RntcvP7eJSuvQod8Z9P\"]},\"contracts/interfaces/ISetToken.sol\":{\"keccak256\":\"0x2f24b90ffc5e6bb97b169482fa915e9016fadbaade011a73d352201b396ebe12\",\"license\":\"Apache License\",\"urls\":[\"bzz-raw://8fbcd20954a2c646a953586e4a0a1cca0b968b3726c24c304dc3f6a4ce632f72\",\"dweb:/ipfs/QmQRHbqemSeohZuMWDaNrUaoQUUbP9i9UUdwn4Pph4ayAj\"]},\"contracts/lib/Position.sol\":{\"keccak256\":\"0x02c5cbb568149293b6715d8f298df643309e69cbf1c29fd62ceb1327e428c2aa\",\"license\":\"Apache License\",\"urls\":[\"bzz-raw://ebdb82002fc0bbd71cc63ac38e821603c9612984d650eba399a50323c1a7e8ef\",\"dweb:/ipfs/QmQKzrYP5a6bpyq4MyCPcXuauZ5ebKPhYYSPnZXHZcyv9J\"]},\"contracts/lib/PreciseUnitMath.sol\":{\"keccak256\":\"0x5846fd768188c3abb41084cd45e9069cbb32022d7924a085c317ed31ec6a8235\",\"license\":\"Apache License\",\"urls\":[\"bzz-raw://059eafd78a8397b8d030e088ce7a32f5e6b4d8496a054f58a81fcd94eae0b1d0\",\"dweb:/ipfs/QmekUPstuKpn8vvabvzVhvEtPFb1GwRSUUkFAtjieWgyUb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/lib/PreciseUnitMath.sol": {
				"PreciseUnitMath": {
					"abi": [],
					"devdoc": {
						"author": "Set Protocol Arithmetic for fixed-point numbers with 18 decimals of precision. Some functions taken from dYdX's BaseMath library. CHANGELOG: - 9/21/20: Added safePower function - 4/21/21: Added approximatelyEquals function - 12/13/21: Added preciseDivCeil (int overloads) function - 12/13/21: Added abs function",
						"methods": {},
						"title": "PreciseUnitMath"
					},
					"evm": {
						"assembly": "    /* \"contracts/lib/PreciseUnitMath.sol\":1323:7503  library PreciseUnitMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/lib/PreciseUnitMath.sol\":1323:7503  library PreciseUnitMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220fae8510d3097b91ce7899c0911e8d7eaa687823b9733f0b5ccc566344833f67f64736f6c634300060a0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fae8510d3097b91ce7899c0911e8d7eaa687823b9733f0b5ccc566344833f67f64736f6c634300060a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STATICCALL 0xE8 MLOAD 0xD ADDRESS SWAP8 0xB9 SHR 0xE7 DUP10 SWAP13 MULMOD GT 0xE8 0xD7 0xEA 0xA6 DUP8 DUP3 EXTCODESIZE SWAP8 CALLER CREATE 0xB5 0xCC 0xC5 PUSH7 0x344833F67F6473 PUSH16 0x6C634300060A00330000000000000000 ",
							"sourceMap": "1323:6180:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fae8510d3097b91ce7899c0911e8d7eaa687823b9733f0b5ccc566344833f67f64736f6c634300060a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STATICCALL 0xE8 MLOAD 0xD ADDRESS SWAP8 0xB9 SHR 0xE7 DUP10 SWAP13 MULMOD GT 0xE8 0xD7 0xEA 0xA6 DUP8 DUP3 EXTCODESIZE SWAP8 CALLER CREATE 0xB5 0xCC 0xC5 PUSH7 0x344833F67F6473 PUSH16 0x6C634300060A00330000000000000000 ",
							"sourceMap": "1323:6180:19:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"abs(int256)": "infinite",
								"approximatelyEquals(uint256,uint256,uint256)": "infinite",
								"conservativePreciseDiv(int256,int256)": "infinite",
								"conservativePreciseMul(int256,int256)": "infinite",
								"divDown(int256,int256)": "infinite",
								"maxInt256()": "infinite",
								"maxUint256()": "infinite",
								"minInt256()": "infinite",
								"neg(int256)": "infinite",
								"preciseDiv(int256,int256)": "infinite",
								"preciseDiv(uint256,uint256)": "infinite",
								"preciseDivCeil(int256,int256)": "infinite",
								"preciseDivCeil(uint256,uint256)": "infinite",
								"preciseMul(int256,int256)": "infinite",
								"preciseMul(uint256,uint256)": "infinite",
								"preciseMulCeil(uint256,uint256)": "infinite",
								"preciseUnit()": "infinite",
								"preciseUnitInt()": "infinite",
								"safePower(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1323,
									"end": 7503,
									"name": "PUSH #[$]",
									"source": 19,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1323,
									"end": 7503,
									"name": "PUSH [$]",
									"source": 19,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1323,
									"end": 7503,
									"name": "PUSH",
									"source": 19,
									"value": "B"
								},
								{
									"begin": 1323,
									"end": 7503,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 1323,
									"end": 7503,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 1323,
									"end": 7503,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 1323,
									"end": 7503,
									"name": "CODECOPY",
									"source": 19
								},
								{
									"begin": 1323,
									"end": 7503,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 1323,
									"end": 7503,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 1323,
									"end": 7503,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 1323,
									"end": 7503,
									"name": "BYTE",
									"source": 19
								},
								{
									"begin": 1323,
									"end": 7503,
									"name": "PUSH",
									"source": 19,
									"value": "73"
								},
								{
									"begin": 1323,
									"end": 7503,
									"name": "EQ",
									"source": 19
								},
								{
									"begin": 1323,
									"end": 7503,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 1323,
									"end": 7503,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 1323,
									"end": 7503,
									"name": "INVALID",
									"source": 19
								},
								{
									"begin": 1323,
									"end": 7503,
									"name": "tag",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 1323,
									"end": 7503,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1323,
									"end": 7503,
									"name": "ADDRESS",
									"source": 19
								},
								{
									"begin": 1323,
									"end": 7503,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 1323,
									"end": 7503,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 1323,
									"end": 7503,
									"name": "PUSH",
									"source": 19,
									"value": "73"
								},
								{
									"begin": 1323,
									"end": 7503,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 1323,
									"end": 7503,
									"name": "MSTORE8",
									"source": 19
								},
								{
									"begin": 1323,
									"end": 7503,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 1323,
									"end": 7503,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 1323,
									"end": 7503,
									"name": "RETURN",
									"source": 19
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fae8510d3097b91ce7899c0911e8d7eaa687823b9733f0b5ccc566344833f67f64736f6c634300060a0033",
									".code": [
										{
											"begin": 1323,
											"end": 7503,
											"name": "PUSHDEPLOYADDRESS",
											"source": 19
										},
										{
											"begin": 1323,
											"end": 7503,
											"name": "ADDRESS",
											"source": 19
										},
										{
											"begin": 1323,
											"end": 7503,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 1323,
											"end": 7503,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 1323,
											"end": 7503,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1323,
											"end": 7503,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1323,
											"end": 7503,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1323,
											"end": 7503,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1323,
											"end": 7503,
											"name": "REVERT",
											"source": 19
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.10+commit.00c0fcaf\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Set Protocol Arithmetic for fixed-point numbers with 18 decimals of precision. Some functions taken from dYdX's BaseMath library. CHANGELOG: - 9/21/20: Added safePower function - 4/21/21: Added approximatelyEquals function - 12/13/21: Added preciseDivCeil (int overloads) function - 12/13/21: Added abs function\",\"methods\":{},\"title\":\"PreciseUnitMath\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/lib/PreciseUnitMath.sol\":\"PreciseUnitMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"@openzeppelin/contracts/math/SignedSafeMath.sol\":{\"keccak256\":\"0xd17ac7e1d8f83d20d80e652adfed83da122f3a3c7b69fefa2985d85aebf0a3e9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://64e13936e5e7382737f9c12918f5365fd9e68bf96e83d66f3323f47b1d7162c7\",\"dweb:/ipfs/Qmd2qkUCFdpAXJ6NNTkPxmkKaPzYYmeBhDey8N8XN39wqw\"]},\"@openzeppelin/contracts/utils/SafeCast.sol\":{\"keccak256\":\"0x7b2b8baa20fd60ab4a328c8e34c64a353651b80ba4b5b157cbb61813f6f85d55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://125b7f9efa390e663d630c62b97ae4e0707f31623bea989ef94c97ca9d777dd2\",\"dweb:/ipfs/QmaaLSuwvqK7wqcgyS3utHgfmB7RntcvP7eJSuvQod8Z9P\"]},\"contracts/lib/PreciseUnitMath.sol\":{\"keccak256\":\"0x5846fd768188c3abb41084cd45e9069cbb32022d7924a085c317ed31ec6a8235\",\"license\":\"Apache License\",\"urls\":[\"bzz-raw://059eafd78a8397b8d030e088ce7a32f5e6b4d8496a054f58a81fcd94eae0b1d0\",\"dweb:/ipfs/QmekUPstuKpn8vvabvzVhvEtPFb1GwRSUUkFAtjieWgyUb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/lib/ResourceIdentifier.sol": {
				"ResourceIdentifier": {
					"abi": [],
					"devdoc": {
						"author": "Set Protocol A collection of utility functions to fetch information related to Resource contracts in the system",
						"methods": {},
						"title": "ResourceIdentifier"
					},
					"evm": {
						"assembly": "    /* \"contracts/lib/ResourceIdentifier.sol\":1109:2540  library ResourceIdentifier {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/lib/ResourceIdentifier.sol\":1109:2540  library ResourceIdentifier {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220fbdf1a47fcda29829d9bef5cb3260d2689cacadc850e446a270e4d0e7b3df19564736f6c634300060a0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fbdf1a47fcda29829d9bef5cb3260d2689cacadc850e446a270e4d0e7b3df19564736f6c634300060a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB 0xDF BYTE SELFBALANCE 0xFC 0xDA 0x29 DUP3 SWAP14 SWAP12 0xEF 0x5C 0xB3 0x26 0xD 0x26 DUP10 0xCA 0xCA 0xDC DUP6 0xE DIFFICULTY PUSH11 0x270E4D0E7B3DF19564736F PUSH13 0x634300060A0033000000000000 ",
							"sourceMap": "1109:1431:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fbdf1a47fcda29829d9bef5cb3260d2689cacadc850e446a270e4d0e7b3df19564736f6c634300060a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB 0xDF BYTE SELFBALANCE 0xFC 0xDA 0x29 DUP3 SWAP14 SWAP12 0xEF 0x5C 0xB3 0x26 0xD 0x26 DUP10 0xCA 0xCA 0xDC DUP6 0xE DIFFICULTY PUSH11 0x270E4D0E7B3DF19564736F PUSH13 0x634300060A0033000000000000 ",
							"sourceMap": "1109:1431:20:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"getIntegrationRegistry(contract IController)": "infinite",
								"getPriceOracle(contract IController)": "infinite",
								"getSetValuer(contract IController)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1109,
									"end": 2540,
									"name": "PUSH #[$]",
									"source": 20,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1109,
									"end": 2540,
									"name": "PUSH [$]",
									"source": 20,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1109,
									"end": 2540,
									"name": "PUSH",
									"source": 20,
									"value": "B"
								},
								{
									"begin": 1109,
									"end": 2540,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 1109,
									"end": 2540,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 1109,
									"end": 2540,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 1109,
									"end": 2540,
									"name": "CODECOPY",
									"source": 20
								},
								{
									"begin": 1109,
									"end": 2540,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 1109,
									"end": 2540,
									"name": "MLOAD",
									"source": 20
								},
								{
									"begin": 1109,
									"end": 2540,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 1109,
									"end": 2540,
									"name": "BYTE",
									"source": 20
								},
								{
									"begin": 1109,
									"end": 2540,
									"name": "PUSH",
									"source": 20,
									"value": "73"
								},
								{
									"begin": 1109,
									"end": 2540,
									"name": "EQ",
									"source": 20
								},
								{
									"begin": 1109,
									"end": 2540,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 1109,
									"end": 2540,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 1109,
									"end": 2540,
									"name": "INVALID",
									"source": 20
								},
								{
									"begin": 1109,
									"end": 2540,
									"name": "tag",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 1109,
									"end": 2540,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 1109,
									"end": 2540,
									"name": "ADDRESS",
									"source": 20
								},
								{
									"begin": 1109,
									"end": 2540,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 1109,
									"end": 2540,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 1109,
									"end": 2540,
									"name": "PUSH",
									"source": 20,
									"value": "73"
								},
								{
									"begin": 1109,
									"end": 2540,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 1109,
									"end": 2540,
									"name": "MSTORE8",
									"source": 20
								},
								{
									"begin": 1109,
									"end": 2540,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 1109,
									"end": 2540,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 1109,
									"end": 2540,
									"name": "RETURN",
									"source": 20
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fbdf1a47fcda29829d9bef5cb3260d2689cacadc850e446a270e4d0e7b3df19564736f6c634300060a0033",
									".code": [
										{
											"begin": 1109,
											"end": 2540,
											"name": "PUSHDEPLOYADDRESS",
											"source": 20
										},
										{
											"begin": 1109,
											"end": 2540,
											"name": "ADDRESS",
											"source": 20
										},
										{
											"begin": 1109,
											"end": 2540,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 1109,
											"end": 2540,
											"name": "PUSH",
											"source": 20,
											"value": "80"
										},
										{
											"begin": 1109,
											"end": 2540,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1109,
											"end": 2540,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1109,
											"end": 2540,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1109,
											"end": 2540,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1109,
											"end": 2540,
											"name": "REVERT",
											"source": 20
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.10+commit.00c0fcaf\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Set Protocol A collection of utility functions to fetch information related to Resource contracts in the system\",\"methods\":{},\"title\":\"ResourceIdentifier\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/lib/ResourceIdentifier.sol\":\"ResourceIdentifier\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"contracts/interfaces/IController.sol\":{\"keccak256\":\"0x8deb2f94e24e9524ce4de88804c98694781d8f38fbadccc3207d28b8e0ce4911\",\"license\":\"Apache License\",\"urls\":[\"bzz-raw://755f656a314737b0eeffbee1b7dc257b751c0764d70f008beb6cccececaeb2d7\",\"dweb:/ipfs/QmUmFs1ukqWUmfcm5irGYHYZnv8NwMYGD3EUuoA5BvbhER\"]},\"contracts/interfaces/IIntegrationRegistry.sol\":{\"keccak256\":\"0xb9a2f67aa926694fcfa6b9f2300423a253162078b12e3ff0b8c864c5a143c975\",\"license\":\"Apache License\",\"urls\":[\"bzz-raw://2448da2adc2ca3c858e2413a0833f7a384e4a9430af0a923411d0d0ff1c5076d\",\"dweb:/ipfs/QmTEdnKViq2riEoDzfLwuXxtWdieLL8ZfRL7WanfQwXxHf\"]},\"contracts/interfaces/IPriceOracle.sol\":{\"keccak256\":\"0xe7882bdc45986d01ebdbe189ac7b2b42de6ba06d070a331c2de61668ac805a62\",\"license\":\"Apache License\",\"urls\":[\"bzz-raw://ad37f4650905c70d415ddc8836e363e8a386f30a9764bb6b3f9fb0e183d73703\",\"dweb:/ipfs/QmNpk6Q3nAZmh4GDsdPaU56yLR4vuAwnoqQuQzBndDJTVq\"]},\"contracts/interfaces/ISetToken.sol\":{\"keccak256\":\"0x2f24b90ffc5e6bb97b169482fa915e9016fadbaade011a73d352201b396ebe12\",\"license\":\"Apache License\",\"urls\":[\"bzz-raw://8fbcd20954a2c646a953586e4a0a1cca0b968b3726c24c304dc3f6a4ce632f72\",\"dweb:/ipfs/QmQRHbqemSeohZuMWDaNrUaoQUUbP9i9UUdwn4Pph4ayAj\"]},\"contracts/interfaces/ISetValuer.sol\":{\"keccak256\":\"0xfd6d2658d8016f01c317bea67b4f4eb6af2ec2b953aa8a889d929115e045e834\",\"license\":\"Apache License\",\"urls\":[\"bzz-raw://c6265b2efc2d6a9bccf1c909e91b1ac6c83ce9aa91f597a7b69572d4ffd8ee8d\",\"dweb:/ipfs/QmeCnpzApGKUx52HYuRVKG8gKnMchh1gt5BjkGCWW6vV6m\"]},\"contracts/lib/ResourceIdentifier.sol\":{\"keccak256\":\"0xd7071e04e50e12dad99a0454e6e2a262004383a692dd81fa560bd5670a8ddbb8\",\"license\":\"Apache License\",\"urls\":[\"bzz-raw://7229d152936f49d3adb865f90eb8078908c881cbfa873a063fb506611658d590\",\"dweb:/ipfs/QmU8oTBfv2e3Kagkz4Fm2xVFHT8sFKpb4qBoSP3CKXecAb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/modules/BasicIssuanceModule.sol": {
				"BasicIssuanceModule": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IController",
									"name": "_controller",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_setToken",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_issuer",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "_hookContract",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_quantity",
									"type": "uint256"
								}
							],
							"name": "SetTokenIssued",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_setToken",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_redeemer",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_quantity",
									"type": "uint256"
								}
							],
							"name": "SetTokenRedeemed",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "controller",
							"outputs": [
								{
									"internalType": "contract IController",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ISetToken",
									"name": "_setToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_quantity",
									"type": "uint256"
								}
							],
							"name": "getRequiredComponentUnitsForIssue",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ISetToken",
									"name": "_setToken",
									"type": "address"
								},
								{
									"internalType": "contract IManagerIssuanceHook",
									"name": "_preIssueHook",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ISetToken",
									"name": "_setToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_quantity",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								}
							],
							"name": "issue",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ISetToken",
									"name": "",
									"type": "address"
								}
							],
							"name": "managerIssuanceHook",
							"outputs": [
								{
									"internalType": "contract IManagerIssuanceHook",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ISetToken",
									"name": "_setToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_quantity",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								}
							],
							"name": "redeem",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "removeModule",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Set Protocol Module that enables issuance and redemption functionality on a SetToken. This is a module that is required to bring the totalSupply of a Set above 0.",
						"methods": {
							"constructor": {
								"params": {
									"_controller": "Address of controller contract"
								}
							},
							"getRequiredComponentUnitsForIssue(address,uint256)": {
								"params": {
									"_quantity": "Quantity of SetToken to issue",
									"_setToken": "Instance of the SetToken to issue"
								},
								"returns": {
									"_0": "address[]            List of component addresses",
									"_1": "uint256[]            List of component units required to issue the quantity of SetTokens"
								}
							},
							"initialize(address,address)": {
								"params": {
									"_preIssueHook": "Instance of the Manager Contract with the Pre-Issuance Hook function",
									"_setToken": "Instance of the SetToken to issue"
								}
							},
							"issue(address,uint256,address)": {
								"params": {
									"_quantity": "Quantity of the SetToken to mint",
									"_setToken": "Instance of the SetToken contract",
									"_to": "Address to mint SetToken to"
								}
							},
							"redeem(address,uint256,address)": {
								"params": {
									"_quantity": "Quantity of the SetToken to redeem",
									"_setToken": "Instance of the SetToken contract",
									"_to": "Address to send component assets to"
								}
							}
						},
						"title": "BasicIssuanceModule"
					},
					"evm": {
						"assembly": "    /* \"contracts/modules/BasicIssuanceModule.sol\":1637:9025  contract BasicIssuanceModule is ModuleBase, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/modules/BasicIssuanceModule.sol\":2679:2749  constructor(IController _controller) public ModuleBase(_controller) {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  jump(tag_3)\ntag_2:\n    /* \"contracts/lib/ModuleBase.sol\":3375:3385  controller */\n  0x00\n    /* \"contracts/lib/ModuleBase.sol\":3375:3399  controller = _controller */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n  0x01\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1760:1782  _status = _NOT_ENTERED */\n  dup1\n  sstore\n    /* \"contracts/modules/BasicIssuanceModule.sol\":1637:9025  contract BasicIssuanceModule is ModuleBase, ReentrancyGuard {... */\n  jump(tag_11)\n    /* \"--CODEGEN--\":186:489   */\ntag_3:\n  0x00\n    /* \"--CODEGEN--\":321:323   */\n  0x20\n    /* \"--CODEGEN--\":309:318   */\n  dup3\n    /* \"--CODEGEN--\":300:307   */\n  dup5\n    /* \"--CODEGEN--\":296:319   */\n  sub\n    /* \"--CODEGEN--\":292:324   */\n  slt\n    /* \"--CODEGEN--\":289:291   */\n  iszero\n  tag_13\n  jumpi\n  dup1\n  dup2\n    /* \"--CODEGEN--\":327:339   */\n  revert\n    /* \"--CODEGEN--\":289:291   */\ntag_13:\n    /* \"--CODEGEN--\":103:116   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"--CODEGEN--\":774:828   */\n  dup2\n  and\n    /* \"--CODEGEN--\":919:974   */\n  dup2\n  eq\n    /* \"--CODEGEN--\":909:911   */\n  tag_14\n  jumpi\n  dup2\n  dup3\n    /* \"--CODEGEN--\":978:990   */\n  revert\n    /* \"--CODEGEN--\":909:911   */\ntag_14:\n    /* \"--CODEGEN--\":379:473   */\n  swap4\n    /* \"--CODEGEN--\":283:489   */\n  swap3\n  pop\n  pop\n  pop\n  jump\ntag_11:\n    /* \"contracts/modules/BasicIssuanceModule.sol\":1637:9025  contract BasicIssuanceModule is ModuleBase, ReentrancyGuard {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/modules/BasicIssuanceModule.sol\":1637:9025  contract BasicIssuanceModule is ModuleBase, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7a4ffd03\n      gt\n      tag_10\n      jumpi\n      dup1\n      0x7a4ffd03\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x847ef08d\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xdfe75335\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xf77c4791\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_10:\n      dup1\n      0x485cc955\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x5c833bfd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x6d78f47a\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/modules/BasicIssuanceModule.sol\":6481:6791  function initialize(... */\n    tag_3:\n      tag_11\n      tag_12\n      calldatasize\n      0x04\n      jump(tag_13)\n    tag_12:\n      tag_14\n      jump\t// in\n    tag_11:\n      stop\n        /* \"contracts/modules/BasicIssuanceModule.sol\":4734:6079  function redeem(... */\n    tag_4:\n      tag_11\n      tag_16\n      calldatasize\n      0x04\n      jump(tag_17)\n    tag_16:\n      tag_18\n      jump\t// in\n        /* \"contracts/modules/BasicIssuanceModule.sol\":3254:4317  function issue(... */\n    tag_5:\n      tag_11\n      tag_20\n      calldatasize\n      0x04\n      jump(tag_17)\n    tag_20:\n      tag_21\n      jump\t// in\n        /* \"contracts/modules/BasicIssuanceModule.sol\":7545:8274  function getRequiredComponentUnitsForIssue(... */\n    tag_6:\n      tag_22\n      tag_23\n      calldatasize\n      0x04\n      jump(tag_24)\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_26\n      swap3\n      swap2\n      swap1\n      jump(tag_27)\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/modules/BasicIssuanceModule.sol\":6939:7056  function removeModule() external override {... */\n    tag_7:\n      tag_11\n      tag_29\n      jump\t// in\n        /* \"contracts/modules/BasicIssuanceModule.sol\":2419:2488  mapping(ISetToken => IManagerIssuanceHook) public managerIssuanceHook */\n    tag_8:\n      tag_30\n      tag_31\n      calldatasize\n      0x04\n      jump(tag_32)\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      jump(tag_82)\n        /* \"contracts/lib/ModuleBase.sol\":2156:2185  IController public controller */\n    tag_9:\n      tag_30\n      tag_37\n      jump\t// in\n        /* \"contracts/modules/BasicIssuanceModule.sol\":6481:6791  function initialize(... */\n    tag_14:\n        /* \"contracts/modules/BasicIssuanceModule.sol\":6620:6629  _setToken */\n      dup2\n        /* \"contracts/modules/BasicIssuanceModule.sol\":6631:6641  msg.sender */\n      caller\n        /* \"contracts/lib/ModuleBase.sol\":2440:2483  _validateOnlySetManager(_setToken, _caller) */\n      tag_41\n        /* \"contracts/lib/ModuleBase.sol\":2464:2473  _setToken */\n      dup3\n        /* \"contracts/lib/ModuleBase.sol\":2475:2482  _caller */\n      dup3\n        /* \"contracts/lib/ModuleBase.sol\":2440:2463  _validateOnlySetManager */\n      tag_42\n        /* \"contracts/lib/ModuleBase.sol\":2440:2483  _validateOnlySetManager(_setToken, _caller) */\n      jump\t// in\n    tag_41:\n        /* \"contracts/modules/BasicIssuanceModule.sol\":6674:6683  _setToken */\n      dup4\n        /* \"contracts/lib/ModuleBase.sol\":3050:3092  _validateOnlyValidAndPendingSet(_setToken) */\n      tag_44\n        /* \"contracts/lib/ModuleBase.sol\":3082:3091  _setToken */\n      dup2\n        /* \"contracts/lib/ModuleBase.sol\":3050:3081  _validateOnlyValidAndPendingSet */\n      tag_45\n        /* \"contracts/lib/ModuleBase.sol\":3050:3092  _validateOnlyValidAndPendingSet(_setToken) */\n      jump\t// in\n    tag_44:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/modules/BasicIssuanceModule.sol\":6699:6729  managerIssuanceHook[_setToken] */\n      dup6\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/modules/BasicIssuanceModule.sol\":6699:6718  managerIssuanceHook */\n      0x02\n        /* \"contracts/modules/BasicIssuanceModule.sol\":6699:6729  managerIssuanceHook[_setToken] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/modules/BasicIssuanceModule.sol\":6699:6745  managerIssuanceHook[_setToken] = _preIssueHook */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap5\n      dup10\n      and\n      swap5\n      swap1\n      swap5\n      or\n      swap1\n      swap4\n      sstore\n        /* \"contracts/modules/BasicIssuanceModule.sol\":6756:6784  _setToken.initializeModule() */\n      dup3\n      mload\n      shl(0xe1, 0x07ff078f)\n      dup2\n      mstore\n      swap3\n      mload\n        /* \"contracts/modules/BasicIssuanceModule.sol\":6699:6729  managerIssuanceHook[_setToken] */\n      swap2\n      swap3\n        /* \"contracts/modules/BasicIssuanceModule.sol\":6756:6782  _setToken.initializeModule */\n      0x0ffe0f1e\n      swap3\n        /* \"contracts/modules/BasicIssuanceModule.sol\":6756:6784  _setToken.initializeModule() */\n      0x04\n      dup1\n      dup4\n      add\n      swap4\n        /* \"contracts/modules/BasicIssuanceModule.sol\":6699:6729  managerIssuanceHook[_setToken] */\n      swap3\n        /* \"contracts/modules/BasicIssuanceModule.sol\":6756:6784  _setToken.initializeModule() */\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/modules/BasicIssuanceModule.sol\":6699:6729  managerIssuanceHook[_setToken] */\n      dup4\n      dup8\n        /* \"contracts/modules/BasicIssuanceModule.sol\":6756:6784  _setToken.initializeModule() */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_49\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_49:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/lib/ModuleBase.sol\":2493:2494  _ */\n      pop\n        /* \"contracts/modules/BasicIssuanceModule.sol\":6481:6791  function initialize(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/modules/BasicIssuanceModule.sol\":4734:6079  function redeem(... */\n    tag_18:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1688:1689  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2277:2284  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2277:2296  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2269:2332  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_51\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_52\n      swap1\n      jump(tag_53)\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_51:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1688:1689  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2407:2414  _status */\n      0x01\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2407:2425  _status = _ENTERED */\n      sstore\n        /* \"contracts/modules/BasicIssuanceModule.sol\":4906:4915  _setToken */\n      dup3\n        /* \"contracts/lib/ModuleBase.sol\":2574:2620  _validateOnlyValidAndInitializedSet(_setToken) */\n      tag_55\n        /* \"contracts/modules/BasicIssuanceModule.sol\":4906:4915  _setToken */\n      dup2\n        /* \"contracts/lib/ModuleBase.sol\":2574:2609  _validateOnlyValidAndInitializedSet */\n      tag_56\n        /* \"contracts/lib/ModuleBase.sol\":2574:2620  _validateOnlyValidAndInitializedSet(_setToken) */\n      jump\t// in\n    tag_55:\n        /* \"contracts/modules/BasicIssuanceModule.sol\":4951:4952  0 */\n      0x00\n        /* \"contracts/modules/BasicIssuanceModule.sol\":4939:4948  _quantity */\n      dup4\n        /* \"contracts/modules/BasicIssuanceModule.sol\":4939:4952  _quantity > 0 */\n      gt\n        /* \"contracts/modules/BasicIssuanceModule.sol\":4931:4984  require(_quantity > 0, \"Redeem quantity must be > 0\") */\n      tag_58\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_52\n      swap1\n      jump(tag_60)\n    tag_58:\n        /* \"contracts/modules/BasicIssuanceModule.sol\":5096:5133  _setToken.burn(msg.sender, _quantity) */\n      mload(0x40)\n      shl(0xe2, 0x2770a7eb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/modules/BasicIssuanceModule.sol\":5096:5110  _setToken.burn */\n      dup6\n      and\n      swap1\n      0x9dc29fac\n      swap1\n        /* \"contracts/modules/BasicIssuanceModule.sol\":5096:5133  _setToken.burn(msg.sender, _quantity) */\n      tag_61\n      swap1\n        /* \"contracts/modules/BasicIssuanceModule.sol\":5111:5121  msg.sender */\n      caller\n      swap1\n        /* \"contracts/modules/BasicIssuanceModule.sol\":5123:5132  _quantity */\n      dup8\n      swap1\n        /* \"contracts/modules/BasicIssuanceModule.sol\":5096:5133  _setToken.burn(msg.sender, _quantity) */\n      0x04\n      add\n      jump(tag_62)\n    tag_61:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_65\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_65:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/modules/BasicIssuanceModule.sol\":5229:5256  address[] memory components */\n      0x60\n        /* \"contracts/modules/BasicIssuanceModule.sol\":5259:5268  _setToken */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/modules/BasicIssuanceModule.sol\":5259:5282  _setToken.getComponents */\n      and\n      0x99d50d5d\n        /* \"contracts/modules/BasicIssuanceModule.sol\":5259:5284  _setToken.getComponents() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_68\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_68:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0x40\n      mstore\n      tag_69\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      jump(tag_70)\n    tag_69:\n        /* \"contracts/modules/BasicIssuanceModule.sol\":5229:5284  address[] memory components = _setToken.getComponents() */\n      swap1\n      pop\n        /* \"contracts/modules/BasicIssuanceModule.sol\":5299:5308  uint256 i */\n      0x00\n        /* \"contracts/modules/BasicIssuanceModule.sol\":5294:5993  for (uint256 i = 0; i < components.length; i++) {... */\n    tag_71:\n        /* \"contracts/modules/BasicIssuanceModule.sol\":5318:5328  components */\n      dup2\n        /* \"contracts/modules/BasicIssuanceModule.sol\":5318:5335  components.length */\n      mload\n        /* \"contracts/modules/BasicIssuanceModule.sol\":5314:5315  i */\n      dup2\n        /* \"contracts/modules/BasicIssuanceModule.sol\":5314:5335  i < components.length */\n      lt\n        /* \"contracts/modules/BasicIssuanceModule.sol\":5294:5993  for (uint256 i = 0; i < components.length; i++) {... */\n      iszero\n      tag_72\n      jumpi\n        /* \"contracts/modules/BasicIssuanceModule.sol\":5356:5373  address component */\n      0x00\n        /* \"contracts/modules/BasicIssuanceModule.sol\":5376:5386  components */\n      dup3\n        /* \"contracts/modules/BasicIssuanceModule.sol\":5387:5388  i */\n      dup3\n        /* \"contracts/modules/BasicIssuanceModule.sol\":5376:5389  components[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_74\n      jumpi\n      invalid\n    tag_74:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/modules/BasicIssuanceModule.sol\":5356:5389  address component = components[i] */\n      swap1\n      pop\n        /* \"contracts/modules/BasicIssuanceModule.sol\":5412:5452  _setToken.hasExternalPosition(component) */\n      tag_75\n        /* \"contracts/modules/BasicIssuanceModule.sol\":5442:5451  component */\n      dup2\n        /* \"contracts/modules/BasicIssuanceModule.sol\":5412:5421  _setToken */\n      dup9\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/modules/BasicIssuanceModule.sol\":5412:5441  _setToken.hasExternalPosition */\n      and\n      tag_76\n      swap1\n        /* \"contracts/modules/BasicIssuanceModule.sol\":5412:5452  _setToken.hasExternalPosition(component) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_75:\n        /* \"contracts/modules/BasicIssuanceModule.sol\":5411:5452  !_setToken.hasExternalPosition(component) */\n      iszero\n        /* \"contracts/modules/BasicIssuanceModule.sol\":5403:5493  require(!_setToken.hasExternalPosition(component), \"Only default positions are supported\") */\n      tag_77\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_52\n      swap1\n      jump(tag_79)\n    tag_77:\n        /* \"contracts/modules/BasicIssuanceModule.sol\":5508:5520  uint256 unit */\n      0x00\n        /* \"contracts/modules/BasicIssuanceModule.sol\":5523:5582  _setToken.getDefaultPositionRealUnit(component).toUint256() */\n      tag_80\n        /* \"contracts/modules/BasicIssuanceModule.sol\":5523:5532  _setToken */\n      dup9\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/modules/BasicIssuanceModule.sol\":5523:5559  _setToken.getDefaultPositionRealUnit */\n      and\n      0x66cb8d2f\n        /* \"contracts/modules/BasicIssuanceModule.sol\":5560:5569  component */\n      dup5\n        /* \"contracts/modules/BasicIssuanceModule.sol\":5523:5570  _setToken.getDefaultPositionRealUnit(component) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_81\n      swap2\n      swap1\n      jump(tag_82)\n    tag_81:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_85\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_85:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      jump(tag_87)\n    tag_86:\n        /* \"contracts/modules/BasicIssuanceModule.sol\":5523:5580  _setToken.getDefaultPositionRealUnit(component).toUint256 */\n      tag_88\n        /* \"contracts/modules/BasicIssuanceModule.sol\":5523:5582  _setToken.getDefaultPositionRealUnit(component).toUint256() */\n      jump\t// in\n    tag_80:\n        /* \"contracts/modules/BasicIssuanceModule.sol\":5508:5582  uint256 unit = _setToken.getDefaultPositionRealUnit(component).toUint256() */\n      swap1\n      pop\n        /* \"contracts/modules/BasicIssuanceModule.sol\":5711:5736  uint256 componentQuantity */\n      0x00\n        /* \"contracts/modules/BasicIssuanceModule.sol\":5739:5765  _quantity.preciseMul(unit) */\n      tag_89\n        /* \"contracts/modules/BasicIssuanceModule.sol\":5739:5748  _quantity */\n      dup9\n        /* \"contracts/modules/BasicIssuanceModule.sol\":5508:5582  uint256 unit = _setToken.getDefaultPositionRealUnit(component).toUint256() */\n      dup4\n        /* \"contracts/modules/BasicIssuanceModule.sol\":5739:5765  _quantity.preciseMul(unit) */\n      0xffffffff\n        /* \"contracts/modules/BasicIssuanceModule.sol\":5739:5759  _quantity.preciseMul */\n      tag_90\n        /* \"contracts/modules/BasicIssuanceModule.sol\":5739:5765  _quantity.preciseMul(unit) */\n      and\n      jump\t// in\n    tag_89:\n        /* \"contracts/modules/BasicIssuanceModule.sol\":5711:5765  uint256 componentQuantity = _quantity.preciseMul(unit) */\n      swap1\n      pop\n        /* \"contracts/modules/BasicIssuanceModule.sol\":5855:5982  _setToken.strictInvokeTransfer(... */\n      tag_91\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/modules/BasicIssuanceModule.sol\":5855:5885  _setToken.strictInvokeTransfer */\n      dup11\n      and\n        /* \"contracts/modules/BasicIssuanceModule.sol\":5903:5912  component */\n      dup5\n        /* \"contracts/modules/BasicIssuanceModule.sol\":5930:5933  _to */\n      dup10\n        /* \"contracts/modules/BasicIssuanceModule.sol\":5711:5765  uint256 componentQuantity = _quantity.preciseMul(unit) */\n      dup5\n        /* \"contracts/modules/BasicIssuanceModule.sol\":5855:5982  _setToken.strictInvokeTransfer(... */\n      0xffffffff\n        /* \"contracts/modules/BasicIssuanceModule.sol\":5855:5885  _setToken.strictInvokeTransfer */\n      tag_92\n        /* \"contracts/modules/BasicIssuanceModule.sol\":5855:5982  _setToken.strictInvokeTransfer(... */\n      and\n      jump\t// in\n    tag_91:\n      pop\n      pop\n      pop\n        /* \"contracts/modules/BasicIssuanceModule.sol\":5337:5340  i++ */\n      0x01\n      add\n        /* \"contracts/modules/BasicIssuanceModule.sol\":5294:5993  for (uint256 i = 0; i < components.length; i++) {... */\n      jump(tag_71)\n    tag_72:\n      pop\n        /* \"contracts/modules/BasicIssuanceModule.sol\":6057:6060  _to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/modules/BasicIssuanceModule.sol\":6008:6072  SetTokenRedeemed(address(_setToken), msg.sender, _to, _quantity) */\n      and\n        /* \"contracts/modules/BasicIssuanceModule.sol\":6045:6055  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/modules/BasicIssuanceModule.sol\":6008:6072  SetTokenRedeemed(address(_setToken), msg.sender, _to, _quantity) */\n      and\n        /* \"contracts/modules/BasicIssuanceModule.sol\":6033:6042  _setToken */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/modules/BasicIssuanceModule.sol\":6008:6072  SetTokenRedeemed(address(_setToken), msg.sender, _to, _quantity) */\n      and\n      0x05f8aaada00823525432114f0e904c6f7c0198a5b8f113ee635ff81aaf9566ad\n        /* \"contracts/modules/BasicIssuanceModule.sol\":6062:6071  _quantity */\n      dup8\n        /* \"contracts/modules/BasicIssuanceModule.sol\":6008:6072  SetTokenRedeemed(address(_setToken), msg.sender, _to, _quantity) */\n      mload(0x40)\n      tag_93\n      swap2\n      swap1\n      jump(tag_94)\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1645:1646  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2580:2602  _status = _NOT_ENTERED */\n      dup1\n      sstore\n      pop\n      pop\n      pop\n        /* \"contracts/modules/BasicIssuanceModule.sol\":4734:6079  function redeem(... */\n      jump\t// out\n        /* \"contracts/modules/BasicIssuanceModule.sol\":3254:4317  function issue(... */\n    tag_21:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1688:1689  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2277:2284  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2277:2296  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2269:2332  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_96\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_52\n      swap1\n      jump(tag_53)\n    tag_96:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1688:1689  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2407:2414  _status */\n      0x01\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2407:2425  _status = _ENTERED */\n      sstore\n        /* \"contracts/modules/BasicIssuanceModule.sol\":3425:3434  _setToken */\n      dup3\n        /* \"contracts/lib/ModuleBase.sol\":2574:2620  _validateOnlyValidAndInitializedSet(_setToken) */\n      tag_99\n        /* \"contracts/modules/BasicIssuanceModule.sol\":3425:3434  _setToken */\n      dup2\n        /* \"contracts/lib/ModuleBase.sol\":2574:2609  _validateOnlyValidAndInitializedSet */\n      tag_56\n        /* \"contracts/lib/ModuleBase.sol\":2574:2620  _validateOnlyValidAndInitializedSet(_setToken) */\n      jump\t// in\n    tag_99:\n        /* \"contracts/modules/BasicIssuanceModule.sol\":3470:3471  0 */\n      0x00\n        /* \"contracts/modules/BasicIssuanceModule.sol\":3458:3467  _quantity */\n      dup4\n        /* \"contracts/modules/BasicIssuanceModule.sol\":3458:3471  _quantity > 0 */\n      gt\n        /* \"contracts/modules/BasicIssuanceModule.sol\":3450:3502  require(_quantity > 0, \"Issue quantity must be > 0\") */\n      tag_101\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_52\n      swap1\n      jump(tag_103)\n    tag_101:\n        /* \"contracts/modules/BasicIssuanceModule.sol\":3513:3533  address hookContract */\n      0x00\n        /* \"contracts/modules/BasicIssuanceModule.sol\":3536:3593  _callPreIssueHooks(_setToken, _quantity, msg.sender, _to) */\n      tag_104\n        /* \"contracts/modules/BasicIssuanceModule.sol\":3555:3564  _setToken */\n      dup6\n        /* \"contracts/modules/BasicIssuanceModule.sol\":3566:3575  _quantity */\n      dup6\n        /* \"contracts/modules/BasicIssuanceModule.sol\":3577:3587  msg.sender */\n      caller\n        /* \"contracts/modules/BasicIssuanceModule.sol\":3589:3592  _to */\n      dup7\n        /* \"contracts/modules/BasicIssuanceModule.sol\":3536:3554  _callPreIssueHooks */\n      tag_105\n        /* \"contracts/modules/BasicIssuanceModule.sol\":3536:3593  _callPreIssueHooks(_setToken, _quantity, msg.sender, _to) */\n      jump\t// in\n    tag_104:\n        /* \"contracts/modules/BasicIssuanceModule.sol\":3513:3593  address hookContract = _callPreIssueHooks(_setToken, _quantity, msg.sender, _to) */\n      swap1\n      pop\n        /* \"contracts/modules/BasicIssuanceModule.sol\":3618:3645  address[] memory components */\n      0x60\n        /* \"contracts/modules/BasicIssuanceModule.sol\":3659:3695  uint256[] memory componentQuantities */\n      dup1\n        /* \"contracts/modules/BasicIssuanceModule.sol\":3708:3763  getRequiredComponentUnitsForIssue(_setToken, _quantity) */\n      tag_106\n        /* \"contracts/modules/BasicIssuanceModule.sol\":3742:3751  _setToken */\n      dup8\n        /* \"contracts/modules/BasicIssuanceModule.sol\":3753:3762  _quantity */\n      dup8\n        /* \"contracts/modules/BasicIssuanceModule.sol\":3708:3741  getRequiredComponentUnitsForIssue */\n      tag_25\n        /* \"contracts/modules/BasicIssuanceModule.sol\":3708:3763  getRequiredComponentUnitsForIssue(_setToken, _quantity) */\n      jump\t// in\n    tag_106:\n        /* \"contracts/modules/BasicIssuanceModule.sol\":3604:3763  (... */\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n        /* \"contracts/modules/BasicIssuanceModule.sol\":3858:3867  uint256 i */\n      0x00\n        /* \"contracts/modules/BasicIssuanceModule.sol\":3853:4149  for (uint256 i = 0; i < components.length; i++) {... */\n    tag_107:\n        /* \"contracts/modules/BasicIssuanceModule.sol\":3877:3887  components */\n      dup3\n        /* \"contracts/modules/BasicIssuanceModule.sol\":3877:3894  components.length */\n      mload\n        /* \"contracts/modules/BasicIssuanceModule.sol\":3873:3874  i */\n      dup2\n        /* \"contracts/modules/BasicIssuanceModule.sol\":3873:3894  i < components.length */\n      lt\n        /* \"contracts/modules/BasicIssuanceModule.sol\":3853:4149  for (uint256 i = 0; i < components.length; i++) {... */\n      iszero\n      tag_108\n      jumpi\n        /* \"contracts/modules/BasicIssuanceModule.sol\":3969:4138  transferFrom(... */\n      tag_110\n        /* \"contracts/modules/BasicIssuanceModule.sol\":4006:4016  components */\n      dup4\n        /* \"contracts/modules/BasicIssuanceModule.sol\":4017:4018  i */\n      dup3\n        /* \"contracts/modules/BasicIssuanceModule.sol\":4006:4019  components[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_111\n      jumpi\n      invalid\n    tag_111:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/modules/BasicIssuanceModule.sol\":4038:4048  msg.sender */\n      caller\n        /* \"contracts/modules/BasicIssuanceModule.sol\":4074:4083  _setToken */\n      dup11\n        /* \"contracts/modules/BasicIssuanceModule.sol\":4102:4121  componentQuantities */\n      dup6\n        /* \"contracts/modules/BasicIssuanceModule.sol\":4122:4123  i */\n      dup6\n        /* \"contracts/modules/BasicIssuanceModule.sol\":4102:4124  componentQuantities[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_112\n      jumpi\n      invalid\n    tag_112:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/modules/BasicIssuanceModule.sol\":3969:3981  transferFrom */\n      tag_113\n        /* \"contracts/modules/BasicIssuanceModule.sol\":3969:4138  transferFrom(... */\n      jump\t// in\n    tag_110:\n        /* \"contracts/modules/BasicIssuanceModule.sol\":3896:3899  i++ */\n      0x01\n      add\n        /* \"contracts/modules/BasicIssuanceModule.sol\":3853:4149  for (uint256 i = 0; i < components.length; i++) {... */\n      jump(tag_107)\n    tag_108:\n      pop\n        /* \"contracts/modules/BasicIssuanceModule.sol\":4188:4218  _setToken.mint(_to, _quantity) */\n      mload(0x40)\n      shl(0xe0, 0x40c10f19)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/modules/BasicIssuanceModule.sol\":4188:4202  _setToken.mint */\n      dup9\n      and\n      swap1\n      0x40c10f19\n      swap1\n        /* \"contracts/modules/BasicIssuanceModule.sol\":4188:4218  _setToken.mint(_to, _quantity) */\n      tag_114\n      swap1\n        /* \"contracts/modules/BasicIssuanceModule.sol\":4203:4206  _to */\n      dup9\n      swap1\n        /* \"contracts/modules/BasicIssuanceModule.sol\":4208:4217  _quantity */\n      dup11\n      swap1\n        /* \"contracts/modules/BasicIssuanceModule.sol\":4188:4218  _setToken.mint(_to, _quantity) */\n      0x04\n      add\n      jump(tag_62)\n    tag_114:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_116\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_116:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_118\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_118:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/modules/BasicIssuanceModule.sol\":4281:4284  _to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/modules/BasicIssuanceModule.sol\":4234:4310  SetTokenIssued(address(_setToken), msg.sender, _to, hookContract, _quantity) */\n      and\n        /* \"contracts/modules/BasicIssuanceModule.sol\":4269:4279  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/modules/BasicIssuanceModule.sol\":4234:4310  SetTokenIssued(address(_setToken), msg.sender, _to, hookContract, _quantity) */\n      and\n        /* \"contracts/modules/BasicIssuanceModule.sol\":4257:4266  _setToken */\n      dup9\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/modules/BasicIssuanceModule.sol\":4234:4310  SetTokenIssued(address(_setToken), msg.sender, _to, hookContract, _quantity) */\n      and\n      0xc07f1e2fe31c4d90eae81f76d263d7995aac043a99d6ee6de9c0506047f541c2\n        /* \"contracts/modules/BasicIssuanceModule.sol\":4286:4298  hookContract */\n      dup7\n        /* \"contracts/modules/BasicIssuanceModule.sol\":4300:4309  _quantity */\n      dup11\n        /* \"contracts/modules/BasicIssuanceModule.sol\":4234:4310  SetTokenIssued(address(_setToken), msg.sender, _to, hookContract, _quantity) */\n      mload(0x40)\n      tag_119\n      swap3\n      swap2\n      swap1\n      jump(tag_62)\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1645:1646  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2580:2602  _status = _NOT_ENTERED */\n      dup1\n      sstore\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/modules/BasicIssuanceModule.sol\":3254:4317  function issue(... */\n      jump\t// out\n        /* \"contracts/modules/BasicIssuanceModule.sol\":7545:8274  function getRequiredComponentUnitsForIssue(... */\n    tag_25:\n        /* \"contracts/modules/BasicIssuanceModule.sol\":7741:7757  address[] memory */\n      0x60\n        /* \"contracts/modules/BasicIssuanceModule.sol\":7759:7775  uint256[] memory */\n      dup1\n        /* \"contracts/modules/BasicIssuanceModule.sol\":7713:7722  _setToken */\n      dup4\n        /* \"contracts/lib/ModuleBase.sol\":2574:2620  _validateOnlyValidAndInitializedSet(_setToken) */\n      tag_121\n        /* \"contracts/lib/ModuleBase.sol\":2610:2619  _setToken */\n      dup2\n        /* \"contracts/lib/ModuleBase.sol\":2574:2609  _validateOnlyValidAndInitializedSet */\n      tag_56\n        /* \"contracts/lib/ModuleBase.sol\":2574:2620  _validateOnlyValidAndInitializedSet(_setToken) */\n      jump\t// in\n    tag_121:\n        /* \"contracts/modules/BasicIssuanceModule.sol\":7791:7818  address[] memory components */\n      0x60\n        /* \"contracts/modules/BasicIssuanceModule.sol\":7821:7830  _setToken */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/modules/BasicIssuanceModule.sol\":7821:7844  _setToken.getComponents */\n      and\n      0x99d50d5d\n        /* \"contracts/modules/BasicIssuanceModule.sol\":7821:7846  _setToken.getComponents() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_123\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_123:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_125\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_125:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0x40\n      mstore\n      tag_126\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      jump(tag_70)\n    tag_126:\n        /* \"contracts/modules/BasicIssuanceModule.sol\":7791:7846  address[] memory components = _setToken.getComponents() */\n      swap1\n      pop\n        /* \"contracts/modules/BasicIssuanceModule.sol\":7857:7887  uint256[] memory notionalUnits */\n      0x60\n        /* \"contracts/modules/BasicIssuanceModule.sol\":7904:7914  components */\n      dup2\n        /* \"contracts/modules/BasicIssuanceModule.sol\":7904:7921  components.length */\n      mload\n        /* \"contracts/modules/BasicIssuanceModule.sol\":7890:7922  new uint256[](components.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      dup1\n      iszero\n      tag_127\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_127:\n      pop\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_128\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_128:\n      pop\n        /* \"contracts/modules/BasicIssuanceModule.sol\":7857:7922  uint256[] memory notionalUnits = new uint256[](components.length) */\n      swap1\n      pop\n        /* \"contracts/modules/BasicIssuanceModule.sol\":7938:7947  uint256 i */\n      0x00\n        /* \"contracts/modules/BasicIssuanceModule.sol\":7933:8223  for (uint256 i = 0; i < components.length; i++) {... */\n    tag_129:\n        /* \"contracts/modules/BasicIssuanceModule.sol\":7957:7967  components */\n      dup3\n        /* \"contracts/modules/BasicIssuanceModule.sol\":7957:7974  components.length */\n      mload\n        /* \"contracts/modules/BasicIssuanceModule.sol\":7953:7954  i */\n      dup2\n        /* \"contracts/modules/BasicIssuanceModule.sol\":7953:7974  i < components.length */\n      lt\n        /* \"contracts/modules/BasicIssuanceModule.sol\":7933:8223  for (uint256 i = 0; i < components.length; i++) {... */\n      iszero\n      tag_130\n      jumpi\n        /* \"contracts/modules/BasicIssuanceModule.sol\":8004:8048  _setToken.hasExternalPosition(components[i]) */\n      tag_132\n        /* \"contracts/modules/BasicIssuanceModule.sol\":8034:8044  components */\n      dup4\n        /* \"contracts/modules/BasicIssuanceModule.sol\":8045:8046  i */\n      dup3\n        /* \"contracts/modules/BasicIssuanceModule.sol\":8034:8047  components[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_133\n      jumpi\n      invalid\n    tag_133:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/modules/BasicIssuanceModule.sol\":8004:8013  _setToken */\n      dup10\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/modules/BasicIssuanceModule.sol\":8004:8033  _setToken.hasExternalPosition */\n      and\n      tag_76\n      swap1\n        /* \"contracts/modules/BasicIssuanceModule.sol\":8004:8048  _setToken.hasExternalPosition(components[i]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_132:\n        /* \"contracts/modules/BasicIssuanceModule.sol\":8003:8048  !_setToken.hasExternalPosition(components[i]) */\n      iszero\n        /* \"contracts/modules/BasicIssuanceModule.sol\":7995:8089  require(!_setToken.hasExternalPosition(components[i]), \"Only default positions are supported\") */\n      tag_134\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_52\n      swap1\n      jump(tag_79)\n    tag_134:\n        /* \"contracts/modules/BasicIssuanceModule.sol\":8123:8212  _setToken.getDefaultPositionRealUnit(components[i]).toUint256().preciseMulCeil(_quantity) */\n      tag_136\n        /* \"contracts/modules/BasicIssuanceModule.sol\":8202:8211  _quantity */\n      dup8\n        /* \"contracts/modules/BasicIssuanceModule.sol\":8123:8186  _setToken.getDefaultPositionRealUnit(components[i]).toUint256() */\n      tag_137\n        /* \"contracts/modules/BasicIssuanceModule.sol\":8123:8132  _setToken */\n      dup11\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/modules/BasicIssuanceModule.sol\":8123:8159  _setToken.getDefaultPositionRealUnit */\n      and\n      0x66cb8d2f\n        /* \"contracts/modules/BasicIssuanceModule.sol\":8160:8170  components */\n      dup8\n        /* \"contracts/modules/BasicIssuanceModule.sol\":8171:8172  i */\n      dup7\n        /* \"contracts/modules/BasicIssuanceModule.sol\":8160:8173  components[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_138\n      jumpi\n      invalid\n    tag_138:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/modules/BasicIssuanceModule.sol\":8123:8174  _setToken.getDefaultPositionRealUnit(components[i]) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_81\n      swap2\n      swap1\n      jump(tag_82)\n        /* \"contracts/modules/BasicIssuanceModule.sol\":8123:8186  _setToken.getDefaultPositionRealUnit(components[i]).toUint256() */\n    tag_137:\n        /* \"contracts/modules/BasicIssuanceModule.sol\":8123:8201  _setToken.getDefaultPositionRealUnit(components[i]).toUint256().preciseMulCeil */\n      swap1\n        /* \"contracts/modules/BasicIssuanceModule.sol\":8123:8212  _setToken.getDefaultPositionRealUnit(components[i]).toUint256().preciseMulCeil(_quantity) */\n      0xffffffff\n        /* \"contracts/modules/BasicIssuanceModule.sol\":8123:8201  _setToken.getDefaultPositionRealUnit(components[i]).toUint256().preciseMulCeil */\n      tag_144\n        /* \"contracts/modules/BasicIssuanceModule.sol\":8123:8212  _setToken.getDefaultPositionRealUnit(components[i]).toUint256().preciseMulCeil(_quantity) */\n      and\n      jump\t// in\n    tag_136:\n        /* \"contracts/modules/BasicIssuanceModule.sol\":8104:8117  notionalUnits */\n      dup3\n        /* \"contracts/modules/BasicIssuanceModule.sol\":8118:8119  i */\n      dup3\n        /* \"contracts/modules/BasicIssuanceModule.sol\":8104:8120  notionalUnits[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_145\n      jumpi\n      invalid\n    tag_145:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"contracts/modules/BasicIssuanceModule.sol\":8104:8212  notionalUnits[i] = _setToken.getDefaultPositionRealUnit(components[i]).toUint256().preciseMulCeil(_quantity) */\n      mstore\n        /* \"contracts/modules/BasicIssuanceModule.sol\":7976:7979  i++ */\n      0x01\n      add\n        /* \"contracts/modules/BasicIssuanceModule.sol\":7933:8223  for (uint256 i = 0; i < components.length; i++) {... */\n      jump(tag_129)\n    tag_130:\n      pop\n        /* \"contracts/modules/BasicIssuanceModule.sol\":8241:8251  components */\n      swap1\n      swap7\n      swap1\n      swap6\n      pop\n        /* \"contracts/modules/BasicIssuanceModule.sol\":7545:8274  function getRequiredComponentUnitsForIssue(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/modules/BasicIssuanceModule.sol\":6939:7056  function removeModule() external override {... */\n    tag_29:\n        /* \"contracts/modules/BasicIssuanceModule.sol\":6991:7049  revert(\"The BasicIssuanceModule module cannot be removed\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_52\n      swap1\n      jump(tag_148)\n        /* \"contracts/modules/BasicIssuanceModule.sol\":2419:2488  mapping(ISetToken => IManagerIssuanceHook) public managerIssuanceHook */\n    tag_33:\n      mstore(0x20, 0x02)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/lib/ModuleBase.sol\":2156:2185  IController public controller */\n    tag_37:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n      dup2\n      jump\t// out\n        /* \"contracts/lib/ModuleBase.sol\":7093:7268  function _validateOnlySetManager(ISetToken _setToken, address _caller) internal view {... */\n    tag_42:\n        /* \"contracts/lib/ModuleBase.sol\":7196:7228  isSetManager(_setToken, _caller) */\n      tag_150\n        /* \"contracts/lib/ModuleBase.sol\":7209:7218  _setToken */\n      dup3\n        /* \"contracts/lib/ModuleBase.sol\":7220:7227  _caller */\n      dup3\n        /* \"contracts/lib/ModuleBase.sol\":7196:7208  isSetManager */\n      tag_151\n        /* \"contracts/lib/ModuleBase.sol\":7196:7228  isSetManager(_setToken, _caller) */\n      jump\t// in\n    tag_150:\n        /* \"contracts/lib/ModuleBase.sol\":7188:7261  require(isSetManager(_setToken, _caller), \"Must be the SetToken manager\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_52\n      swap1\n      jump(tag_154)\n    tag_152:\n        /* \"contracts/lib/ModuleBase.sol\":7093:7268  function _validateOnlySetManager(ISetToken _setToken, address _caller) internal view {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/lib/ModuleBase.sol\":8078:8345  function _validateOnlyValidAndPendingSet(ISetToken _setToken) internal view {... */\n    tag_45:\n        /* \"contracts/lib/ModuleBase.sol\":8172:8182  controller */\n      sload(0x00)\n        /* \"contracts/lib/ModuleBase.sol\":8172:8208  controller.isSet(address(_setToken)) */\n      mload(0x40)\n      shl(0xe2, 0x1d3af8fb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/lib/ModuleBase.sol\":8172:8182  controller */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/lib/ModuleBase.sol\":8172:8188  controller.isSet */\n      0x74ebe3ec\n      swap1\n        /* \"contracts/lib/ModuleBase.sol\":8172:8208  controller.isSet(address(_setToken)) */\n      tag_156\n      swap1\n        /* \"contracts/lib/ModuleBase.sol\":8197:8206  _setToken */\n      dup5\n      swap1\n        /* \"contracts/lib/ModuleBase.sol\":8172:8208  controller.isSet(address(_setToken)) */\n      0x04\n      add\n      jump(tag_82)\n    tag_156:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_157\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_157:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_159\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_159:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_160\n      swap2\n      swap1\n      jump(tag_161)\n    tag_160:\n        /* \"contracts/lib/ModuleBase.sol\":8164:8248  require(controller.isSet(address(_setToken)), \"Must be controller-enabled SetToken\") */\n      tag_162\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_52\n      swap1\n      jump(tag_164)\n    tag_162:\n        /* \"contracts/lib/ModuleBase.sol\":8266:8303  isSetPendingInitialization(_setToken) */\n      tag_165\n        /* \"contracts/lib/ModuleBase.sol\":8293:8302  _setToken */\n      dup2\n        /* \"contracts/lib/ModuleBase.sol\":8266:8292  isSetPendingInitialization */\n      tag_166\n        /* \"contracts/lib/ModuleBase.sol\":8266:8303  isSetPendingInitialization(_setToken) */\n      jump\t// in\n    tag_165:\n        /* \"contracts/lib/ModuleBase.sol\":8258:8338  require(isSetPendingInitialization(_setToken), \"Must be pending initialization\") */\n      tag_167\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_52\n      swap1\n      jump(tag_169)\n    tag_167:\n        /* \"contracts/lib/ModuleBase.sol\":8078:8345  function _validateOnlyValidAndPendingSet(ISetToken _setToken) internal view {... */\n      pop\n      jump\t// out\n        /* \"contracts/lib/ModuleBase.sol\":7336:7521  function _validateOnlyValidAndInitializedSet(ISetToken _setToken) internal view {... */\n    tag_56:\n        /* \"contracts/lib/ModuleBase.sol\":7434:7469  isSetValidAndInitialized(_setToken) */\n      tag_171\n        /* \"contracts/lib/ModuleBase.sol\":7459:7468  _setToken */\n      dup2\n        /* \"contracts/lib/ModuleBase.sol\":7434:7458  isSetValidAndInitialized */\n      tag_172\n        /* \"contracts/lib/ModuleBase.sol\":7434:7469  isSetValidAndInitialized(_setToken) */\n      jump\t// in\n    tag_171:\n        /* \"contracts/lib/ModuleBase.sol\":7426:7514  require(isSetValidAndInitialized(_setToken), \"Must be a valid and initialized SetToken\") */\n      tag_167\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_52\n      swap1\n      jump(tag_175)\n        /* \"contracts/lib/Position.sol\":2048:2229  function hasExternalPosition(ISetToken _setToken, address _component) internal view returns(bool) {... */\n    tag_76:\n        /* \"contracts/lib/Position.sol\":2140:2144  bool */\n      0x00\n        /* \"contracts/lib/Position.sol\":2221:2222  0 */\n      dup1\n        /* \"contracts/lib/Position.sol\":2163:2172  _setToken */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/lib/Position.sol\":2163:2199  _setToken.getExternalPositionModules */\n      and\n      0xa7bdad03\n        /* \"contracts/lib/Position.sol\":2200:2210  _component */\n      dup5\n        /* \"contracts/lib/Position.sol\":2163:2211  _setToken.getExternalPositionModules(_component) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_177\n      swap2\n      swap1\n      jump(tag_82)\n    tag_177:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_178\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_178:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_180\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_180:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0x40\n      mstore\n      tag_181\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      jump(tag_70)\n    tag_181:\n        /* \"contracts/lib/Position.sol\":2163:2218  _setToken.getExternalPositionModules(_component).length */\n      mload\n        /* \"contracts/lib/Position.sol\":2163:2222  _setToken.getExternalPositionModules(_component).length > 0 */\n      gt\n        /* \"contracts/lib/Position.sol\":2156:2222  return _setToken.getExternalPositionModules(_component).length > 0 */\n      swap1\n      pop\n        /* \"contracts/lib/Position.sol\":2048:2229  function hasExternalPosition(ISetToken _setToken, address _component) internal view returns(bool) {... */\n    tag_176:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/SafeCast.sol\":3282:3450  function toUint256(int256 value) internal pure returns (uint256) {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/utils/SafeCast.sol\":3338:3345  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/SafeCast.sol\":3374:3375  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/SafeCast.sol\":3365:3370  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/SafeCast.sol\":3365:3375  value >= 0 */\n      slt\n      iszero\n        /* \"@openzeppelin/contracts/utils/SafeCast.sol\":3357:3412  require(value >= 0, \"SafeCast: value must be positive\") */\n      tag_183\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_52\n      swap1\n      jump(tag_185)\n    tag_183:\n      pop\n        /* \"@openzeppelin/contracts/utils/SafeCast.sol\":3437:3442  value */\n      swap1\n        /* \"@openzeppelin/contracts/utils/SafeCast.sol\":3282:3450  function toUint256(int256 value) internal pure returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/lib/PreciseUnitMath.sol\":3026:3150  function preciseMul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_90:\n        /* \"contracts/lib/PreciseUnitMath.sol\":3091:3098  uint256 */\n      0x00\n        /* \"contracts/lib/PreciseUnitMath.sol\":3117:3143  a.mul(b).div(PRECISE_UNIT) */\n      tag_187\n        /* \"contracts/lib/PreciseUnitMath.sol\":1535:1543  10 ** 18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/lib/PreciseUnitMath.sol\":3117:3125  a.mul(b) */\n      tag_188\n        /* \"contracts/lib/PreciseUnitMath.sol\":3117:3118  a */\n      dup6\n        /* \"contracts/lib/PreciseUnitMath.sol\":3123:3124  b */\n      dup6\n        /* \"contracts/lib/PreciseUnitMath.sol\":3117:3125  a.mul(b) */\n      0xffffffff\n        /* \"contracts/lib/PreciseUnitMath.sol\":3117:3122  a.mul */\n      tag_189\n        /* \"contracts/lib/PreciseUnitMath.sol\":3117:3125  a.mul(b) */\n      and\n      jump\t// in\n    tag_188:\n        /* \"contracts/lib/PreciseUnitMath.sol\":3117:3129  a.mul(b).div */\n      swap1\n        /* \"contracts/lib/PreciseUnitMath.sol\":3117:3143  a.mul(b).div(PRECISE_UNIT) */\n      0xffffffff\n        /* \"contracts/lib/PreciseUnitMath.sol\":3117:3129  a.mul(b).div */\n      tag_190\n        /* \"contracts/lib/PreciseUnitMath.sol\":3117:3143  a.mul(b).div(PRECISE_UNIT) */\n      and\n      jump\t// in\n    tag_187:\n        /* \"contracts/lib/PreciseUnitMath.sol\":3110:3143  return a.mul(b).div(PRECISE_UNIT) */\n      swap4\n        /* \"contracts/lib/PreciseUnitMath.sol\":3026:3150  function preciseMul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/lib/Invoke.sol\":2913:3693  function strictInvokeTransfer(... */\n    tag_92:\n        /* \"contracts/lib/Invoke.sol\":3085:3098  _quantity > 0 */\n      dup1\n      iszero\n        /* \"contracts/lib/Invoke.sol\":3081:3687  if (_quantity > 0) {... */\n      tag_192\n      jumpi\n        /* \"contracts/lib/Invoke.sol\":3206:3250  IERC20(_token).balanceOf(address(_setToken)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/lib/Invoke.sol\":3180:3203  uint256 existingBalance */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/lib/Invoke.sol\":3206:3230  IERC20(_token).balanceOf */\n      dup6\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"contracts/lib/Invoke.sol\":3206:3250  IERC20(_token).balanceOf(address(_setToken)) */\n      tag_193\n      swap1\n        /* \"contracts/lib/Invoke.sol\":3239:3248  _setToken */\n      dup9\n      swap1\n        /* \"contracts/lib/Invoke.sol\":3206:3250  IERC20(_token).balanceOf(address(_setToken)) */\n      0x04\n      add\n      jump(tag_82)\n    tag_193:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_194\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_194:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_196\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_196:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_197\n      swap2\n      swap1\n      jump(tag_87)\n    tag_197:\n        /* \"contracts/lib/Invoke.sol\":3180:3250  uint256 existingBalance = IERC20(_token).balanceOf(address(_setToken)) */\n      swap1\n      pop\n        /* \"contracts/lib/Invoke.sol\":3265:3321  Invoke.invokeTransfer(_setToken, _token, _to, _quantity) */\n      tag_199\n        /* \"contracts/lib/Invoke.sol\":3287:3296  _setToken */\n      dup6\n        /* \"contracts/lib/Invoke.sol\":3298:3304  _token */\n      dup6\n        /* \"contracts/lib/Invoke.sol\":3306:3309  _to */\n      dup6\n        /* \"contracts/lib/Invoke.sol\":3311:3320  _quantity */\n      dup6\n        /* \"contracts/lib/Invoke.sol\":3265:3286  Invoke.invokeTransfer */\n      tag_200\n        /* \"contracts/lib/Invoke.sol\":3265:3321  Invoke.invokeTransfer(_setToken, _token, _to, _quantity) */\n      jump\t// in\n    tag_199:\n        /* \"contracts/lib/Invoke.sol\":3422:3466  IERC20(_token).balanceOf(address(_setToken)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/lib/Invoke.sol\":3401:3419  uint256 newBalance */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/lib/Invoke.sol\":3422:3446  IERC20(_token).balanceOf */\n      dup7\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"contracts/lib/Invoke.sol\":3422:3466  IERC20(_token).balanceOf(address(_setToken)) */\n      tag_201\n      swap1\n        /* \"contracts/lib/Invoke.sol\":3455:3464  _setToken */\n      dup10\n      swap1\n        /* \"contracts/lib/Invoke.sol\":3422:3466  IERC20(_token).balanceOf(address(_setToken)) */\n      0x04\n      add\n      jump(tag_82)\n    tag_201:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_202\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_202:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_204\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_204:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_205\n      swap2\n      swap1\n      jump(tag_87)\n    tag_205:\n        /* \"contracts/lib/Invoke.sol\":3401:3466  uint256 newBalance = IERC20(_token).balanceOf(address(_setToken)) */\n      swap1\n      pop\n        /* \"contracts/lib/Invoke.sol\":3583:3613  existingBalance.sub(_quantity) */\n      tag_206\n        /* \"contracts/lib/Invoke.sol\":3583:3598  existingBalance */\n      dup3\n        /* \"contracts/lib/Invoke.sol\":3603:3612  _quantity */\n      dup5\n        /* \"contracts/lib/Invoke.sol\":3583:3613  existingBalance.sub(_quantity) */\n      0xffffffff\n        /* \"contracts/lib/Invoke.sol\":3583:3602  existingBalance.sub */\n      tag_207\n        /* \"contracts/lib/Invoke.sol\":3583:3613  existingBalance.sub(_quantity) */\n      and\n      jump\t// in\n    tag_206:\n        /* \"contracts/lib/Invoke.sol\":3569:3579  newBalance */\n      dup2\n        /* \"contracts/lib/Invoke.sol\":3569:3613  newBalance == existingBalance.sub(_quantity) */\n      eq\n        /* \"contracts/lib/Invoke.sol\":3544:3676  require(... */\n      tag_208\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_52\n      swap1\n      jump(tag_210)\n    tag_208:\n        /* \"contracts/lib/Invoke.sol\":3081:3687  if (_quantity > 0) {... */\n      pop\n      pop\n    tag_192:\n        /* \"contracts/lib/Invoke.sol\":2913:3693  function strictInvokeTransfer(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/modules/BasicIssuanceModule.sol\":8546:9023  function _callPreIssueHooks(... */\n    tag_105:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/modules/BasicIssuanceModule.sol\":8774:8804  managerIssuanceHook[_setToken] */\n      dup1\n      dup6\n      and\n        /* \"contracts/modules/BasicIssuanceModule.sol\":8715:8722  address */\n      0x00\n        /* \"contracts/modules/BasicIssuanceModule.sol\":8774:8804  managerIssuanceHook[_setToken] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/modules/BasicIssuanceModule.sol\":8774:8793  managerIssuanceHook */\n      0x02\n        /* \"contracts/modules/BasicIssuanceModule.sol\":8774:8804  managerIssuanceHook[_setToken] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/modules/BasicIssuanceModule.sol\":8715:8722  address */\n      swap1\n      swap2\n        /* \"contracts/modules/BasicIssuanceModule.sol\":8774:8804  managerIssuanceHook[_setToken] */\n      and\n        /* \"contracts/modules/BasicIssuanceModule.sol\":8818:8853  address(preIssueHook) != address(0) */\n      dup1\n      iszero\n        /* \"contracts/modules/BasicIssuanceModule.sol\":8814:8989  if (address(preIssueHook) != address(0)) {... */\n      tag_212\n      jumpi\n        /* \"contracts/modules/BasicIssuanceModule.sol\":8869:8936  preIssueHook.invokePreIssueHook(_setToken, _quantity, _caller, _to) */\n      mload(0x40)\n      shl(0xe0, 0xa0458083)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/modules/BasicIssuanceModule.sol\":8869:8900  preIssueHook.invokePreIssueHook */\n      dup3\n      and\n      swap1\n      0xa0458083\n      swap1\n        /* \"contracts/modules/BasicIssuanceModule.sol\":8869:8936  preIssueHook.invokePreIssueHook(_setToken, _quantity, _caller, _to) */\n      tag_213\n      swap1\n        /* \"contracts/modules/BasicIssuanceModule.sol\":8901:8910  _setToken */\n      dup10\n      swap1\n        /* \"contracts/modules/BasicIssuanceModule.sol\":8912:8921  _quantity */\n      dup10\n      swap1\n        /* \"contracts/modules/BasicIssuanceModule.sol\":8923:8930  _caller */\n      dup10\n      swap1\n        /* \"contracts/modules/BasicIssuanceModule.sol\":8932:8935  _to */\n      dup10\n      swap1\n        /* \"contracts/modules/BasicIssuanceModule.sol\":8869:8936  preIssueHook.invokePreIssueHook(_setToken, _quantity, _caller, _to) */\n      0x04\n      add\n      jump(tag_214)\n    tag_213:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_215\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_215:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_217\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_217:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/modules/BasicIssuanceModule.sol\":8965:8977  preIssueHook */\n      dup1\n        /* \"contracts/modules/BasicIssuanceModule.sol\":8950:8978  return address(preIssueHook) */\n      swap2\n      pop\n      pop\n      jump(tag_211)\n        /* \"contracts/modules/BasicIssuanceModule.sol\":8814:8989  if (address(preIssueHook) != address(0)) {... */\n    tag_212:\n        /* \"contracts/modules/BasicIssuanceModule.sol\":9014:9015  0 */\n      0x00\n        /* \"contracts/modules/BasicIssuanceModule.sol\":8999:9016  return address(0) */\n      swap2\n      pop\n      pop\n        /* \"contracts/modules/BasicIssuanceModule.sol\":8546:9023  function _callPreIssueHooks(... */\n    tag_211:\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/lib/ModuleBase.sol\":3815:3982  function transferFrom(IERC20 _token, address _from, address _to, uint256 _quantity) internal {... */\n    tag_113:\n        /* \"contracts/lib/ModuleBase.sol\":3918:3975  ExplicitERC20.transferFrom(_token, _from, _to, _quantity) */\n      tag_192\n        /* \"contracts/lib/ModuleBase.sol\":3945:3951  _token */\n      dup5\n        /* \"contracts/lib/ModuleBase.sol\":3953:3958  _from */\n      dup5\n        /* \"contracts/lib/ModuleBase.sol\":3960:3963  _to */\n      dup5\n        /* \"contracts/lib/ModuleBase.sol\":3965:3974  _quantity */\n      dup5\n        /* \"contracts/lib/ModuleBase.sol\":3918:3944  ExplicitERC20.transferFrom */\n      tag_220\n        /* \"contracts/lib/ModuleBase.sol\":3918:3975  ExplicitERC20.transferFrom(_token, _from, _to, _quantity) */\n      jump\t// in\n        /* \"contracts/lib/PreciseUnitMath.sol\":3653:3859  function preciseMulCeil(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_144:\n        /* \"contracts/lib/PreciseUnitMath.sol\":3722:3729  uint256 */\n      0x00\n        /* \"contracts/lib/PreciseUnitMath.sol\":3745:3751  a == 0 */\n      dup3\n      iszero\n      dup1\n        /* \"contracts/lib/PreciseUnitMath.sol\":3745:3761  a == 0 || b == 0 */\n      tag_222\n      jumpi\n      pop\n        /* \"contracts/lib/PreciseUnitMath.sol\":3755:3761  b == 0 */\n      dup2\n      iszero\n        /* \"contracts/lib/PreciseUnitMath.sol\":3745:3761  a == 0 || b == 0 */\n    tag_222:\n        /* \"contracts/lib/PreciseUnitMath.sol\":3741:3796  if (a == 0 || b == 0) {... */\n      iszero\n      tag_223\n      jumpi\n      pop\n        /* \"contracts/lib/PreciseUnitMath.sol\":3784:3785  0 */\n      0x00\n        /* \"contracts/lib/PreciseUnitMath.sol\":3777:3785  return 0 */\n      jump(tag_176)\n        /* \"contracts/lib/PreciseUnitMath.sol\":3741:3796  if (a == 0 || b == 0) {... */\n    tag_223:\n        /* \"contracts/lib/PreciseUnitMath.sol\":3812:3852  a.mul(b).sub(1).div(PRECISE_UNIT).add(1) */\n      tag_187\n        /* \"contracts/lib/PreciseUnitMath.sol\":3850:3851  1 */\n      0x01\n        /* \"contracts/lib/PreciseUnitMath.sol\":3812:3845  a.mul(b).sub(1).div(PRECISE_UNIT) */\n      tag_225\n        /* \"contracts/lib/PreciseUnitMath.sol\":1535:1543  10 ** 18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/lib/PreciseUnitMath.sol\":3812:3827  a.mul(b).sub(1) */\n      tag_188\n        /* \"contracts/lib/PreciseUnitMath.sol\":3850:3851  1 */\n      dup4\n        /* \"contracts/lib/PreciseUnitMath.sol\":3812:3820  a.mul(b) */\n      tag_227\n        /* \"contracts/lib/PreciseUnitMath.sol\":3812:3813  a */\n      dup10\n        /* \"contracts/lib/PreciseUnitMath.sol\":3818:3819  b */\n      dup10\n        /* \"contracts/lib/PreciseUnitMath.sol\":3812:3820  a.mul(b) */\n      0xffffffff\n        /* \"contracts/lib/PreciseUnitMath.sol\":3812:3817  a.mul */\n      tag_189\n        /* \"contracts/lib/PreciseUnitMath.sol\":3812:3820  a.mul(b) */\n      and\n      jump\t// in\n    tag_227:\n        /* \"contracts/lib/PreciseUnitMath.sol\":3812:3824  a.mul(b).sub */\n      swap1\n        /* \"contracts/lib/PreciseUnitMath.sol\":3812:3827  a.mul(b).sub(1) */\n      0xffffffff\n        /* \"contracts/lib/PreciseUnitMath.sol\":3812:3824  a.mul(b).sub */\n      tag_207\n        /* \"contracts/lib/PreciseUnitMath.sol\":3812:3827  a.mul(b).sub(1) */\n      and\n      jump\t// in\n        /* \"contracts/lib/PreciseUnitMath.sol\":3812:3845  a.mul(b).sub(1).div(PRECISE_UNIT) */\n    tag_225:\n        /* \"contracts/lib/PreciseUnitMath.sol\":3812:3849  a.mul(b).sub(1).div(PRECISE_UNIT).add */\n      swap1\n        /* \"contracts/lib/PreciseUnitMath.sol\":3812:3852  a.mul(b).sub(1).div(PRECISE_UNIT).add(1) */\n      0xffffffff\n        /* \"contracts/lib/PreciseUnitMath.sol\":3812:3849  a.mul(b).sub(1).div(PRECISE_UNIT).add */\n      tag_228\n        /* \"contracts/lib/PreciseUnitMath.sol\":3812:3852  a.mul(b).sub(1).div(PRECISE_UNIT).add(1) */\n      and\n      jump\t// in\n        /* \"contracts/lib/ModuleBase.sol\":5871:6015  function isSetManager(ISetToken _setToken, address _toCheck) internal view returns(bool) {... */\n    tag_151:\n        /* \"contracts/lib/ModuleBase.sol\":5954:5958  bool */\n      0x00\n        /* \"contracts/lib/ModuleBase.sol\":6000:6008  _toCheck */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/lib/ModuleBase.sol\":5977:6008  _setToken.manager() == _toCheck */\n      and\n        /* \"contracts/lib/ModuleBase.sol\":5977:5986  _setToken */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/lib/ModuleBase.sol\":5977:5994  _setToken.manager */\n      and\n      0x481c6a75\n        /* \"contracts/lib/ModuleBase.sol\":5977:5996  _setToken.manager() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_230\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_230:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_232\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_232:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_233\n      swap2\n      swap1\n      jump(tag_234)\n    tag_233:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/lib/ModuleBase.sol\":5977:6008  _setToken.manager() == _toCheck */\n      and\n      eq\n      swap4\n        /* \"contracts/lib/ModuleBase.sol\":5871:6015  function isSetManager(ISetToken _setToken, address _toCheck) internal view returns(bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/lib/ModuleBase.sol\":5639:5788  function isSetPendingInitialization(ISetToken _setToken) internal view returns(bool) {... */\n    tag_166:\n        /* \"contracts/lib/ModuleBase.sol\":5741:5781  _setToken.isPendingModule(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x53bae5f7)\n      dup2\n      mstore\n        /* \"contracts/lib/ModuleBase.sol\":5718:5722  bool */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/lib/ModuleBase.sol\":5741:5766  _setToken.isPendingModule */\n      dup4\n      and\n      swap1\n      0x53bae5f7\n      swap1\n        /* \"contracts/lib/ModuleBase.sol\":5741:5781  _setToken.isPendingModule(address(this)) */\n      tag_236\n      swap1\n        /* \"contracts/lib/ModuleBase.sol\":5775:5779  this */\n      address\n      swap1\n        /* \"contracts/lib/ModuleBase.sol\":5741:5781  _setToken.isPendingModule(address(this)) */\n      0x04\n      add\n      jump(tag_82)\n    tag_236:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_237\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_237:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_239\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_239:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_176\n      swap2\n      swap1\n      jump(tag_161)\n        /* \"contracts/lib/ModuleBase.sol\":6152:6355  function isSetValidAndInitialized(ISetToken _setToken) internal view returns(bool) {... */\n    tag_172:\n        /* \"contracts/lib/ModuleBase.sol\":6229:6233  bool */\n      0x00\n        /* \"contracts/lib/ModuleBase.sol\":6252:6262  controller */\n      dup1\n      sload\n        /* \"contracts/lib/ModuleBase.sol\":6252:6288  controller.isSet(address(_setToken)) */\n      mload(0x40)\n      shl(0xe2, 0x1d3af8fb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/lib/ModuleBase.sol\":6252:6262  controller */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/lib/ModuleBase.sol\":6252:6268  controller.isSet */\n      0x74ebe3ec\n      swap1\n        /* \"contracts/lib/ModuleBase.sol\":6252:6288  controller.isSet(address(_setToken)) */\n      tag_242\n      swap1\n        /* \"contracts/lib/ModuleBase.sol\":6277:6286  _setToken */\n      dup6\n      swap1\n        /* \"contracts/lib/ModuleBase.sol\":6252:6288  controller.isSet(address(_setToken)) */\n      0x04\n      add\n      jump(tag_82)\n    tag_242:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_243\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_243:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_245\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_245:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_246\n      swap2\n      swap1\n      jump(tag_161)\n    tag_246:\n        /* \"contracts/lib/ModuleBase.sol\":6252:6348  controller.isSet(address(_setToken)) &&... */\n      dup1\n      iszero\n      tag_176\n      jumpi\n      pop\n        /* \"contracts/lib/ModuleBase.sol\":6304:6348  _setToken.isInitializedModule(address(this)) */\n      mload(0x40)\n      shl(0xe2, 0x35fc6c9f)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/lib/ModuleBase.sol\":6304:6333  _setToken.isInitializedModule */\n      dup4\n      and\n      swap1\n      0xd7f1b27c\n      swap1\n        /* \"contracts/lib/ModuleBase.sol\":6304:6348  _setToken.isInitializedModule(address(this)) */\n      tag_236\n      swap1\n        /* \"contracts/lib/ModuleBase.sol\":6342:6346  this */\n      address\n      swap1\n        /* \"contracts/lib/ModuleBase.sol\":6304:6348  _setToken.isInitializedModule(address(this)) */\n      0x04\n      add\n      jump(tag_82)\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3538:3753  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_189:\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3596:3603  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3619:3625  a == 0 */\n      dup3\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3615:3635  if (a == 0) return 0 */\n      tag_254\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3634:3635  0 */\n      0x00\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3627:3635  return 0 */\n      jump(tag_176)\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3615:3635  if (a == 0) return 0 */\n    tag_254:\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3657:3662  a * b */\n      dup3\n      dup3\n      mul\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3661:3662  b */\n      dup3\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3657:3658  a */\n      dup5\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3657:3662  a * b */\n      dup3\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3657:3658  a */\n      dup2\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3680:3685  c / a */\n      tag_255\n      jumpi\n      invalid\n    tag_255:\n      div\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3680:3690  c / a == b */\n      eq\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3672:3728  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_187\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_52\n      swap1\n      jump(tag_258)\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":4217:4367  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_190:\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":4275:4282  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":4306:4307  0 */\n      dup1\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":4302:4303  b */\n      dup3\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":4302:4307  b > 0 */\n      gt\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":4294:4338  require(b > 0, \"SafeMath: division by zero\") */\n      tag_260\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_52\n      swap1\n      jump(tag_262)\n    tag_260:\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":4359:4360  b */\n      dup2\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":4355:4356  a */\n      dup4\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":4355:4360  a / b */\n      dup2\n      tag_263\n      jumpi\n      invalid\n    tag_263:\n      div\n      swap4\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":4217:4367  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/lib/Invoke.sol\":2138:2493  function invokeTransfer(... */\n    tag_200:\n        /* \"contracts/lib/Invoke.sol\":2304:2317  _quantity > 0 */\n      dup1\n      iszero\n        /* \"contracts/lib/Invoke.sol\":2300:2487  if (_quantity > 0) {... */\n      tag_192\n      jumpi\n        /* \"contracts/lib/Invoke.sol\":2333:2354  bytes memory callData */\n      0x60\n        /* \"contracts/lib/Invoke.sol\":2410:2413  _to */\n      dup3\n        /* \"contracts/lib/Invoke.sol\":2415:2424  _quantity */\n      dup3\n        /* \"contracts/lib/Invoke.sol\":2357:2425  abi.encodeWithSignature(\"transfer(address,uint256)\", _to, _quantity) */\n      add(0x24, mload(0x40))\n      tag_266\n      swap3\n      swap2\n      swap1\n      jump(tag_62)\n    tag_266:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap2\n      dup2\n      mstore\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0xa9059cbb)\n      or\n      swap1\n      mstore\n        /* \"contracts/lib/Invoke.sol\":2439:2476  _setToken.invoke(_token, 0, callData) */\n      mload\n      shl(0xe1, 0x47b78199)\n      dup2\n      mstore\n        /* \"contracts/lib/Invoke.sol\":2357:2425  abi.encodeWithSignature(\"transfer(address,uint256)\", _to, _quantity) */\n      swap1\n      swap2\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/lib/Invoke.sol\":2439:2455  _setToken.invoke */\n      dup7\n      and\n      swap1\n      0x8f6f0332\n      swap1\n        /* \"contracts/lib/Invoke.sol\":2439:2476  _setToken.invoke(_token, 0, callData) */\n      tag_267\n      swap1\n        /* \"contracts/lib/Invoke.sol\":2456:2462  _token */\n      dup8\n      swap1\n      0x00\n      swap1\n        /* \"contracts/lib/Invoke.sol\":2357:2425  abi.encodeWithSignature(\"transfer(address,uint256)\", _to, _quantity) */\n      dup7\n      swap1\n        /* \"contracts/lib/Invoke.sol\":2439:2476  _setToken.invoke(_token, 0, callData) */\n      0x04\n      add\n      jump(tag_268)\n    tag_267:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_269\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_269:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_271\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_271:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0x40\n      mstore\n      tag_208\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      jump(tag_273)\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3136:3291  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_207:\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3194:3201  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3226:3227  a */\n      dup3\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3221:3222  b */\n      dup3\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3221:3227  b <= a */\n      gt\n      iszero\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3213:3262  require(b <= a, \"SafeMath: subtraction overflow\") */\n      tag_275\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_52\n      swap1\n      jump(tag_277)\n    tag_275:\n      pop\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3279:3284  a - b */\n      swap1\n      sub\n      swap1\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3136:3291  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/lib/ExplicitERC20.sol\":1582:2323  function transferFrom(... */\n    tag_220:\n        /* \"contracts/lib/ExplicitERC20.sol\":1812:1825  _quantity > 0 */\n      dup1\n      iszero\n        /* \"contracts/lib/ExplicitERC20.sol\":1808:2317  if (_quantity > 0) {... */\n      tag_192\n      jumpi\n        /* \"contracts/lib/ExplicitERC20.sol\":1867:1888  _token.balanceOf(_to) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/lib/ExplicitERC20.sol\":1841:1864  uint256 existingBalance */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/lib/ExplicitERC20.sol\":1867:1883  _token.balanceOf */\n      dup7\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"contracts/lib/ExplicitERC20.sol\":1867:1888  _token.balanceOf(_to) */\n      tag_280\n      swap1\n        /* \"contracts/lib/ExplicitERC20.sol\":1884:1887  _to */\n      dup7\n      swap1\n        /* \"contracts/lib/ExplicitERC20.sol\":1867:1888  _token.balanceOf(_to) */\n      0x04\n      add\n      jump(tag_82)\n    tag_280:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_281\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_281:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_283\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_283:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_284\n      swap2\n      swap1\n      jump(tag_87)\n    tag_284:\n        /* \"contracts/lib/ExplicitERC20.sol\":1841:1888  uint256 existingBalance = _token.balanceOf(_to) */\n      swap1\n      pop\n        /* \"contracts/lib/ExplicitERC20.sol\":1903:2038  SafeERC20.safeTransferFrom(... */\n      tag_285\n        /* \"contracts/lib/ExplicitERC20.sol\":1947:1953  _token */\n      dup6\n        /* \"contracts/lib/ExplicitERC20.sol\":1971:1976  _from */\n      dup6\n        /* \"contracts/lib/ExplicitERC20.sol\":1994:1997  _to */\n      dup6\n        /* \"contracts/lib/ExplicitERC20.sol\":2015:2024  _quantity */\n      dup6\n        /* \"contracts/lib/ExplicitERC20.sol\":1903:1929  SafeERC20.safeTransferFrom */\n      tag_286\n        /* \"contracts/lib/ExplicitERC20.sol\":1903:2038  SafeERC20.safeTransferFrom(... */\n      jump\t// in\n    tag_285:\n        /* \"contracts/lib/ExplicitERC20.sol\":2074:2095  _token.balanceOf(_to) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/lib/ExplicitERC20.sol\":2053:2071  uint256 newBalance */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/lib/ExplicitERC20.sol\":2074:2090  _token.balanceOf */\n      dup8\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"contracts/lib/ExplicitERC20.sol\":2074:2095  _token.balanceOf(_to) */\n      tag_287\n      swap1\n        /* \"contracts/lib/ExplicitERC20.sol\":2091:2094  _to */\n      dup8\n      swap1\n        /* \"contracts/lib/ExplicitERC20.sol\":2074:2095  _token.balanceOf(_to) */\n      0x04\n      add\n      jump(tag_82)\n    tag_287:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_288\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_288:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_290\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_290:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_291\n      swap2\n      swap1\n      jump(tag_87)\n    tag_291:\n        /* \"contracts/lib/ExplicitERC20.sol\":2053:2095  uint256 newBalance = _token.balanceOf(_to) */\n      swap1\n      pop\n        /* \"contracts/lib/ExplicitERC20.sol\":2213:2243  existingBalance.add(_quantity) */\n      tag_206\n        /* \"contracts/lib/ExplicitERC20.sol\":2213:2228  existingBalance */\n      dup3\n        /* \"contracts/lib/ExplicitERC20.sol\":2233:2242  _quantity */\n      dup5\n        /* \"contracts/lib/ExplicitERC20.sol\":2213:2243  existingBalance.add(_quantity) */\n      0xffffffff\n        /* \"contracts/lib/ExplicitERC20.sol\":2213:2232  existingBalance.add */\n      tag_228\n        /* \"contracts/lib/ExplicitERC20.sol\":2213:2243  existingBalance.add(_quantity) */\n      and\n      jump\t// in\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_228:\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2748:2755  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2779:2784  a + b */\n      dup3\n      dup3\n      add\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2802:2808  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2794:2840  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_187\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_52\n      swap1\n      jump(tag_298)\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":885:1088  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_286:\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":985:1081  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_192\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1005:1010  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1035:1062  token.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1064:1068  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1070:1072  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1074:1079  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1012:1080  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      tag_301\n      swap4\n      swap3\n      swap2\n      swap1\n      jump(tag_302)\n    tag_301:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap2\n      swap1\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      not(sub(shl(0xe0, 0x01), 0x01))\n      swap1\n      swap4\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3386:3409  bytes memory returndata */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3412:3481  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_305\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3440:3444  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3412:3481  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3420:3425  token */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3412:3439  address(token).functionCall */\n      and\n      tag_306\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3412:3481  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_305:\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3495:3512  returndata.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3386:3481  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3495:3516  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3491:3712  if (returndata.length > 0) { // Return data is optional... */\n      tag_309\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3635:3645  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3624:3654  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_308\n      swap2\n      swap1\n      jump(tag_161)\n    tag_308:\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3616:3701  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_309\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_52\n      swap1\n      jump(tag_311)\n    tag_309:\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":2967:3718  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3581:3774  function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {... */\n    tag_306:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3684:3696  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3715:3767  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_211\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3737:3743  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3745:3749  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3751:3752  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3754:3766  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3684:3696  bytes memory */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4858:4876  isContract(target) */\n      tag_319\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4869:4875  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4858:4868  isContract */\n      tag_320\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4858:4876  isContract(target) */\n      jump\t// in\n    tag_319:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4850:4910  require(isContract(target), \"Address: call to non-contract\") */\n      tag_321\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_52\n      swap1\n      jump(tag_323)\n    tag_321:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4981:4993  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4995:5018  bytes memory returndata */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5022:5028  target */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5022:5033  target.call */\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5042:5047  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5050:5054  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5022:5055  target.call{ value: value }(data) */\n      mload(0x40)\n      tag_324\n      swap2\n      swap1\n      jump(tag_325)\n    tag_324:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_328\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_327)\n    tag_328:\n      0x60\n      swap2\n      pop\n    tag_327:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4980:5055  (bool success, bytes memory returndata) = target.call{ value: value }(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5072:5124  _verifyCallResult(success, returndata, errorMessage) */\n      tag_329\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5090:5097  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5099:5109  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5111:5123  errorMessage */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5072:5089  _verifyCallResult */\n      tag_330\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5072:5124  _verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_329:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5065:5124  return _verifyCallResult(success, returndata, errorMessage) */\n      swap8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4608:5131  function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":726:1139  function isContract(address account) internal view returns (bool) {... */\n    tag_320:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1086:1106  extcodesize(account) */\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1124:1132  size > 0 */\n      iszero\n      iszero\n      swap1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":726:1139  function isContract(address account) internal view returns (bool) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7091:7816  function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {... */\n    tag_330:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7206:7218  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7234:7241  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7230:7810  if (success) {... */\n      iszero\n      tag_333\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7264:7274  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7257:7274  return returndata */\n      jump(tag_187)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7230:7810  if (success) {... */\n    tag_333:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7375:7392  returndata.length */\n      dup3\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7375:7396  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7371:7800  if (returndata.length > 0) {... */\n      tag_335\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7633:7643  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7627:7644  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7693:7708  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7680:7690  returndata */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7676:7678  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7672:7691  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7665:7709  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7582:7727  {... */\n    tag_335:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7772:7784  errorMessage */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7765:7785  revert(errorMessage) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_52\n      swap2\n      swap1\n      jump(tag_338)\n        /* \"--CODEGEN--\":142:276   */\n    tag_340:\n        /* \"--CODEGEN--\":220:233   */\n      dup1\n      mload\n        /* \"--CODEGEN--\":238:271   */\n      tag_176\n        /* \"--CODEGEN--\":220:233   */\n      dup2\n        /* \"--CODEGEN--\":238:271   */\n      jump(tag_343)\n        /* \"--CODEGEN--\":2402:2665   */\n    tag_234:\n      0x00\n        /* \"--CODEGEN--\":2517:2519   */\n      0x20\n        /* \"--CODEGEN--\":2505:2514   */\n      dup3\n        /* \"--CODEGEN--\":2496:2503   */\n      dup5\n        /* \"--CODEGEN--\":2492:2515   */\n      sub\n        /* \"--CODEGEN--\":2488:2520   */\n      slt\n        /* \"--CODEGEN--\":2485:2487   */\n      iszero\n      tag_345\n      jumpi\n      dup1\n      dup2\n        /* \"--CODEGEN--\":2523:2535   */\n      revert\n        /* \"--CODEGEN--\":2485:2487   */\n    tag_345:\n        /* \"--CODEGEN--\":226:232   */\n      dup2\n        /* \"--CODEGEN--\":220:233   */\n      mload\n        /* \"--CODEGEN--\":238:271   */\n      tag_187\n        /* \"--CODEGEN--\":265:270   */\n      dup2\n        /* \"--CODEGEN--\":238:271   */\n      jump(tag_343)\n        /* \"--CODEGEN--\":2672:3064   */\n    tag_70:\n      0x00\n        /* \"--CODEGEN--\":2812:2814   */\n      0x20\n      dup1\n        /* \"--CODEGEN--\":2800:2809   */\n      dup4\n        /* \"--CODEGEN--\":2791:2798   */\n      dup6\n        /* \"--CODEGEN--\":2787:2810   */\n      sub\n        /* \"--CODEGEN--\":2783:2815   */\n      slt\n        /* \"--CODEGEN--\":2780:2782   */\n      iszero\n      tag_348\n      jumpi\n      dup2\n      dup3\n        /* \"--CODEGEN--\":2818:2830   */\n      revert\n        /* \"--CODEGEN--\":2780:2782   */\n    tag_348:\n        /* \"--CODEGEN--\":2869:2886   */\n      dup3\n        /* \"--CODEGEN--\":2863:2887   */\n      mload\n        /* \"--CODEGEN--\":2907:2925   */\n      0xffffffffffffffff\n      dup1\n        /* \"--CODEGEN--\":2899:2905   */\n      dup3\n        /* \"--CODEGEN--\":2896:2926   */\n      gt\n        /* \"--CODEGEN--\":2893:2895   */\n      iszero\n      tag_349\n      jumpi\n      dup4\n      dup5\n        /* \"--CODEGEN--\":2929:2941   */\n      revert\n        /* \"--CODEGEN--\":2893:2895   */\n    tag_349:\n        /* \"--CODEGEN--\":3031:3037   */\n      dup2\n        /* \"--CODEGEN--\":3020:3029   */\n      dup6\n        /* \"--CODEGEN--\":3016:3038   */\n      add\n        /* \"--CODEGEN--\":429:432   */\n      dup7\n        /* \"--CODEGEN--\":422:426   */\n      0x1f\n        /* \"--CODEGEN--\":414:420   */\n      dup3\n        /* \"--CODEGEN--\":410:427   */\n      add\n        /* \"--CODEGEN--\":406:433   */\n      slt\n        /* \"--CODEGEN--\":396:398   */\n      tag_350\n      jumpi\n      dup5\n      dup6\n        /* \"--CODEGEN--\":437:449   */\n      revert\n        /* \"--CODEGEN--\":396:398   */\n    tag_350:\n        /* \"--CODEGEN--\":477:483   */\n      dup1\n        /* \"--CODEGEN--\":471:484   */\n      mload\n        /* \"--CODEGEN--\":457:484   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":2907:2925   */\n      dup2\n        /* \"--CODEGEN--\":29092:29098   */\n      dup4\n        /* \"--CODEGEN--\":29089:29119   */\n      gt\n        /* \"--CODEGEN--\":29086:29088   */\n      iszero\n      tag_351\n      jumpi\n      dup5\n      dup6\n        /* \"--CODEGEN--\":29122:29134   */\n      revert\n        /* \"--CODEGEN--\":29086:29088   */\n    tag_351:\n        /* \"--CODEGEN--\":2812:2814   */\n      dup4\n        /* \"--CODEGEN--\":29159:29165   */\n      dup4\n        /* \"--CODEGEN--\":29155:29172   */\n      mul\n      swap2\n      pop\n        /* \"--CODEGEN--\":499:579   */\n      tag_352\n        /* \"--CODEGEN--\":2812:2814   */\n      dup5\n        /* \"--CODEGEN--\":29155:29172   */\n      dup4\n        /* \"--CODEGEN--\":29220:29235   */\n      add\n        /* \"--CODEGEN--\":499:579   */\n      jump(tag_353)\n    tag_352:\n        /* \"--CODEGEN--\":607:628   */\n      dup4\n      dup2\n      mstore\n        /* \"--CODEGEN--\":664:678   */\n      dup5\n      dup2\n      add\n      swap1\n        /* \"--CODEGEN--\":639:656   */\n      dup3\n      dup7\n      add\n        /* \"--CODEGEN--\":744:771   */\n      dup5\n      dup5\n      add\n      dup8\n      add\n        /* \"--CODEGEN--\":741:777   */\n      dup11\n      lt\n        /* \"--CODEGEN--\":738:740   */\n      iszero\n      tag_354\n      jumpi\n      dup8\n      dup9\n        /* \"--CODEGEN--\":780:792   */\n      revert\n        /* \"--CODEGEN--\":738:740   */\n    tag_354:\n      dup8\n        /* \"--CODEGEN--\":806:816   */\n      swap5\n      pop\n        /* \"--CODEGEN--\":800:1017   */\n    tag_355:\n        /* \"--CODEGEN--\":825:831   */\n      dup6\n        /* \"--CODEGEN--\":822:823   */\n      dup6\n        /* \"--CODEGEN--\":819:832   */\n      lt\n        /* \"--CODEGEN--\":800:1017   */\n      iszero\n      tag_357\n      jumpi\n        /* \"--CODEGEN--\":905:953   */\n      tag_358\n        /* \"--CODEGEN--\":949:952   */\n      dup11\n        /* \"--CODEGEN--\":937:947   */\n      dup3\n        /* \"--CODEGEN--\":905:953   */\n      jump(tag_340)\n    tag_358:\n        /* \"--CODEGEN--\":893:954   */\n      dup4\n      mstore\n        /* \"--CODEGEN--\":847:848   */\n      0x01\n        /* \"--CODEGEN--\":840:849   */\n      swap5\n      swap1\n      swap5\n      add\n      swap4\n        /* \"--CODEGEN--\":968:982   */\n      swap2\n      dup7\n      add\n      swap2\n        /* \"--CODEGEN--\":996:1010   */\n      dup7\n      add\n        /* \"--CODEGEN--\":800:1017   */\n      jump(tag_355)\n    tag_357:\n      pop\n        /* \"--CODEGEN--\":2949:3048   */\n      swap9\n        /* \"--CODEGEN--\":2774:3064   */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":3071:3328   */\n    tag_161:\n      0x00\n        /* \"--CODEGEN--\":3183:3185   */\n      0x20\n        /* \"--CODEGEN--\":3171:3180   */\n      dup3\n        /* \"--CODEGEN--\":3162:3169   */\n      dup5\n        /* \"--CODEGEN--\":3158:3181   */\n      sub\n        /* \"--CODEGEN--\":3154:3186   */\n      slt\n        /* \"--CODEGEN--\":3151:3153   */\n      iszero\n      tag_360\n      jumpi\n      dup1\n      dup2\n        /* \"--CODEGEN--\":3189:3201   */\n      revert\n        /* \"--CODEGEN--\":3151:3153   */\n    tag_360:\n        /* \"--CODEGEN--\":1112:1118   */\n      dup2\n        /* \"--CODEGEN--\":1106:1119   */\n      mload\n        /* \"--CODEGEN--\":34278:34283   */\n      dup1\n        /* \"--CODEGEN--\":31705:31718   */\n      iszero\n        /* \"--CODEGEN--\":31698:31719   */\n      iszero\n        /* \"--CODEGEN--\":34256:34261   */\n      dup2\n        /* \"--CODEGEN--\":34253:34285   */\n      eq\n        /* \"--CODEGEN--\":34243:34245   */\n      tag_187\n      jumpi\n      dup2\n      dup3\n        /* \"--CODEGEN--\":34289:34301   */\n      revert\n        /* \"--CODEGEN--\":3335:3695   */\n    tag_273:\n      0x00\n        /* \"--CODEGEN--\":3459:3461   */\n      0x20\n        /* \"--CODEGEN--\":3447:3456   */\n      dup3\n        /* \"--CODEGEN--\":3438:3445   */\n      dup5\n        /* \"--CODEGEN--\":3434:3457   */\n      sub\n        /* \"--CODEGEN--\":3430:3462   */\n      slt\n        /* \"--CODEGEN--\":3427:3429   */\n      iszero\n      tag_363\n      jumpi\n      dup1\n      dup2\n        /* \"--CODEGEN--\":3465:3477   */\n      revert\n        /* \"--CODEGEN--\":3427:3429   */\n    tag_363:\n        /* \"--CODEGEN--\":3516:3533   */\n      dup2\n        /* \"--CODEGEN--\":3510:3534   */\n      mload\n        /* \"--CODEGEN--\":3554:3572   */\n      0xffffffffffffffff\n      dup1\n        /* \"--CODEGEN--\":3546:3552   */\n      dup3\n        /* \"--CODEGEN--\":3543:3573   */\n      gt\n        /* \"--CODEGEN--\":3540:3542   */\n      iszero\n      tag_364\n      jumpi\n      dup3\n      dup4\n        /* \"--CODEGEN--\":3576:3588   */\n      revert\n        /* \"--CODEGEN--\":3540:3542   */\n    tag_364:\n        /* \"--CODEGEN--\":3662:3668   */\n      dup2\n        /* \"--CODEGEN--\":3651:3660   */\n      dup5\n        /* \"--CODEGEN--\":3647:3669   */\n      add\n        /* \"--CODEGEN--\":1279:1282   */\n      dup6\n        /* \"--CODEGEN--\":1272:1276   */\n      0x1f\n        /* \"--CODEGEN--\":1264:1270   */\n      dup3\n        /* \"--CODEGEN--\":1260:1277   */\n      add\n        /* \"--CODEGEN--\":1256:1283   */\n      slt\n        /* \"--CODEGEN--\":1246:1248   */\n      tag_365\n      jumpi\n      dup4\n      dup5\n        /* \"--CODEGEN--\":1287:1299   */\n      revert\n        /* \"--CODEGEN--\":1246:1248   */\n    tag_365:\n        /* \"--CODEGEN--\":1327:1333   */\n      dup1\n        /* \"--CODEGEN--\":1321:1334   */\n      mload\n        /* \"--CODEGEN--\":1307:1334   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":3554:3572   */\n      dup2\n        /* \"--CODEGEN--\":29387:29393   */\n      dup4\n        /* \"--CODEGEN--\":29384:29414   */\n      gt\n        /* \"--CODEGEN--\":29381:29383   */\n      iszero\n      tag_366\n      jumpi\n      dup4\n      dup5\n        /* \"--CODEGEN--\":29417:29429   */\n      revert\n        /* \"--CODEGEN--\":29381:29383   */\n    tag_366:\n        /* \"--CODEGEN--\":1349:1413   */\n      tag_367\n        /* \"--CODEGEN--\":29490:29499   */\n      0x1f\n        /* \"--CODEGEN--\":29471:29488   */\n      dup5\n      add\n      not(0x1f)\n        /* \"--CODEGEN--\":29467:29500   */\n      and\n        /* \"--CODEGEN--\":3459:3461   */\n      0x20\n        /* \"--CODEGEN--\":29548:29563   */\n      add\n        /* \"--CODEGEN--\":1349:1413   */\n      jump(tag_353)\n    tag_367:\n        /* \"--CODEGEN--\":1340:1413   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":1433:1439   */\n      dup3\n        /* \"--CODEGEN--\":1426:1431   */\n      dup3\n        /* \"--CODEGEN--\":1419:1440   */\n      mstore\n        /* \"--CODEGEN--\":1537:1540   */\n      dup6\n        /* \"--CODEGEN--\":3459:3461   */\n      0x20\n        /* \"--CODEGEN--\":1528:1534   */\n      dup5\n        /* \"--CODEGEN--\":1461:1467   */\n      dup4\n        /* \"--CODEGEN--\":1519:1535   */\n      add\n      add\n        /* \"--CODEGEN--\":1516:1541   */\n      gt\n        /* \"--CODEGEN--\":1513:1515   */\n      iszero\n      tag_368\n      jumpi\n      dup4\n      dup5\n        /* \"--CODEGEN--\":1544:1556   */\n      revert\n        /* \"--CODEGEN--\":1513:1515   */\n    tag_368:\n        /* \"--CODEGEN--\":1564:1603   */\n      tag_369\n        /* \"--CODEGEN--\":1596:1602   */\n      dup4\n        /* \"--CODEGEN--\":3459:3461   */\n      0x20\n        /* \"--CODEGEN--\":1495:1500   */\n      dup5\n        /* \"--CODEGEN--\":1491:1507   */\n      add\n        /* \"--CODEGEN--\":3459:3461   */\n      0x20\n        /* \"--CODEGEN--\":1461:1467   */\n      dup5\n        /* \"--CODEGEN--\":1457:1474   */\n      add\n        /* \"--CODEGEN--\":1564:1603   */\n      jump(tag_370)\n    tag_369:\n      pop\n        /* \"--CODEGEN--\":3596:3679   */\n      swap5\n        /* \"--CODEGEN--\":3421:3695   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":3702:3979   */\n    tag_32:\n      0x00\n        /* \"--CODEGEN--\":3824:3826   */\n      0x20\n        /* \"--CODEGEN--\":3812:3821   */\n      dup3\n        /* \"--CODEGEN--\":3803:3810   */\n      dup5\n        /* \"--CODEGEN--\":3799:3822   */\n      sub\n        /* \"--CODEGEN--\":3795:3827   */\n      slt\n        /* \"--CODEGEN--\":3792:3794   */\n      iszero\n      tag_372\n      jumpi\n      dup1\n      dup2\n        /* \"--CODEGEN--\":3830:3842   */\n      revert\n        /* \"--CODEGEN--\":3792:3794   */\n    tag_372:\n        /* \"--CODEGEN--\":1910:1916   */\n      dup2\n        /* \"--CODEGEN--\":1897:1917   */\n      calldataload\n        /* \"--CODEGEN--\":1922:1973   */\n      tag_187\n        /* \"--CODEGEN--\":1967:1972   */\n      dup2\n        /* \"--CODEGEN--\":1922:1973   */\n      jump(tag_343)\n        /* \"--CODEGEN--\":3986:4446   */\n    tag_13:\n      0x00\n      dup1\n        /* \"--CODEGEN--\":4154:4156   */\n      0x40\n        /* \"--CODEGEN--\":4142:4151   */\n      dup4\n        /* \"--CODEGEN--\":4133:4140   */\n      dup6\n        /* \"--CODEGEN--\":4129:4152   */\n      sub\n        /* \"--CODEGEN--\":4125:4157   */\n      slt\n        /* \"--CODEGEN--\":4122:4124   */\n      iszero\n      tag_375\n      jumpi\n      dup1\n      dup2\n        /* \"--CODEGEN--\":4160:4172   */\n      revert\n        /* \"--CODEGEN--\":4122:4124   */\n    tag_375:\n        /* \"--CODEGEN--\":1910:1916   */\n      dup3\n        /* \"--CODEGEN--\":1897:1917   */\n      calldataload\n        /* \"--CODEGEN--\":1922:1973   */\n      tag_376\n        /* \"--CODEGEN--\":1967:1972   */\n      dup2\n        /* \"--CODEGEN--\":1922:1973   */\n      jump(tag_343)\n    tag_376:\n        /* \"--CODEGEN--\":4212:4293   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":4330:4332   */\n      0x20\n        /* \"--CODEGEN--\":4398:4420   */\n      dup4\n      add\n        /* \"--CODEGEN--\":1713:1733   */\n      calldataload\n        /* \"--CODEGEN--\":1738:1800   */\n      tag_377\n        /* \"--CODEGEN--\":1713:1733   */\n      dup2\n        /* \"--CODEGEN--\":1738:1800   */\n      jump(tag_343)\n    tag_377:\n        /* \"--CODEGEN--\":4338:4430   */\n      dup1\n      swap2\n      pop\n      pop\n        /* \"--CODEGEN--\":4116:4446   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":4453:4855   */\n    tag_24:\n      0x00\n      dup1\n        /* \"--CODEGEN--\":4592:4594   */\n      0x40\n        /* \"--CODEGEN--\":4580:4589   */\n      dup4\n        /* \"--CODEGEN--\":4571:4578   */\n      dup6\n        /* \"--CODEGEN--\":4567:4590   */\n      sub\n        /* \"--CODEGEN--\":4563:4595   */\n      slt\n        /* \"--CODEGEN--\":4560:4562   */\n      iszero\n      tag_379\n      jumpi\n      dup2\n      dup3\n        /* \"--CODEGEN--\":4598:4610   */\n      revert\n        /* \"--CODEGEN--\":4560:4562   */\n    tag_379:\n        /* \"--CODEGEN--\":1910:1916   */\n      dup3\n        /* \"--CODEGEN--\":1897:1917   */\n      calldataload\n        /* \"--CODEGEN--\":1922:1973   */\n      tag_380\n        /* \"--CODEGEN--\":1967:1972   */\n      dup2\n        /* \"--CODEGEN--\":1922:1973   */\n      jump(tag_343)\n    tag_380:\n        /* \"--CODEGEN--\":4650:4731   */\n      swap5\n        /* \"--CODEGEN--\":4768:4770   */\n      0x20\n        /* \"--CODEGEN--\":4807:4829   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"--CODEGEN--\":2191:2211   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"--CODEGEN--\":4554:4855   */\n      jump\n        /* \"--CODEGEN--\":4862:5389   */\n    tag_17:\n      0x00\n      dup1\n      0x00\n        /* \"--CODEGEN--\":5018:5020   */\n      0x60\n        /* \"--CODEGEN--\":5006:5015   */\n      dup5\n        /* \"--CODEGEN--\":4997:5004   */\n      dup7\n        /* \"--CODEGEN--\":4993:5016   */\n      sub\n        /* \"--CODEGEN--\":4989:5021   */\n      slt\n        /* \"--CODEGEN--\":4986:4988   */\n      iszero\n      tag_382\n      jumpi\n      dup1\n      dup2\n        /* \"--CODEGEN--\":5024:5036   */\n      revert\n        /* \"--CODEGEN--\":4986:4988   */\n    tag_382:\n        /* \"--CODEGEN--\":1910:1916   */\n      dup4\n        /* \"--CODEGEN--\":1897:1917   */\n      calldataload\n        /* \"--CODEGEN--\":1922:1973   */\n      tag_383\n        /* \"--CODEGEN--\":1967:1972   */\n      dup2\n        /* \"--CODEGEN--\":1922:1973   */\n      jump(tag_343)\n    tag_383:\n        /* \"--CODEGEN--\":5076:5157   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":5194:5196   */\n      0x20\n        /* \"--CODEGEN--\":5233:5255   */\n      dup5\n      add\n        /* \"--CODEGEN--\":2191:2211   */\n      calldataload\n      swap2\n      pop\n        /* \"--CODEGEN--\":5302:5304   */\n      0x40\n        /* \"--CODEGEN--\":5341:5363   */\n      dup5\n      add\n        /* \"--CODEGEN--\":72:92   */\n      calldataload\n        /* \"--CODEGEN--\":97:130   */\n      tag_384\n        /* \"--CODEGEN--\":72:92   */\n      dup2\n        /* \"--CODEGEN--\":97:130   */\n      jump(tag_343)\n    tag_384:\n        /* \"--CODEGEN--\":5310:5373   */\n      dup1\n      swap2\n      pop\n      pop\n        /* \"--CODEGEN--\":4980:5389   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\n        /* \"--CODEGEN--\":5396:5657   */\n    tag_87:\n      0x00\n        /* \"--CODEGEN--\":5510:5512   */\n      0x20\n        /* \"--CODEGEN--\":5498:5507   */\n      dup3\n        /* \"--CODEGEN--\":5489:5496   */\n      dup5\n        /* \"--CODEGEN--\":5485:5508   */\n      sub\n        /* \"--CODEGEN--\":5481:5513   */\n      slt\n        /* \"--CODEGEN--\":5478:5480   */\n      iszero\n      tag_386\n      jumpi\n      dup1\n      dup2\n        /* \"--CODEGEN--\":5516:5528   */\n      revert\n        /* \"--CODEGEN--\":5478:5480   */\n    tag_386:\n      pop\n        /* \"--CODEGEN--\":2062:2075   */\n      mload\n      swap2\n        /* \"--CODEGEN--\":5472:5657   */\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":6117:6290   */\n    tag_389:\n        /* \"--CODEGEN--\":16353:16390   */\n      dup2\n      mstore\n        /* \"--CODEGEN--\":6279:6283   */\n      0x20\n        /* \"--CODEGEN--\":6270:6284   */\n      add\n      swap1\n        /* \"--CODEGEN--\":6197:6290   */\n      jump\n        /* \"--CODEGEN--\":6447:6550   */\n    tag_391:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"--CODEGEN--\":32114:32168   */\n      and\n        /* \"--CODEGEN--\":6508:6545   */\n      swap1\n      mstore\n        /* \"--CODEGEN--\":6502:6550   */\n      jump\n        /* \"--CODEGEN--\":8135:8478   */\n    tag_393:\n      0x00\n        /* \"--CODEGEN--\":8277:8282   */\n      dup2\n        /* \"--CODEGEN--\":29999:30011   */\n      mload\n        /* \"--CODEGEN--\":30802:30808   */\n      dup1\n        /* \"--CODEGEN--\":30797:30800   */\n      dup5\n        /* \"--CODEGEN--\":30790:30809   */\n      mstore\n        /* \"--CODEGEN--\":8370:8422   */\n      tag_395\n        /* \"--CODEGEN--\":8415:8421   */\n      dup2\n        /* \"--CODEGEN--\":30839:30843   */\n      0x20\n        /* \"--CODEGEN--\":30834:30837   */\n      dup7\n        /* \"--CODEGEN--\":30830:30844   */\n      add\n        /* \"--CODEGEN--\":30839:30843   */\n      0x20\n        /* \"--CODEGEN--\":8396:8401   */\n      dup7\n        /* \"--CODEGEN--\":8392:8408   */\n      add\n        /* \"--CODEGEN--\":8370:8422   */\n      jump(tag_370)\n    tag_395:\n        /* \"--CODEGEN--\":29490:29499   */\n      0x1f\n        /* \"--CODEGEN--\":34036:34050   */\n      add\n      not(0x1f)\n        /* \"--CODEGEN--\":34032:34060   */\n      and\n        /* \"--CODEGEN--\":8434:8473   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"--CODEGEN--\":30839:30843   */\n      0x20\n        /* \"--CODEGEN--\":8434:8473   */\n      add\n      swap3\n        /* \"--CODEGEN--\":8225:8478   */\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":16522:16793   */\n    tag_325:\n      0x00\n        /* \"--CODEGEN--\":8645:8650   */\n      dup3\n        /* \"--CODEGEN--\":29999:30011   */\n      mload\n        /* \"--CODEGEN--\":8756:8808   */\n      tag_397\n        /* \"--CODEGEN--\":8801:8807   */\n      dup2\n        /* \"--CODEGEN--\":8796:8799   */\n      dup5\n        /* \"--CODEGEN--\":8789:8793   */\n      0x20\n        /* \"--CODEGEN--\":8782:8787   */\n      dup8\n        /* \"--CODEGEN--\":8778:8794   */\n      add\n        /* \"--CODEGEN--\":8756:8808   */\n      jump(tag_370)\n    tag_397:\n        /* \"--CODEGEN--\":8820:8836   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"--CODEGEN--\":16656:16793   */\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":16800:17022   */\n    tag_82:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"--CODEGEN--\":32114:32168   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"--CODEGEN--\":6508:6545   */\n      dup2\n      mstore\n        /* \"--CODEGEN--\":16927:16929   */\n      0x20\n        /* \"--CODEGEN--\":16912:16930   */\n      add\n      swap1\n        /* \"--CODEGEN--\":16898:17022   */\n      jump\n        /* \"--CODEGEN--\":17029:17378   */\n    tag_62:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"--CODEGEN--\":32114:32168   */\n      swap3\n      swap1\n      swap3\n      and\n        /* \"--CODEGEN--\":6377:6435   */\n      dup3\n      mstore\n        /* \"--CODEGEN--\":17364:17366   */\n      0x20\n        /* \"--CODEGEN--\":17349:17367   */\n      dup3\n      add\n        /* \"--CODEGEN--\":16353:16390   */\n      mstore\n        /* \"--CODEGEN--\":17192:17194   */\n      0x40\n        /* \"--CODEGEN--\":17177:17195   */\n      add\n      swap1\n        /* \"--CODEGEN--\":17163:17378   */\n      jump\n        /* \"--CODEGEN--\":17385:17829   */\n    tag_302:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"--CODEGEN--\":32114:32168   */\n      swap4\n      dup5\n      and\n        /* \"--CODEGEN--\":6508:6545   */\n      dup2\n      mstore\n        /* \"--CODEGEN--\":32114:32168   */\n      swap2\n      swap1\n      swap3\n      and\n        /* \"--CODEGEN--\":17732:17734   */\n      0x20\n        /* \"--CODEGEN--\":17717:17735   */\n      dup3\n      add\n        /* \"--CODEGEN--\":6508:6545   */\n      mstore\n        /* \"--CODEGEN--\":17815:17817   */\n      0x40\n        /* \"--CODEGEN--\":17800:17818   */\n      dup2\n      add\n        /* \"--CODEGEN--\":16353:16390   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"--CODEGEN--\":17568:17570   */\n      0x60\n        /* \"--CODEGEN--\":17553:17571   */\n      add\n      swap1\n        /* \"--CODEGEN--\":17539:17829   */\n      jump\n        /* \"--CODEGEN--\":17836:18380   */\n    tag_268:\n      0x00\n        /* \"--CODEGEN--\":2907:2925   */\n      0x01\n      dup1\n        /* \"--CODEGEN--\":32125:32167   */\n      0xa0\n      shl\n      sub\n        /* \"--CODEGEN--\":31621:31626   */\n      dup6\n        /* \"--CODEGEN--\":32114:32168   */\n      and\n        /* \"--CODEGEN--\":6515:6518   */\n      dup3\n        /* \"--CODEGEN--\":6508:6545   */\n      mstore\n        /* \"--CODEGEN--\":33412:33436   */\n      dup4\n        /* \"--CODEGEN--\":18217:18219   */\n      0x20\n        /* \"--CODEGEN--\":18206:18215   */\n      dup4\n        /* \"--CODEGEN--\":18202:18220   */\n      add\n        /* \"--CODEGEN--\":9460:9518   */\n      mstore\n        /* \"--CODEGEN--\":18045:18047   */\n      0x60\n        /* \"--CODEGEN--\":18254:18256   */\n      0x40\n        /* \"--CODEGEN--\":18243:18252   */\n      dup4\n        /* \"--CODEGEN--\":18239:18257   */\n      add\n        /* \"--CODEGEN--\":18232:18280   */\n      mstore\n        /* \"--CODEGEN--\":18294:18370   */\n      tag_402\n        /* \"--CODEGEN--\":18045:18047   */\n      0x60\n        /* \"--CODEGEN--\":18034:18043   */\n      dup4\n        /* \"--CODEGEN--\":18030:18048   */\n      add\n        /* \"--CODEGEN--\":18356:18362   */\n      dup5\n        /* \"--CODEGEN--\":18294:18370   */\n      jump(tag_393)\n    tag_402:\n        /* \"--CODEGEN--\":18286:18370   */\n      swap6\n        /* \"--CODEGEN--\":18016:18380   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":18727:19356   */\n    tag_27:\n        /* \"--CODEGEN--\":18982:18984   */\n      0x40\n        /* \"--CODEGEN--\":18996:19043   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":29999:30011   */\n      dup4\n      mload\n        /* \"--CODEGEN--\":18967:18985   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":30790:30809   */\n      dup2\n      swap1\n      mstore\n        /* \"--CODEGEN--\":18727:19356   */\n      0x00\n      swap1\n        /* \"--CODEGEN--\":30839:30843   */\n      0x20\n      swap1\n        /* \"--CODEGEN--\":30830:30844   */\n      0x60\n      dup5\n      add\n      swap1\n        /* \"--CODEGEN--\":29695:29709   */\n      dup3\n      dup8\n      add\n        /* \"--CODEGEN--\":18727:19356   */\n      dup5\n        /* \"--CODEGEN--\":7116:7376   */\n    tag_405:\n        /* \"--CODEGEN--\":7141:7147   */\n      dup3\n        /* \"--CODEGEN--\":7138:7139   */\n      dup2\n        /* \"--CODEGEN--\":7135:7148   */\n      lt\n        /* \"--CODEGEN--\":7116:7376   */\n      iszero\n      tag_407\n      jumpi\n        /* \"--CODEGEN--\":6022:6068   */\n      tag_408\n        /* \"--CODEGEN--\":6064:6067   */\n      dup5\n        /* \"--CODEGEN--\":7208:7214   */\n      dup4\n        /* \"--CODEGEN--\":7202:7215   */\n      mload\n        /* \"--CODEGEN--\":6022:6068   */\n      jump(tag_391)\n    tag_408:\n        /* \"--CODEGEN--\":6088:6102   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"--CODEGEN--\":30530:30544   */\n      swap1\n      dup5\n      add\n      swap1\n        /* \"--CODEGEN--\":7163:7164   */\n      0x01\n        /* \"--CODEGEN--\":7156:7165   */\n      add\n        /* \"--CODEGEN--\":7116:7376   */\n      jump(tag_405)\n    tag_407:\n        /* \"--CODEGEN--\":7120:7134   */\n      pop\n      pop\n      pop\n        /* \"--CODEGEN--\":19213:19222   */\n      dup4\n        /* \"--CODEGEN--\":19207:19211   */\n      dup2\n        /* \"--CODEGEN--\":19203:19223   */\n      sub\n        /* \"--CODEGEN--\":30839:30843   */\n      dup3\n        /* \"--CODEGEN--\":19187:19196   */\n      dup6\n        /* \"--CODEGEN--\":19183:19201   */\n      add\n        /* \"--CODEGEN--\":19176:19224   */\n      mstore\n        /* \"--CODEGEN--\":19238:19346   */\n      dup1\n        /* \"--CODEGEN--\":7630:7635   */\n      dup6\n        /* \"--CODEGEN--\":29999:30011   */\n      mload\n        /* \"--CODEGEN--\":7649:7735   */\n      tag_409\n        /* \"--CODEGEN--\":7728:7734   */\n      dup2\n        /* \"--CODEGEN--\":7723:7726   */\n      dup5\n        /* \"--CODEGEN--\":7649:7735   */\n      jump(tag_94)\n    tag_409:\n        /* \"--CODEGEN--\":7642:7735   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":30839:30843   */\n      dup4\n        /* \"--CODEGEN--\":7806:7811   */\n      dup8\n        /* \"--CODEGEN--\":29695:29709   */\n      add\n        /* \"--CODEGEN--\":7818:7839   */\n      swap3\n      pop\n      dup5\n        /* \"--CODEGEN--\":7845:8105   */\n    tag_411:\n        /* \"--CODEGEN--\":7870:7876   */\n      dup2\n        /* \"--CODEGEN--\":7867:7868   */\n      dup2\n        /* \"--CODEGEN--\":7864:7877   */\n      lt\n        /* \"--CODEGEN--\":7845:8105   */\n      iszero\n      tag_413\n      jumpi\n        /* \"--CODEGEN--\":7958:8021   */\n      tag_414\n        /* \"--CODEGEN--\":8017:8020   */\n      dup4\n        /* \"--CODEGEN--\":7937:7943   */\n      dup6\n        /* \"--CODEGEN--\":7931:7944   */\n      mload\n        /* \"--CODEGEN--\":7958:8021   */\n      jump(tag_389)\n    tag_414:\n        /* \"--CODEGEN--\":30530:30544   */\n      swap4\n      dup6\n      add\n      swap4\n        /* \"--CODEGEN--\":7951:8021   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":7163:7164   */\n      0x01\n        /* \"--CODEGEN--\":7885:7894   */\n      add\n        /* \"--CODEGEN--\":7845:8105   */\n      jump(tag_411)\n    tag_413:\n      pop\n        /* \"--CODEGEN--\":19230:19346   */\n      swap1\n      swap8\n        /* \"--CODEGEN--\":18953:19356   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":19919:20511   */\n    tag_214:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"--CODEGEN--\":32114:32168   */\n      swap5\n      dup6\n      and\n        /* \"--CODEGEN--\":8939:9009   */\n      dup2\n      mstore\n        /* \"--CODEGEN--\":20331:20333   */\n      0x20\n        /* \"--CODEGEN--\":20316:20334   */\n      dup2\n      add\n        /* \"--CODEGEN--\":16353:16390   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"--CODEGEN--\":32114:32168   */\n      swap1\n      dup4\n      and\n        /* \"--CODEGEN--\":20414:20416   */\n      0x40\n        /* \"--CODEGEN--\":20399:20417   */\n      dup4\n      add\n        /* \"--CODEGEN--\":6508:6545   */\n      mstore\n        /* \"--CODEGEN--\":32114:32168   */\n      swap1\n      swap2\n      and\n        /* \"--CODEGEN--\":20497:20499   */\n      0x60\n        /* \"--CODEGEN--\":20482:20500   */\n      dup3\n      add\n        /* \"--CODEGEN--\":6508:6545   */\n      mstore\n        /* \"--CODEGEN--\":20148:20151   */\n      0x80\n        /* \"--CODEGEN--\":20133:20152   */\n      add\n      swap1\n        /* \"--CODEGEN--\":20119:20511   */\n      jump\n        /* \"--CODEGEN--\":20518:20828   */\n    tag_338:\n      0x00\n        /* \"--CODEGEN--\":20665:20667   */\n      0x20\n        /* \"--CODEGEN--\":20686:20703   */\n      dup3\n        /* \"--CODEGEN--\":20679:20726   */\n      mstore\n        /* \"--CODEGEN--\":20740:20818   */\n      tag_187\n        /* \"--CODEGEN--\":20665:20667   */\n      0x20\n        /* \"--CODEGEN--\":20654:20663   */\n      dup4\n        /* \"--CODEGEN--\":20650:20668   */\n      add\n        /* \"--CODEGEN--\":20804:20810   */\n      dup5\n        /* \"--CODEGEN--\":20740:20818   */\n      jump(tag_393)\n        /* \"--CODEGEN--\":20835:21251   */\n    tag_175:\n        /* \"--CODEGEN--\":21035:21037   */\n      0x20\n        /* \"--CODEGEN--\":21049:21096   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":10109:10111   */\n      0x28\n        /* \"--CODEGEN--\":21020:21038   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":30790:30809   */\n      mstore\n        /* \"--CODEGEN--\":10145:10179   */\n      0x4d75737420626520612076616c696420616e6420696e697469616c697a656420\n        /* \"--CODEGEN--\":30830:30844   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":10125:10180   */\n      mstore\n      shl(0xc1, 0x29b2ba2a37b5b2b7)\n        /* \"--CODEGEN--\":10200:10212   */\n      0x60\n      dup3\n      add\n        /* \"--CODEGEN--\":10193:10225   */\n      mstore\n        /* \"--CODEGEN--\":10244:10256   */\n      0x80\n      add\n      swap1\n        /* \"--CODEGEN--\":21006:21251   */\n      jump\n        /* \"--CODEGEN--\":21258:21674   */\n    tag_60:\n        /* \"--CODEGEN--\":21458:21460   */\n      0x20\n        /* \"--CODEGEN--\":21472:21519   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":10495:10497   */\n      0x1b\n        /* \"--CODEGEN--\":21443:21461   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":30790:30809   */\n      mstore\n        /* \"--CODEGEN--\":10531:10560   */\n      0x52656465656d207175616e74697479206d757374206265203e20300000000000\n        /* \"--CODEGEN--\":30830:30844   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":10511:10561   */\n      mstore\n        /* \"--CODEGEN--\":10580:10592   */\n      0x60\n      add\n      swap1\n        /* \"--CODEGEN--\":21429:21674   */\n      jump\n        /* \"--CODEGEN--\":21681:22097   */\n    tag_298:\n        /* \"--CODEGEN--\":21881:21883   */\n      0x20\n        /* \"--CODEGEN--\":21895:21942   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":10831:10833   */\n      0x1b\n        /* \"--CODEGEN--\":21866:21884   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":30790:30809   */\n      mstore\n        /* \"--CODEGEN--\":10867:10896   */\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n        /* \"--CODEGEN--\":30830:30844   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":10847:10897   */\n      mstore\n        /* \"--CODEGEN--\":10916:10928   */\n      0x60\n      add\n      swap1\n        /* \"--CODEGEN--\":21852:22097   */\n      jump\n        /* \"--CODEGEN--\":22104:22520   */\n    tag_148:\n        /* \"--CODEGEN--\":22304:22306   */\n      0x20\n        /* \"--CODEGEN--\":22318:22365   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":11167:11169   */\n      0x30\n        /* \"--CODEGEN--\":22289:22307   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":30790:30809   */\n      mstore\n        /* \"--CODEGEN--\":11203:11237   */\n      0x54686520426173696349737375616e63654d6f64756c65206d6f64756c652063\n        /* \"--CODEGEN--\":30830:30844   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":11183:11238   */\n      mstore\n      shl(0x82, 0x185b9b9bdd081899481c995b5bdd9959)\n        /* \"--CODEGEN--\":11258:11270   */\n      0x60\n      dup3\n      add\n        /* \"--CODEGEN--\":11251:11291   */\n      mstore\n        /* \"--CODEGEN--\":11310:11322   */\n      0x80\n      add\n      swap1\n        /* \"--CODEGEN--\":22275:22520   */\n      jump\n        /* \"--CODEGEN--\":22527:22943   */\n    tag_79:\n        /* \"--CODEGEN--\":22727:22729   */\n      0x20\n        /* \"--CODEGEN--\":22741:22788   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":11561:11563   */\n      0x24\n        /* \"--CODEGEN--\":22712:22730   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":30790:30809   */\n      mstore\n        /* \"--CODEGEN--\":11597:11631   */\n      0x4f6e6c792064656661756c7420706f736974696f6e732061726520737570706f\n        /* \"--CODEGEN--\":30830:30844   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":11577:11632   */\n      mstore\n      shl(0xe2, 0x1c9d1959)\n        /* \"--CODEGEN--\":11652:11664   */\n      0x60\n      dup3\n      add\n        /* \"--CODEGEN--\":11645:11673   */\n      mstore\n        /* \"--CODEGEN--\":11692:11704   */\n      0x80\n      add\n      swap1\n        /* \"--CODEGEN--\":22698:22943   */\n      jump\n        /* \"--CODEGEN--\":22950:23366   */\n    tag_169:\n        /* \"--CODEGEN--\":23150:23152   */\n      0x20\n        /* \"--CODEGEN--\":23164:23211   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":11943:11945   */\n      0x1e\n        /* \"--CODEGEN--\":23135:23153   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":30790:30809   */\n      mstore\n        /* \"--CODEGEN--\":11979:12011   */\n      0x4d7573742062652070656e64696e6720696e697469616c697a6174696f6e0000\n        /* \"--CODEGEN--\":30830:30844   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":11959:12012   */\n      mstore\n        /* \"--CODEGEN--\":12031:12043   */\n      0x60\n      add\n      swap1\n        /* \"--CODEGEN--\":23121:23366   */\n      jump\n        /* \"--CODEGEN--\":23373:23789   */\n    tag_103:\n        /* \"--CODEGEN--\":23573:23575   */\n      0x20\n        /* \"--CODEGEN--\":23587:23634   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":12282:12284   */\n      0x1a\n        /* \"--CODEGEN--\":23558:23576   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":30790:30809   */\n      mstore\n        /* \"--CODEGEN--\":12318:12346   */\n      0x4973737565207175616e74697479206d757374206265203e2030000000000000\n        /* \"--CODEGEN--\":30830:30844   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":12298:12347   */\n      mstore\n        /* \"--CODEGEN--\":12366:12378   */\n      0x60\n      add\n      swap1\n        /* \"--CODEGEN--\":23544:23789   */\n      jump\n        /* \"--CODEGEN--\":23796:24212   */\n    tag_277:\n        /* \"--CODEGEN--\":23996:23998   */\n      0x20\n        /* \"--CODEGEN--\":24010:24057   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":12617:12619   */\n      0x1e\n        /* \"--CODEGEN--\":23981:23999   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":30790:30809   */\n      mstore\n        /* \"--CODEGEN--\":12653:12685   */\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n        /* \"--CODEGEN--\":30830:30844   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":12633:12686   */\n      mstore\n        /* \"--CODEGEN--\":12705:12717   */\n      0x60\n      add\n      swap1\n        /* \"--CODEGEN--\":23967:24212   */\n      jump\n        /* \"--CODEGEN--\":24642:25058   */\n    tag_262:\n        /* \"--CODEGEN--\":24842:24844   */\n      0x20\n        /* \"--CODEGEN--\":24856:24903   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":13340:13342   */\n      0x1a\n        /* \"--CODEGEN--\":24827:24845   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":30790:30809   */\n      mstore\n        /* \"--CODEGEN--\":13376:13404   */\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n        /* \"--CODEGEN--\":30830:30844   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":13356:13405   */\n      mstore\n        /* \"--CODEGEN--\":13424:13436   */\n      0x60\n      add\n      swap1\n        /* \"--CODEGEN--\":24813:25058   */\n      jump\n        /* \"--CODEGEN--\":25065:25481   */\n    tag_185:\n        /* \"--CODEGEN--\":25265:25267   */\n      0x20\n        /* \"--CODEGEN--\":25279:25326   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":25250:25268   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":30790:30809   */\n      mstore\n        /* \"--CODEGEN--\":13711:13745   */\n      0x53616665436173743a2076616c7565206d75737420626520706f736974697665\n        /* \"--CODEGEN--\":30830:30844   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":13691:13746   */\n      mstore\n        /* \"--CODEGEN--\":13765:13777   */\n      0x60\n      add\n      swap1\n        /* \"--CODEGEN--\":25236:25481   */\n      jump\n        /* \"--CODEGEN--\":25488:25904   */\n    tag_258:\n        /* \"--CODEGEN--\":25688:25690   */\n      0x20\n        /* \"--CODEGEN--\":25702:25749   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":14016:14018   */\n      0x21\n        /* \"--CODEGEN--\":25673:25691   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":30790:30809   */\n      mstore\n        /* \"--CODEGEN--\":14052:14086   */\n      0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f\n        /* \"--CODEGEN--\":30830:30844   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":14032:14087   */\n      mstore\n      shl(0xf8, 0x77)\n        /* \"--CODEGEN--\":14107:14119   */\n      0x60\n      dup3\n      add\n        /* \"--CODEGEN--\":14100:14125   */\n      mstore\n        /* \"--CODEGEN--\":14144:14156   */\n      0x80\n      add\n      swap1\n        /* \"--CODEGEN--\":25659:25904   */\n      jump\n        /* \"--CODEGEN--\":25911:26327   */\n    tag_210:\n        /* \"--CODEGEN--\":26111:26113   */\n      0x20\n        /* \"--CODEGEN--\":26125:26172   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":14395:14397   */\n      0x1d\n        /* \"--CODEGEN--\":26096:26114   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":30790:30809   */\n      mstore\n        /* \"--CODEGEN--\":14431:14462   */\n      0x496e76616c696420706f7374207472616e736665722062616c616e6365000000\n        /* \"--CODEGEN--\":30830:30844   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":14411:14463   */\n      mstore\n        /* \"--CODEGEN--\":14482:14494   */\n      0x60\n      add\n      swap1\n        /* \"--CODEGEN--\":26082:26327   */\n      jump\n        /* \"--CODEGEN--\":26334:26750   */\n    tag_323:\n        /* \"--CODEGEN--\":26534:26536   */\n      0x20\n        /* \"--CODEGEN--\":26548:26595   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":14733:14735   */\n      0x1d\n        /* \"--CODEGEN--\":26519:26537   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":30790:30809   */\n      mstore\n        /* \"--CODEGEN--\":14769:14800   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"--CODEGEN--\":30830:30844   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":14749:14801   */\n      mstore\n        /* \"--CODEGEN--\":14820:14832   */\n      0x60\n      add\n      swap1\n        /* \"--CODEGEN--\":26505:26750   */\n      jump\n        /* \"--CODEGEN--\":26757:27173   */\n    tag_164:\n        /* \"--CODEGEN--\":26957:26959   */\n      0x20\n        /* \"--CODEGEN--\":26971:27018   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":15071:15073   */\n      0x23\n        /* \"--CODEGEN--\":26942:26960   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":30790:30809   */\n      mstore\n        /* \"--CODEGEN--\":15107:15141   */\n      0x4d75737420626520636f6e74726f6c6c65722d656e61626c656420536574546f\n        /* \"--CODEGEN--\":30830:30844   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":15087:15142   */\n      mstore\n      shl(0xe9, 0x35b2b7)\n        /* \"--CODEGEN--\":15162:15174   */\n      0x60\n      dup3\n      add\n        /* \"--CODEGEN--\":15155:15182   */\n      mstore\n        /* \"--CODEGEN--\":15201:15213   */\n      0x80\n      add\n      swap1\n        /* \"--CODEGEN--\":26928:27173   */\n      jump\n        /* \"--CODEGEN--\":27180:27596   */\n    tag_154:\n        /* \"--CODEGEN--\":27380:27382   */\n      0x20\n        /* \"--CODEGEN--\":27394:27441   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":15452:15454   */\n      0x1c\n        /* \"--CODEGEN--\":27365:27383   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":30790:30809   */\n      mstore\n        /* \"--CODEGEN--\":15488:15518   */\n      0x4d7573742062652074686520536574546f6b656e206d616e6167657200000000\n        /* \"--CODEGEN--\":30830:30844   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":15468:15519   */\n      mstore\n        /* \"--CODEGEN--\":15538:15550   */\n      0x60\n      add\n      swap1\n        /* \"--CODEGEN--\":27351:27596   */\n      jump\n        /* \"--CODEGEN--\":27603:28019   */\n    tag_311:\n        /* \"--CODEGEN--\":27803:27805   */\n      0x20\n        /* \"--CODEGEN--\":27817:27864   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":15789:15791   */\n      0x2a\n        /* \"--CODEGEN--\":27788:27806   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":30790:30809   */\n      mstore\n        /* \"--CODEGEN--\":15825:15859   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"--CODEGEN--\":30830:30844   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":15805:15860   */\n      mstore\n      shl(0xb2, 0x1bdd081cdd58d8d95959)\n        /* \"--CODEGEN--\":15880:15892   */\n      0x60\n      dup3\n      add\n        /* \"--CODEGEN--\":15873:15907   */\n      mstore\n        /* \"--CODEGEN--\":15926:15938   */\n      0x80\n      add\n      swap1\n        /* \"--CODEGEN--\":27774:28019   */\n      jump\n        /* \"--CODEGEN--\":28026:28442   */\n    tag_53:\n        /* \"--CODEGEN--\":28226:28228   */\n      0x20\n        /* \"--CODEGEN--\":28240:28287   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":16177:16179   */\n      0x1f\n        /* \"--CODEGEN--\":28211:28229   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":30790:30809   */\n      mstore\n        /* \"--CODEGEN--\":16213:16246   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"--CODEGEN--\":30830:30844   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":16193:16247   */\n      mstore\n        /* \"--CODEGEN--\":16266:16278   */\n      0x60\n      add\n      swap1\n        /* \"--CODEGEN--\":28197:28442   */\n      jump\n        /* \"--CODEGEN--\":28449:28671   */\n    tag_94:\n        /* \"--CODEGEN--\":16353:16390   */\n      swap1\n      dup2\n      mstore\n        /* \"--CODEGEN--\":28576:28578   */\n      0x20\n        /* \"--CODEGEN--\":28561:28579   */\n      add\n      swap1\n        /* \"--CODEGEN--\":28547:28671   */\n      jump\n        /* \"--CODEGEN--\":28678:28934   */\n    tag_353:\n        /* \"--CODEGEN--\":28740:28742   */\n      0x40\n        /* \"--CODEGEN--\":28734:28743   */\n      mload\n        /* \"--CODEGEN--\":28766:28783   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":28841:28859   */\n      0xffffffffffffffff\n        /* \"--CODEGEN--\":28826:28860   */\n      dup2\n      gt\n        /* \"--CODEGEN--\":28862:28884   */\n      dup3\n      dup3\n      lt\n        /* \"--CODEGEN--\":28823:28885   */\n      or\n        /* \"--CODEGEN--\":28820:28822   */\n      iszero\n      tag_440\n      jumpi\n        /* \"--CODEGEN--\":28898:28899   */\n      0x00\n      dup1\n        /* \"--CODEGEN--\":28888:28900   */\n      revert\n        /* \"--CODEGEN--\":28820:28822   */\n    tag_440:\n        /* \"--CODEGEN--\":28740:28742   */\n      0x40\n        /* \"--CODEGEN--\":28907:28929   */\n      mstore\n        /* \"--CODEGEN--\":28718:28934   */\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":33692:33960   */\n    tag_370:\n        /* \"--CODEGEN--\":33757:33758   */\n      0x00\n        /* \"--CODEGEN--\":33764:33865   */\n    tag_443:\n        /* \"--CODEGEN--\":33778:33784   */\n      dup4\n        /* \"--CODEGEN--\":33775:33776   */\n      dup2\n        /* \"--CODEGEN--\":33772:33785   */\n      lt\n        /* \"--CODEGEN--\":33764:33865   */\n      iszero\n      tag_445\n      jumpi\n        /* \"--CODEGEN--\":33845:33856   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":33839:33857   */\n      mload\n        /* \"--CODEGEN--\":33826:33837   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":33819:33858   */\n      mstore\n        /* \"--CODEGEN--\":33800:33802   */\n      0x20\n        /* \"--CODEGEN--\":33793:33803   */\n      add\n        /* \"--CODEGEN--\":33764:33865   */\n      jump(tag_443)\n    tag_445:\n        /* \"--CODEGEN--\":33880:33886   */\n      dup4\n        /* \"--CODEGEN--\":33877:33878   */\n      dup2\n        /* \"--CODEGEN--\":33874:33887   */\n      gt\n        /* \"--CODEGEN--\":33871:33873   */\n      iszero\n      tag_192\n      jumpi\n      pop\n      pop\n        /* \"--CODEGEN--\":33757:33758   */\n      0x00\n        /* \"--CODEGEN--\":33927:33943   */\n      swap2\n      add\n        /* \"--CODEGEN--\":33920:33947   */\n      mstore\n        /* \"--CODEGEN--\":33741:33960   */\n      jump\n        /* \"--CODEGEN--\":34073:34190   */\n    tag_343:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"--CODEGEN--\":32114:32168   */\n      dup2\n      and\n        /* \"--CODEGEN--\":34132:34167   */\n      dup2\n      eq\n        /* \"--CODEGEN--\":34122:34124   */\n      tag_167\n      jumpi\n        /* \"--CODEGEN--\":34181:34182   */\n      0x00\n      dup1\n        /* \"--CODEGEN--\":34171:34183   */\n      revert\n\n    auxdata: 0xa2646970667358221220ed208afc26f50268e56110fa9f76600be53a3934c9e31aa6790d4a3d5c565b3864736f6c634300060a0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50604051611b86380380611b8683398101604081905261002f91610058565b600080546001600160a01b0319166001600160a01b039290921691909117905560018055610086565b600060208284031215610069578081fd5b81516001600160a01b038116811461007f578182fd5b9392505050565b611af1806100956000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80637a4ffd031161005b5780637a4ffd03146100bd578063847ef08d146100e7578063dfe75335146100ef578063f77c47911461010f5761007d565b8063485cc955146100825780635c833bfd146100975780636d78f47a146100aa575b600080fd5b6100956100903660046113df565b610117565b005b6100956100a5366004611442565b6101ae565b6100956100b8366004611442565b610462565b6100d06100cb366004611417565b6105e1565b6040516100de929190611579565b60405180910390f35b610095610784565b6101026100fd3660046113c3565b61079c565b6040516100de91906114f8565b6101026107b7565b813361012382826107c6565b8361012d816107f0565b6001600160a01b0385811660008181526002602052604080822080546001600160a01b0319169489169490941790935582516307ff078f60e11b815292519192630ffe0f1e926004808301939282900301818387803b15801561018f57600080fd5b505af11580156101a3573d6000803e3d6000fd5b505050505050505050565b600260015414156101da5760405162461bcd60e51b81526004016101d190611a13565b60405180910390fd5b6002600155826101e9816108b4565b600083116102095760405162461bcd60e51b81526004016101d19061168d565b604051632770a7eb60e21b81526001600160a01b03851690639dc29fac90610237903390879060040161150c565b600060405180830381600087803b15801561025157600080fd5b505af1158015610265573d6000803e3d6000fd5b505050506060846001600160a01b03166399d50d5d6040518163ffffffff1660e01b815260040160006040518083038186803b1580156102a457600080fd5b505afa1580156102b8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102e0919081019061126c565b905060005b81518110156104015760008282815181106102fc57fe5b6020026020010151905061032281886001600160a01b03166108d990919063ffffffff16565b1561033f5760405162461bcd60e51b81526004016101d19061174b565b60006103c5886001600160a01b03166366cb8d2f846040518263ffffffff1660e01b815260040161037091906114f8565b60206040518083038186803b15801561038857600080fd5b505afa15801561039c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c09190611483565b610967565b905060006103d9888363ffffffff61098d16565b90506103f66001600160a01b038a1684898463ffffffff6109be16565b5050506001016102e5565b50826001600160a01b0316336001600160a01b0316866001600160a01b03167f05f8aaada00823525432114f0e904c6f7c0198a5b8f113ee635ff81aaf9566ad8760405161044f9190611a4a565b60405180910390a4505060018055505050565b600260015414156104855760405162461bcd60e51b81526004016101d190611a13565b600260015582610494816108b4565b600083116104b45760405162461bcd60e51b81526004016101d1906117c6565b60006104c285853386610b09565b90506060806104d187876105e1565b909250905060005b825181101561051c576105148382815181106104f157fe5b6020026020010151338a85858151811061050757fe5b6020026020010151610ba7565b6001016104d9565b506040516340c10f1960e01b81526001600160a01b038816906340c10f199061054b9088908a9060040161150c565b600060405180830381600087803b15801561056557600080fd5b505af1158015610579573d6000803e3d6000fd5b50505050846001600160a01b0316336001600160a01b0316886001600160a01b03167fc07f1e2fe31c4d90eae81f76d263d7995aac043a99d6ee6de9c0506047f541c2868a6040516105cc92919061150c565b60405180910390a45050600180555050505050565b606080836105ee816108b4565b6060856001600160a01b03166399d50d5d6040518163ffffffff1660e01b815260040160006040518083038186803b15801561062957600080fd5b505afa15801561063d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610665919081019061126c565b90506060815167ffffffffffffffff8111801561068157600080fd5b506040519080825280602002602001820160405280156106ab578160200160208202803683370190505b50905060005b8251811015610777576106e98382815181106106c957fe5b6020026020010151896001600160a01b03166108d990919063ffffffff16565b156107065760405162461bcd60e51b81526004016101d19061174b565b6107588761074c8a6001600160a01b03166366cb8d2f87868151811061072857fe5b60200260200101516040518263ffffffff1660e01b815260040161037091906114f8565b9063ffffffff610bb316565b82828151811061076457fe5b60209081029190910101526001016106b1565b5090969095509350505050565b60405162461bcd60e51b81526004016101d1906116fb565b6002602052600090815260409020546001600160a01b031681565b6000546001600160a01b031681565b6107d08282610c0a565b6107ec5760405162461bcd60e51b81526004016101d190611992565b5050565b600054604051631d3af8fb60e21b81526001600160a01b03909116906374ebe3ec906108209084906004016114f8565b60206040518083038186803b15801561083857600080fd5b505afa15801561084c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108709190611317565b61088c5760405162461bcd60e51b81526004016101d19061194f565b61089581610c98565b6108b15760405162461bcd60e51b81526004016101d19061178f565b50565b6108bd81610d17565b6108b15760405162461bcd60e51b81526004016101d190611645565b600080836001600160a01b031663a7bdad03846040518263ffffffff1660e01b815260040161090891906114f8565b60006040518083038186803b15801561092057600080fd5b505afa158015610934573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261095c919081019061126c565b511190505b92915050565b6000808212156109895760405162461bcd60e51b81526004016101d19061186b565b5090565b60006109b7670de0b6b3a76400006109ab858563ffffffff610dcb16565b9063ffffffff610e0516565b9392505050565b8015610b03576040516370a0823160e01b81526000906001600160a01b038516906370a08231906109f39088906004016114f8565b60206040518083038186803b158015610a0b57600080fd5b505afa158015610a1f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a439190611483565b9050610a5185858585610e37565b6040516370a0823160e01b81526000906001600160a01b038616906370a0823190610a809089906004016114f8565b60206040518083038186803b158015610a9857600080fd5b505afa158015610aac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad09190611483565b9050610ae2828463ffffffff610f0416565b8114610b005760405162461bcd60e51b81526004016101d1906118e1565b50505b50505050565b6001600160a01b038085166000908152600260205260408120549091168015610b995760405163a045808360e01b81526001600160a01b0382169063a045808390610b5e908990899089908990600401611607565b600060405180830381600087803b158015610b7857600080fd5b505af1158015610b8c573d6000803e3d6000fd5b5050505080915050610b9f565b60009150505b949350505050565b610b0384848484610f2c565b6000821580610bc0575081155b15610bcd57506000610961565b6109b76001610bfe670de0b6b3a76400006109ab83610bf2898963ffffffff610dcb16565b9063ffffffff610f0416565b9063ffffffff61105016565b6000816001600160a01b0316836001600160a01b031663481c6a756040518163ffffffff1660e01b815260040160206040518083038186803b158015610c4f57600080fd5b505afa158015610c63573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c879190611250565b6001600160a01b0316149392505050565b6040516353bae5f760e01b81526000906001600160a01b038316906353bae5f790610cc79030906004016114f8565b60206040518083038186803b158015610cdf57600080fd5b505afa158015610cf3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109619190611317565b60008054604051631d3af8fb60e21b81526001600160a01b03909116906374ebe3ec90610d489085906004016114f8565b60206040518083038186803b158015610d6057600080fd5b505afa158015610d74573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d989190611317565b801561096157506040516335fc6c9f60e21b81526001600160a01b0383169063d7f1b27c90610cc79030906004016114f8565b600082610dda57506000610961565b82820282848281610de757fe5b04146109b75760405162461bcd60e51b81526004016101d1906118a0565b6000808211610e265760405162461bcd60e51b81526004016101d190611834565b818381610e2f57fe5b049392505050565b8015610b035760608282604051602401610e5292919061150c565b60408051601f198184030181529181526020820180516001600160e01b031663a9059cbb60e01b179052516347b7819960e11b81529091506001600160a01b03861690638f6f033290610eae9087906000908690600401611549565b600060405180830381600087803b158015610ec857600080fd5b505af1158015610edc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b009190810190611337565b600082821115610f265760405162461bcd60e51b81526004016101d1906117fd565b50900390565b8015610b03576040516370a0823160e01b81526000906001600160a01b038616906370a0823190610f619086906004016114f8565b60206040518083038186803b158015610f7957600080fd5b505afa158015610f8d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fb19190611483565b9050610fbf85858585611075565b6040516370a0823160e01b81526000906001600160a01b038716906370a0823190610fee9087906004016114f8565b60206040518083038186803b15801561100657600080fd5b505afa15801561101a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061103e9190611483565b9050610ae2828463ffffffff61105016565b6000828201838110156109b75760405162461bcd60e51b81526004016101d1906116c4565b610b03846323b872dd60e01b85858560405160240161109693929190611525565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152606061111d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661115c9092919063ffffffff16565b805190915015611157578080602001905181019061113b9190611317565b6111575760405162461bcd60e51b81526004016101d1906119c9565b505050565b6060610b9f84846000858561117085611206565b61118c5760405162461bcd60e51b81526004016101d190611918565b60006060866001600160a01b031685876040516111a991906114dc565b60006040518083038185875af1925050503d80600081146111e6576040519150601f19603f3d011682016040523d82523d6000602084013e6111eb565b606091505b50915091506111fb82828661120c565b979650505050505050565b3b151590565b6060831561121b5750816109b7565b82511561122b5782518084602001fd5b8160405162461bcd60e51b81526004016101d19190611632565b805161096181611aa6565b600060208284031215611261578081fd5b81516109b781611aa6565b6000602080838503121561127e578182fd5b825167ffffffffffffffff80821115611295578384fd5b81850186601f8201126112a6578485fd5b80519250818311156112b6578485fd5b83830291506112c6848301611a53565b8381528481019082860184840187018a10156112e0578788fd5b8794505b8585101561130a576112f68a82611245565b8352600194909401939186019186016112e4565b5098975050505050505050565b600060208284031215611328578081fd5b815180151581146109b7578182fd5b600060208284031215611348578081fd5b815167ffffffffffffffff8082111561135f578283fd5b81840185601f820112611370578384fd5b8051925081831115611380578384fd5b611393601f8401601f1916602001611a53565b91508282528560208483010111156113a9578384fd5b6113ba836020840160208401611a7a565b50949350505050565b6000602082840312156113d4578081fd5b81356109b781611aa6565b600080604083850312156113f1578081fd5b82356113fc81611aa6565b9150602083013561140c81611aa6565b809150509250929050565b60008060408385031215611429578182fd5b823561143481611aa6565b946020939093013593505050565b600080600060608486031215611456578081fd5b833561146181611aa6565b925060208401359150604084013561147881611aa6565b809150509250925092565b600060208284031215611494578081fd5b5051919050565b815260200190565b6001600160a01b03169052565b600081518084526114c8816020860160208601611a7a565b601f01601f19169290920160200192915050565b600082516114ee818460208701611a7a565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b600060018060a01b03851682528360208301526060604083015261157060608301846114b0565b95945050505050565b604080825283519082018190526000906020906060840190828701845b828110156115b9576115a98483516114a3565b9284019290840190600101611596565b505050838103828501528085516115d08184611a4a565b91508387019250845b818110156115fa576115ec83855161149b565b9385019392506001016115d9565b5090979650505050505050565b6001600160a01b03948516815260208101939093529083166040830152909116606082015260800190565b6000602082526109b760208301846114b0565b60208082526028908201527f4d75737420626520612076616c696420616e6420696e697469616c697a65642060408201526729b2ba2a37b5b2b760c11b606082015260800190565b6020808252601b908201527f52656465656d207175616e74697479206d757374206265203e20300000000000604082015260600190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b60208082526030908201527f54686520426173696349737375616e63654d6f64756c65206d6f64756c65206360408201526f185b9b9bdd081899481c995b5bdd995960821b606082015260800190565b60208082526024908201527f4f6e6c792064656661756c7420706f736974696f6e732061726520737570706f6040820152631c9d195960e21b606082015260800190565b6020808252601e908201527f4d7573742062652070656e64696e6720696e697469616c697a6174696f6e0000604082015260600190565b6020808252601a908201527f4973737565207175616e74697479206d757374206265203e2030000000000000604082015260600190565b6020808252601e908201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604082015260600190565b6020808252601a908201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604082015260600190565b6020808252818101527f53616665436173743a2076616c7565206d75737420626520706f736974697665604082015260600190565b60208082526021908201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6040820152607760f81b606082015260800190565b6020808252601d908201527f496e76616c696420706f7374207472616e736665722062616c616e6365000000604082015260600190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b60208082526023908201527f4d75737420626520636f6e74726f6c6c65722d656e61626c656420536574546f60408201526235b2b760e91b606082015260800190565b6020808252601c908201527f4d7573742062652074686520536574546f6b656e206d616e6167657200000000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b90815260200190565b60405181810167ffffffffffffffff81118282101715611a7257600080fd5b604052919050565b60005b83811015611a95578181015183820152602001611a7d565b83811115610b035750506000910152565b6001600160a01b03811681146108b157600080fdfea2646970667358221220ed208afc26f50268e56110fa9f76600be53a3934c9e31aa6790d4a3d5c565b3864736f6c634300060a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1B86 CODESIZE SUB DUP1 PUSH2 0x1B86 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x58 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 DUP1 SSTORE PUSH2 0x86 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x69 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7F JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1AF1 DUP1 PUSH2 0x95 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7A4FFD03 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x7A4FFD03 EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x847EF08D EQ PUSH2 0xE7 JUMPI DUP1 PUSH4 0xDFE75335 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0xF77C4791 EQ PUSH2 0x10F JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x485CC955 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x5C833BFD EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x6D78F47A EQ PUSH2 0xAA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x95 PUSH2 0x90 CALLDATASIZE PUSH1 0x4 PUSH2 0x13DF JUMP JUMPDEST PUSH2 0x117 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x95 PUSH2 0xA5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1442 JUMP JUMPDEST PUSH2 0x1AE JUMP JUMPDEST PUSH2 0x95 PUSH2 0xB8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1442 JUMP JUMPDEST PUSH2 0x462 JUMP JUMPDEST PUSH2 0xD0 PUSH2 0xCB CALLDATASIZE PUSH1 0x4 PUSH2 0x1417 JUMP JUMPDEST PUSH2 0x5E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDE SWAP3 SWAP2 SWAP1 PUSH2 0x1579 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x95 PUSH2 0x784 JUMP JUMPDEST PUSH2 0x102 PUSH2 0xFD CALLDATASIZE PUSH1 0x4 PUSH2 0x13C3 JUMP JUMPDEST PUSH2 0x79C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDE SWAP2 SWAP1 PUSH2 0x14F8 JUMP JUMPDEST PUSH2 0x102 PUSH2 0x7B7 JUMP JUMPDEST DUP2 CALLER PUSH2 0x123 DUP3 DUP3 PUSH2 0x7C6 JUMP JUMPDEST DUP4 PUSH2 0x12D DUP2 PUSH2 0x7F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP5 DUP10 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE DUP3 MLOAD PUSH4 0x7FF078F PUSH1 0xE1 SHL DUP2 MSTORE SWAP3 MLOAD SWAP2 SWAP3 PUSH4 0xFFE0F1E SWAP3 PUSH1 0x4 DUP1 DUP4 ADD SWAP4 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x18F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x1DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D1 SWAP1 PUSH2 0x1A13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE DUP3 PUSH2 0x1E9 DUP2 PUSH2 0x8B4 JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x209 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D1 SWAP1 PUSH2 0x168D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2770A7EB PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x9DC29FAC SWAP1 PUSH2 0x237 SWAP1 CALLER SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x150C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x251 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x265 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x60 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x99D50D5D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2B8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x2E0 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x126C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x401 JUMPI PUSH1 0x0 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2FC JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0x322 DUP2 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8D9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x33F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D1 SWAP1 PUSH2 0x174B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C5 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x66CB8D2F DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x370 SWAP2 SWAP1 PUSH2 0x14F8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x388 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x39C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3C0 SWAP2 SWAP1 PUSH2 0x1483 JUMP JUMPDEST PUSH2 0x967 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3D9 DUP9 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x98D AND JUMP JUMPDEST SWAP1 POP PUSH2 0x3F6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP5 DUP10 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x9BE AND JUMP JUMPDEST POP POP POP PUSH1 0x1 ADD PUSH2 0x2E5 JUMP JUMPDEST POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x5F8AAADA00823525432114F0E904C6F7C0198A5B8F113EE635FF81AAF9566AD DUP8 PUSH1 0x40 MLOAD PUSH2 0x44F SWAP2 SWAP1 PUSH2 0x1A4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH1 0x1 DUP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x485 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D1 SWAP1 PUSH2 0x1A13 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE DUP3 PUSH2 0x494 DUP2 PUSH2 0x8B4 JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x4B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D1 SWAP1 PUSH2 0x17C6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C2 DUP6 DUP6 CALLER DUP7 PUSH2 0xB09 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 DUP1 PUSH2 0x4D1 DUP8 DUP8 PUSH2 0x5E1 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x51C JUMPI PUSH2 0x514 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4F1 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD CALLER DUP11 DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x507 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xBA7 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x4D9 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 PUSH4 0x40C10F19 SWAP1 PUSH2 0x54B SWAP1 DUP9 SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x150C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x565 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x579 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xC07F1E2FE31C4D90EAE81F76D263D7995AAC043A99D6EE6DE9C0506047F541C2 DUP7 DUP11 PUSH1 0x40 MLOAD PUSH2 0x5CC SWAP3 SWAP2 SWAP1 PUSH2 0x150C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH1 0x1 DUP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP4 PUSH2 0x5EE DUP2 PUSH2 0x8B4 JUMP JUMPDEST PUSH1 0x60 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x99D50D5D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x629 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x63D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x665 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x126C JUMP JUMPDEST SWAP1 POP PUSH1 0x60 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x681 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x6AB JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x777 JUMPI PUSH2 0x6E9 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x6C9 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8D9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x706 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D1 SWAP1 PUSH2 0x174B JUMP JUMPDEST PUSH2 0x758 DUP8 PUSH2 0x74C DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x66CB8D2F DUP8 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x728 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x370 SWAP2 SWAP1 PUSH2 0x14F8 JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xBB3 AND JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x764 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x6B1 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D1 SWAP1 PUSH2 0x16FB JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x7D0 DUP3 DUP3 PUSH2 0xC0A JUMP JUMPDEST PUSH2 0x7EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D1 SWAP1 PUSH2 0x1992 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1D3AF8FB PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x74EBE3EC SWAP1 PUSH2 0x820 SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x14F8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x838 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x84C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x870 SWAP2 SWAP1 PUSH2 0x1317 JUMP JUMPDEST PUSH2 0x88C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D1 SWAP1 PUSH2 0x194F JUMP JUMPDEST PUSH2 0x895 DUP2 PUSH2 0xC98 JUMP JUMPDEST PUSH2 0x8B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D1 SWAP1 PUSH2 0x178F JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x8BD DUP2 PUSH2 0xD17 JUMP JUMPDEST PUSH2 0x8B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D1 SWAP1 PUSH2 0x1645 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA7BDAD03 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x908 SWAP2 SWAP1 PUSH2 0x14F8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x920 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x934 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x95C SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x126C JUMP JUMPDEST MLOAD GT SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SLT ISZERO PUSH2 0x989 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D1 SWAP1 PUSH2 0x186B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9B7 PUSH8 0xDE0B6B3A7640000 PUSH2 0x9AB DUP6 DUP6 PUSH4 0xFFFFFFFF PUSH2 0xDCB AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xE05 AND JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB03 JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x9F3 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x14F8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA1F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA43 SWAP2 SWAP1 PUSH2 0x1483 JUMP JUMPDEST SWAP1 POP PUSH2 0xA51 DUP6 DUP6 DUP6 DUP6 PUSH2 0xE37 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0xA80 SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x14F8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAAC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAD0 SWAP2 SWAP1 PUSH2 0x1483 JUMP JUMPDEST SWAP1 POP PUSH2 0xAE2 DUP3 DUP5 PUSH4 0xFFFFFFFF PUSH2 0xF04 AND JUMP JUMPDEST DUP2 EQ PUSH2 0xB00 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D1 SWAP1 PUSH2 0x18E1 JUMP JUMPDEST POP POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 AND DUP1 ISZERO PUSH2 0xB99 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA0458083 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xA0458083 SWAP1 PUSH2 0xB5E SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x1607 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB8C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 SWAP2 POP POP PUSH2 0xB9F JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xB03 DUP5 DUP5 DUP5 DUP5 PUSH2 0xF2C JUMP JUMPDEST PUSH1 0x0 DUP3 ISZERO DUP1 PUSH2 0xBC0 JUMPI POP DUP2 ISZERO JUMPDEST ISZERO PUSH2 0xBCD JUMPI POP PUSH1 0x0 PUSH2 0x961 JUMP JUMPDEST PUSH2 0x9B7 PUSH1 0x1 PUSH2 0xBFE PUSH8 0xDE0B6B3A7640000 PUSH2 0x9AB DUP4 PUSH2 0xBF2 DUP10 DUP10 PUSH4 0xFFFFFFFF PUSH2 0xDCB AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xF04 AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1050 AND JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x481C6A75 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC63 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC87 SWAP2 SWAP1 PUSH2 0x1250 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x53BAE5F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x53BAE5F7 SWAP1 PUSH2 0xCC7 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x14F8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCF3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x961 SWAP2 SWAP1 PUSH2 0x1317 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1D3AF8FB PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x74EBE3EC SWAP1 PUSH2 0xD48 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x14F8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD74 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD98 SWAP2 SWAP1 PUSH2 0x1317 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x961 JUMPI POP PUSH1 0x40 MLOAD PUSH4 0x35FC6C9F PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0xD7F1B27C SWAP1 PUSH2 0xCC7 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x14F8 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xDDA JUMPI POP PUSH1 0x0 PUSH2 0x961 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0xDE7 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x9B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D1 SWAP1 PUSH2 0x18A0 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0xE26 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D1 SWAP1 PUSH2 0x1834 JUMP JUMPDEST DUP2 DUP4 DUP2 PUSH2 0xE2F JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB03 JUMPI PUSH1 0x60 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xE52 SWAP3 SWAP2 SWAP1 PUSH2 0x150C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE MLOAD PUSH4 0x47B78199 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x8F6F0332 SWAP1 PUSH2 0xEAE SWAP1 DUP8 SWAP1 PUSH1 0x0 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x1549 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEDC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xB00 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1337 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0xF26 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D1 SWAP1 PUSH2 0x17FD JUMP JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB03 JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0xF61 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x14F8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF8D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFB1 SWAP2 SWAP1 PUSH2 0x1483 JUMP JUMPDEST SWAP1 POP PUSH2 0xFBF DUP6 DUP6 DUP6 DUP6 PUSH2 0x1075 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0xFEE SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x14F8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1006 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x101A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x103E SWAP2 SWAP1 PUSH2 0x1483 JUMP JUMPDEST SWAP1 POP PUSH2 0xAE2 DUP3 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x1050 AND JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x9B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D1 SWAP1 PUSH2 0x16C4 JUMP JUMPDEST PUSH2 0xB03 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1096 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1525 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH1 0x60 PUSH2 0x111D DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x115C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x1157 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x113B SWAP2 SWAP1 PUSH2 0x1317 JUMP JUMPDEST PUSH2 0x1157 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D1 SWAP1 PUSH2 0x19C9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xB9F DUP5 DUP5 PUSH1 0x0 DUP6 DUP6 PUSH2 0x1170 DUP6 PUSH2 0x1206 JUMP JUMPDEST PUSH2 0x118C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D1 SWAP1 PUSH2 0x1918 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x11A9 SWAP2 SWAP1 PUSH2 0x14DC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x11E6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x11EB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x11FB DUP3 DUP3 DUP7 PUSH2 0x120C JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x121B JUMPI POP DUP2 PUSH2 0x9B7 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x122B JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0x1632 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x961 DUP2 PUSH2 0x1AA6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1261 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x9B7 DUP2 PUSH2 0x1AA6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x127E JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1295 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD DUP7 PUSH1 0x1F DUP3 ADD SLT PUSH2 0x12A6 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP1 MLOAD SWAP3 POP DUP2 DUP4 GT ISZERO PUSH2 0x12B6 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP4 DUP4 MUL SWAP2 POP PUSH2 0x12C6 DUP5 DUP4 ADD PUSH2 0x1A53 JUMP JUMPDEST DUP4 DUP2 MSTORE DUP5 DUP2 ADD SWAP1 DUP3 DUP7 ADD DUP5 DUP5 ADD DUP8 ADD DUP11 LT ISZERO PUSH2 0x12E0 JUMPI DUP8 DUP9 REVERT JUMPDEST DUP8 SWAP5 POP JUMPDEST DUP6 DUP6 LT ISZERO PUSH2 0x130A JUMPI PUSH2 0x12F6 DUP11 DUP3 PUSH2 0x1245 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP5 SWAP1 SWAP5 ADD SWAP4 SWAP2 DUP7 ADD SWAP2 DUP7 ADD PUSH2 0x12E4 JUMP JUMPDEST POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1328 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x9B7 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1348 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x135F JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP5 ADD DUP6 PUSH1 0x1F DUP3 ADD SLT PUSH2 0x1370 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP1 MLOAD SWAP3 POP DUP2 DUP4 GT ISZERO PUSH2 0x1380 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x1393 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x1A53 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 MSTORE DUP6 PUSH1 0x20 DUP5 DUP4 ADD ADD GT ISZERO PUSH2 0x13A9 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x13BA DUP4 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP5 ADD PUSH2 0x1A7A JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13D4 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x9B7 DUP2 PUSH2 0x1AA6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13F1 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x13FC DUP2 PUSH2 0x1AA6 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x140C DUP2 PUSH2 0x1AA6 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1429 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1434 DUP2 PUSH2 0x1AA6 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1456 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1461 DUP2 PUSH2 0x1AA6 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x1478 DUP2 PUSH2 0x1AA6 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1494 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x14C8 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1A7A JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x14EE DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1A7A JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP6 AND DUP3 MSTORE DUP4 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1570 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x14B0 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 DUP3 MSTORE DUP4 MLOAD SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x20 SWAP1 PUSH1 0x60 DUP5 ADD SWAP1 DUP3 DUP8 ADD DUP5 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x15B9 JUMPI PUSH2 0x15A9 DUP5 DUP4 MLOAD PUSH2 0x14A3 JUMP JUMPDEST SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1596 JUMP JUMPDEST POP POP POP DUP4 DUP2 SUB DUP3 DUP6 ADD MSTORE DUP1 DUP6 MLOAD PUSH2 0x15D0 DUP2 DUP5 PUSH2 0x1A4A JUMP JUMPDEST SWAP2 POP DUP4 DUP8 ADD SWAP3 POP DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x15FA JUMPI PUSH2 0x15EC DUP4 DUP6 MLOAD PUSH2 0x149B JUMP JUMPDEST SWAP4 DUP6 ADD SWAP4 SWAP3 POP PUSH1 0x1 ADD PUSH2 0x15D9 JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP1 DUP4 AND PUSH1 0x40 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x9B7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x14B0 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x4D75737420626520612076616C696420616E6420696E697469616C697A656420 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x29B2BA2A37B5B2B7 PUSH1 0xC1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x52656465656D207175616E74697479206D757374206265203E20300000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x30 SWAP1 DUP3 ADD MSTORE PUSH32 0x54686520426173696349737375616E63654D6F64756C65206D6F64756C652063 PUSH1 0x40 DUP3 ADD MSTORE PUSH16 0x185B9B9BDD081899481C995B5BDD9959 PUSH1 0x82 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C792064656661756C7420706F736974696F6E732061726520737570706F PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x1C9D1959 PUSH1 0xE2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1E SWAP1 DUP3 ADD MSTORE PUSH32 0x4D7573742062652070656E64696E6720696E697469616C697A6174696F6E0000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1A SWAP1 DUP3 ADD MSTORE PUSH32 0x4973737565207175616E74697479206D757374206265203E2030000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1E SWAP1 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1A SWAP1 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x53616665436173743A2076616C7565206D75737420626520706F736974697665 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x77 PUSH1 0xF8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x496E76616C696420706F7374207472616E736665722062616C616E6365000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x4D75737420626520636F6E74726F6C6C65722D656E61626C656420536574546F PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x35B2B7 PUSH1 0xE9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x4D7573742062652074686520536574546F6B656E206D616E6167657200000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1A72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A95 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1A7D JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xB03 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x8B1 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xED KECCAK256 DUP11 0xFC 0x26 CREATE2 MUL PUSH9 0xE56110FA9F76600BE5 GASPRICE CODECOPY CALLVALUE 0xC9 0xE3 BYTE 0xA6 PUSH26 0xD4A3D5C565B3864736F6C634300060A00330000000000000000 ",
							"sourceMap": "1637:7388:21:-:0;;;2679:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3375:10:17;:24;;-1:-1:-1;;;;;;3375:24:17;-1:-1:-1;;;;;3375:24:17;;;;;;;;;;-1:-1:-1;1760:22:5;;1637:7388:21;;186:303:-1;;321:2;309:9;300:7;296:23;292:32;289:2;;;-1:-1;;327:12;289:2;103:13;;-1:-1;;;;;774:54;;919:55;;909:2;;-1:-1;;978:12;909:2;379:94;283:206;-1:-1;;;283:206;;1637:7388:21;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7A4FFD03 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x7A4FFD03 EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x847EF08D EQ PUSH2 0xE7 JUMPI DUP1 PUSH4 0xDFE75335 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0xF77C4791 EQ PUSH2 0x10F JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x485CC955 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x5C833BFD EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x6D78F47A EQ PUSH2 0xAA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x95 PUSH2 0x90 CALLDATASIZE PUSH1 0x4 PUSH2 0x13DF JUMP JUMPDEST PUSH2 0x117 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x95 PUSH2 0xA5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1442 JUMP JUMPDEST PUSH2 0x1AE JUMP JUMPDEST PUSH2 0x95 PUSH2 0xB8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1442 JUMP JUMPDEST PUSH2 0x462 JUMP JUMPDEST PUSH2 0xD0 PUSH2 0xCB CALLDATASIZE PUSH1 0x4 PUSH2 0x1417 JUMP JUMPDEST PUSH2 0x5E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDE SWAP3 SWAP2 SWAP1 PUSH2 0x1579 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x95 PUSH2 0x784 JUMP JUMPDEST PUSH2 0x102 PUSH2 0xFD CALLDATASIZE PUSH1 0x4 PUSH2 0x13C3 JUMP JUMPDEST PUSH2 0x79C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDE SWAP2 SWAP1 PUSH2 0x14F8 JUMP JUMPDEST PUSH2 0x102 PUSH2 0x7B7 JUMP JUMPDEST DUP2 CALLER PUSH2 0x123 DUP3 DUP3 PUSH2 0x7C6 JUMP JUMPDEST DUP4 PUSH2 0x12D DUP2 PUSH2 0x7F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP5 DUP10 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE DUP3 MLOAD PUSH4 0x7FF078F PUSH1 0xE1 SHL DUP2 MSTORE SWAP3 MLOAD SWAP2 SWAP3 PUSH4 0xFFE0F1E SWAP3 PUSH1 0x4 DUP1 DUP4 ADD SWAP4 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x18F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x1DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D1 SWAP1 PUSH2 0x1A13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE DUP3 PUSH2 0x1E9 DUP2 PUSH2 0x8B4 JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x209 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D1 SWAP1 PUSH2 0x168D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2770A7EB PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x9DC29FAC SWAP1 PUSH2 0x237 SWAP1 CALLER SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x150C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x251 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x265 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x60 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x99D50D5D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2B8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x2E0 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x126C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x401 JUMPI PUSH1 0x0 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2FC JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0x322 DUP2 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8D9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x33F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D1 SWAP1 PUSH2 0x174B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C5 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x66CB8D2F DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x370 SWAP2 SWAP1 PUSH2 0x14F8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x388 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x39C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3C0 SWAP2 SWAP1 PUSH2 0x1483 JUMP JUMPDEST PUSH2 0x967 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3D9 DUP9 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x98D AND JUMP JUMPDEST SWAP1 POP PUSH2 0x3F6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP5 DUP10 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x9BE AND JUMP JUMPDEST POP POP POP PUSH1 0x1 ADD PUSH2 0x2E5 JUMP JUMPDEST POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x5F8AAADA00823525432114F0E904C6F7C0198A5B8F113EE635FF81AAF9566AD DUP8 PUSH1 0x40 MLOAD PUSH2 0x44F SWAP2 SWAP1 PUSH2 0x1A4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH1 0x1 DUP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x485 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D1 SWAP1 PUSH2 0x1A13 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE DUP3 PUSH2 0x494 DUP2 PUSH2 0x8B4 JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x4B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D1 SWAP1 PUSH2 0x17C6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C2 DUP6 DUP6 CALLER DUP7 PUSH2 0xB09 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 DUP1 PUSH2 0x4D1 DUP8 DUP8 PUSH2 0x5E1 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x51C JUMPI PUSH2 0x514 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4F1 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD CALLER DUP11 DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x507 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xBA7 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x4D9 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 PUSH4 0x40C10F19 SWAP1 PUSH2 0x54B SWAP1 DUP9 SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x150C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x565 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x579 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xC07F1E2FE31C4D90EAE81F76D263D7995AAC043A99D6EE6DE9C0506047F541C2 DUP7 DUP11 PUSH1 0x40 MLOAD PUSH2 0x5CC SWAP3 SWAP2 SWAP1 PUSH2 0x150C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH1 0x1 DUP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP4 PUSH2 0x5EE DUP2 PUSH2 0x8B4 JUMP JUMPDEST PUSH1 0x60 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x99D50D5D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x629 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x63D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x665 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x126C JUMP JUMPDEST SWAP1 POP PUSH1 0x60 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x681 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x6AB JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x777 JUMPI PUSH2 0x6E9 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x6C9 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8D9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x706 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D1 SWAP1 PUSH2 0x174B JUMP JUMPDEST PUSH2 0x758 DUP8 PUSH2 0x74C DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x66CB8D2F DUP8 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x728 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x370 SWAP2 SWAP1 PUSH2 0x14F8 JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xBB3 AND JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x764 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x6B1 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D1 SWAP1 PUSH2 0x16FB JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x7D0 DUP3 DUP3 PUSH2 0xC0A JUMP JUMPDEST PUSH2 0x7EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D1 SWAP1 PUSH2 0x1992 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1D3AF8FB PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x74EBE3EC SWAP1 PUSH2 0x820 SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x14F8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x838 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x84C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x870 SWAP2 SWAP1 PUSH2 0x1317 JUMP JUMPDEST PUSH2 0x88C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D1 SWAP1 PUSH2 0x194F JUMP JUMPDEST PUSH2 0x895 DUP2 PUSH2 0xC98 JUMP JUMPDEST PUSH2 0x8B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D1 SWAP1 PUSH2 0x178F JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x8BD DUP2 PUSH2 0xD17 JUMP JUMPDEST PUSH2 0x8B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D1 SWAP1 PUSH2 0x1645 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA7BDAD03 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x908 SWAP2 SWAP1 PUSH2 0x14F8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x920 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x934 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x95C SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x126C JUMP JUMPDEST MLOAD GT SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SLT ISZERO PUSH2 0x989 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D1 SWAP1 PUSH2 0x186B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9B7 PUSH8 0xDE0B6B3A7640000 PUSH2 0x9AB DUP6 DUP6 PUSH4 0xFFFFFFFF PUSH2 0xDCB AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xE05 AND JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB03 JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x9F3 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x14F8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA1F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA43 SWAP2 SWAP1 PUSH2 0x1483 JUMP JUMPDEST SWAP1 POP PUSH2 0xA51 DUP6 DUP6 DUP6 DUP6 PUSH2 0xE37 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0xA80 SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x14F8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAAC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAD0 SWAP2 SWAP1 PUSH2 0x1483 JUMP JUMPDEST SWAP1 POP PUSH2 0xAE2 DUP3 DUP5 PUSH4 0xFFFFFFFF PUSH2 0xF04 AND JUMP JUMPDEST DUP2 EQ PUSH2 0xB00 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D1 SWAP1 PUSH2 0x18E1 JUMP JUMPDEST POP POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 AND DUP1 ISZERO PUSH2 0xB99 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA0458083 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xA0458083 SWAP1 PUSH2 0xB5E SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x1607 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB8C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 SWAP2 POP POP PUSH2 0xB9F JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xB03 DUP5 DUP5 DUP5 DUP5 PUSH2 0xF2C JUMP JUMPDEST PUSH1 0x0 DUP3 ISZERO DUP1 PUSH2 0xBC0 JUMPI POP DUP2 ISZERO JUMPDEST ISZERO PUSH2 0xBCD JUMPI POP PUSH1 0x0 PUSH2 0x961 JUMP JUMPDEST PUSH2 0x9B7 PUSH1 0x1 PUSH2 0xBFE PUSH8 0xDE0B6B3A7640000 PUSH2 0x9AB DUP4 PUSH2 0xBF2 DUP10 DUP10 PUSH4 0xFFFFFFFF PUSH2 0xDCB AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xF04 AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1050 AND JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x481C6A75 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC63 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC87 SWAP2 SWAP1 PUSH2 0x1250 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x53BAE5F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x53BAE5F7 SWAP1 PUSH2 0xCC7 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x14F8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCF3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x961 SWAP2 SWAP1 PUSH2 0x1317 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1D3AF8FB PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x74EBE3EC SWAP1 PUSH2 0xD48 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x14F8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD74 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD98 SWAP2 SWAP1 PUSH2 0x1317 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x961 JUMPI POP PUSH1 0x40 MLOAD PUSH4 0x35FC6C9F PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0xD7F1B27C SWAP1 PUSH2 0xCC7 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x14F8 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xDDA JUMPI POP PUSH1 0x0 PUSH2 0x961 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0xDE7 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x9B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D1 SWAP1 PUSH2 0x18A0 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0xE26 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D1 SWAP1 PUSH2 0x1834 JUMP JUMPDEST DUP2 DUP4 DUP2 PUSH2 0xE2F JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB03 JUMPI PUSH1 0x60 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xE52 SWAP3 SWAP2 SWAP1 PUSH2 0x150C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE MLOAD PUSH4 0x47B78199 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x8F6F0332 SWAP1 PUSH2 0xEAE SWAP1 DUP8 SWAP1 PUSH1 0x0 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x1549 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEDC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xB00 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1337 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0xF26 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D1 SWAP1 PUSH2 0x17FD JUMP JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB03 JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0xF61 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x14F8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF8D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFB1 SWAP2 SWAP1 PUSH2 0x1483 JUMP JUMPDEST SWAP1 POP PUSH2 0xFBF DUP6 DUP6 DUP6 DUP6 PUSH2 0x1075 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0xFEE SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x14F8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1006 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x101A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x103E SWAP2 SWAP1 PUSH2 0x1483 JUMP JUMPDEST SWAP1 POP PUSH2 0xAE2 DUP3 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x1050 AND JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x9B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D1 SWAP1 PUSH2 0x16C4 JUMP JUMPDEST PUSH2 0xB03 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1096 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1525 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH1 0x60 PUSH2 0x111D DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x115C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x1157 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x113B SWAP2 SWAP1 PUSH2 0x1317 JUMP JUMPDEST PUSH2 0x1157 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D1 SWAP1 PUSH2 0x19C9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xB9F DUP5 DUP5 PUSH1 0x0 DUP6 DUP6 PUSH2 0x1170 DUP6 PUSH2 0x1206 JUMP JUMPDEST PUSH2 0x118C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D1 SWAP1 PUSH2 0x1918 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x11A9 SWAP2 SWAP1 PUSH2 0x14DC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x11E6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x11EB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x11FB DUP3 DUP3 DUP7 PUSH2 0x120C JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x121B JUMPI POP DUP2 PUSH2 0x9B7 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x122B JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0x1632 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x961 DUP2 PUSH2 0x1AA6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1261 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x9B7 DUP2 PUSH2 0x1AA6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x127E JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1295 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD DUP7 PUSH1 0x1F DUP3 ADD SLT PUSH2 0x12A6 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP1 MLOAD SWAP3 POP DUP2 DUP4 GT ISZERO PUSH2 0x12B6 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP4 DUP4 MUL SWAP2 POP PUSH2 0x12C6 DUP5 DUP4 ADD PUSH2 0x1A53 JUMP JUMPDEST DUP4 DUP2 MSTORE DUP5 DUP2 ADD SWAP1 DUP3 DUP7 ADD DUP5 DUP5 ADD DUP8 ADD DUP11 LT ISZERO PUSH2 0x12E0 JUMPI DUP8 DUP9 REVERT JUMPDEST DUP8 SWAP5 POP JUMPDEST DUP6 DUP6 LT ISZERO PUSH2 0x130A JUMPI PUSH2 0x12F6 DUP11 DUP3 PUSH2 0x1245 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP5 SWAP1 SWAP5 ADD SWAP4 SWAP2 DUP7 ADD SWAP2 DUP7 ADD PUSH2 0x12E4 JUMP JUMPDEST POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1328 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x9B7 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1348 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x135F JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP5 ADD DUP6 PUSH1 0x1F DUP3 ADD SLT PUSH2 0x1370 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP1 MLOAD SWAP3 POP DUP2 DUP4 GT ISZERO PUSH2 0x1380 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x1393 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x1A53 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 MSTORE DUP6 PUSH1 0x20 DUP5 DUP4 ADD ADD GT ISZERO PUSH2 0x13A9 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x13BA DUP4 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP5 ADD PUSH2 0x1A7A JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13D4 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x9B7 DUP2 PUSH2 0x1AA6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13F1 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x13FC DUP2 PUSH2 0x1AA6 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x140C DUP2 PUSH2 0x1AA6 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1429 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1434 DUP2 PUSH2 0x1AA6 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1456 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1461 DUP2 PUSH2 0x1AA6 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x1478 DUP2 PUSH2 0x1AA6 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1494 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x14C8 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1A7A JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x14EE DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1A7A JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP6 AND DUP3 MSTORE DUP4 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1570 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x14B0 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 DUP3 MSTORE DUP4 MLOAD SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x20 SWAP1 PUSH1 0x60 DUP5 ADD SWAP1 DUP3 DUP8 ADD DUP5 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x15B9 JUMPI PUSH2 0x15A9 DUP5 DUP4 MLOAD PUSH2 0x14A3 JUMP JUMPDEST SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1596 JUMP JUMPDEST POP POP POP DUP4 DUP2 SUB DUP3 DUP6 ADD MSTORE DUP1 DUP6 MLOAD PUSH2 0x15D0 DUP2 DUP5 PUSH2 0x1A4A JUMP JUMPDEST SWAP2 POP DUP4 DUP8 ADD SWAP3 POP DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x15FA JUMPI PUSH2 0x15EC DUP4 DUP6 MLOAD PUSH2 0x149B JUMP JUMPDEST SWAP4 DUP6 ADD SWAP4 SWAP3 POP PUSH1 0x1 ADD PUSH2 0x15D9 JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP1 DUP4 AND PUSH1 0x40 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x9B7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x14B0 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x4D75737420626520612076616C696420616E6420696E697469616C697A656420 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x29B2BA2A37B5B2B7 PUSH1 0xC1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x52656465656D207175616E74697479206D757374206265203E20300000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x30 SWAP1 DUP3 ADD MSTORE PUSH32 0x54686520426173696349737375616E63654D6F64756C65206D6F64756C652063 PUSH1 0x40 DUP3 ADD MSTORE PUSH16 0x185B9B9BDD081899481C995B5BDD9959 PUSH1 0x82 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C792064656661756C7420706F736974696F6E732061726520737570706F PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x1C9D1959 PUSH1 0xE2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1E SWAP1 DUP3 ADD MSTORE PUSH32 0x4D7573742062652070656E64696E6720696E697469616C697A6174696F6E0000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1A SWAP1 DUP3 ADD MSTORE PUSH32 0x4973737565207175616E74697479206D757374206265203E2030000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1E SWAP1 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1A SWAP1 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x53616665436173743A2076616C7565206D75737420626520706F736974697665 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x77 PUSH1 0xF8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x496E76616C696420706F7374207472616E736665722062616C616E6365000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x4D75737420626520636F6E74726F6C6C65722D656E61626C656420536574546F PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x35B2B7 PUSH1 0xE9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x4D7573742062652074686520536574546F6B656E206D616E6167657200000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1A72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A95 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1A7D JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xB03 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x8B1 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xED KECCAK256 DUP11 0xFC 0x26 CREATE2 MUL PUSH9 0xE56110FA9F76600BE5 GASPRICE CODECOPY CALLVALUE 0xC9 0xE3 BYTE 0xA6 PUSH26 0xD4A3D5C565B3864736F6C634300060A00330000000000000000 ",
							"sourceMap": "1637:7388:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6481:310;;;;;;;;;:::i;:::-;;4734:1345;;;;;;;;;:::i;3254:1063::-;;;;;;;;;:::i;7545:729::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;6939:117;;;:::i;2419:69::-;;;;;;;;;:::i;:::-;;;;;;;;2156:29:17;;;:::i;6481:310:21:-;6620:9;6631:10;2440:43:17;2464:9;2475:7;2440:23;:43::i;:::-;6674:9:21::1;3050:42:17;3082:9;3050:31;:42::i;:::-;-1:-1:-1::0;;;;;6699:30:21;;::::2;;::::0;;;:19:::2;:30;::::0;;;;;:46;;-1:-1:-1;;;;;;6699:46:21::2;::::0;;::::2;::::0;;;::::2;::::0;;;6756:28;;-1:-1:-1;;;6756:28:21;;;;6699:30;;6756:26:::2;::::0;:28:::2;::::0;;::::2;::::0;6699:30;6756:28;;;;;6699:30;;6756:28;::::2;;::::0;::::2;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;2493:1:17::1;6481:310:21::0;;;;:::o;4734:1345::-;1688:1:5;2277:7;;:19;;2269:63;;;;-1:-1:-1;;;2269:63:5;;;;;;;;;;;;;;;;;1688:1;2407:7;:18;4906:9:21;2574:46:17::1;4906:9:21::0;2574:35:17::1;:46::i;:::-;4951:1:21::2;4939:9;:13;4931:53;;;;-1:-1:-1::0;;;4931:53:21::2;;;;;;;;;5096:37;::::0;-1:-1:-1;;;5096:37:21;;-1:-1:-1;;;;;5096:14:21;::::2;::::0;::::2;::::0;:37:::2;::::0;5111:10:::2;::::0;5123:9;;5096:37:::2;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;5229:27;5259:9;-1:-1:-1::0;;;;;5259:23:21::2;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;::::0;;::::2;-1:-1:-1::0;;5259:25:21::2;::::0;::::2;;::::0;::::2;::::0;;;::::2;::::0;::::2;;;5229:55:::0;-1:-1:-1;5299:9:21::2;5294:699;5318:10;:17;5314:1;:21;5294:699;;;5356:17;5376:10;5387:1;5376:13;;;;;;;;;;;;;;5356:33;;5412:40;5442:9;5412;-1:-1:-1::0;;;;;5412:29:21::2;;;:40;;;;:::i;:::-;5411:41;5403:90;;;;-1:-1:-1::0;;;5403:90:21::2;;;;;;;;;5508:12;5523:59;:9;-1:-1:-1::0;;;;;5523:36:21::2;;5560:9;5523:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:57;:59::i;:::-;5508:74:::0;-1:-1:-1;5711:25:21::2;5739:26;:9:::0;5508:74;5739:26:::2;:20;:26;:::i;:::-;5711:54:::0;-1:-1:-1;5855:127:21::2;-1:-1:-1::0;;;;;5855:30:21;::::2;5903:9:::0;5930:3;5711:54;5855:127:::2;:30;:127;:::i;:::-;-1:-1:-1::0;;;5337:3:21::2;;5294:699;;;;6057:3;-1:-1:-1::0;;;;;6008:64:21::2;6045:10;-1:-1:-1::0;;;;;6008:64:21::2;6033:9;-1:-1:-1::0;;;;;6008:64:21::2;;6062:9;6008:64;;;;;;;;;;;;;;;-1:-1:-1::0;;1645:1:5;2580:22;;-1:-1:-1;;;4734:1345:21:o;3254:1063::-;1688:1:5;2277:7;;:19;;2269:63;;;;-1:-1:-1;;;2269:63:5;;;;;;;;;1688:1;2407:7;:18;3425:9:21;2574:46:17::1;3425:9:21::0;2574:35:17::1;:46::i;:::-;3470:1:21::2;3458:9;:13;3450:52;;;;-1:-1:-1::0;;;3450:52:21::2;;;;;;;;;3513:20;3536:57;3555:9;3566;3577:10;3589:3;3536:18;:57::i;:::-;3513:80;;3618:27;3659:36:::0;3708:55:::2;3742:9;3753;3708:33;:55::i;:::-;3604:159:::0;;-1:-1:-1;3604:159:21;-1:-1:-1;3858:9:21::2;3853:296;3877:10;:17;3873:1;:21;3853:296;;;3969:169;4006:10;4017:1;4006:13;;;;;;;;;;;;;;4038:10;4074:9;4102:19;4122:1;4102:22;;;;;;;;;;;;;;3969:12;:169::i;:::-;3896:3;;3853:296;;;-1:-1:-1::0;4188:30:21::2;::::0;-1:-1:-1;;;4188:30:21;;-1:-1:-1;;;;;4188:14:21;::::2;::::0;::::2;::::0;:30:::2;::::0;4203:3;;4208:9;;4188:30:::2;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;4281:3;-1:-1:-1::0;;;;;4234:76:21::2;4269:10;-1:-1:-1::0;;;;;4234:76:21::2;4257:9;-1:-1:-1::0;;;;;4234:76:21::2;;4286:12;4300:9;4234:76;;;;;;;;;;;;;;;;-1:-1:-1::0;;1645:1:5;2580:22;;-1:-1:-1;;;;;3254:1063:21:o;7545:729::-;7741:16;7759;7713:9;2574:46:17;2610:9;2574:35;:46::i;:::-;7791:27:21::1;7821:9;-1:-1:-1::0;;;;;7821:23:21::1;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;7821:25:21::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;;;7791:55;;7857:30;7904:10;:17;7890:32;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;7890:32:21::1;-1:-1:-1::0;7857:65:21;-1:-1:-1;7938:9:21::1;7933:290;7957:10;:17;7953:1;:21;7933:290;;;8004:44;8034:10;8045:1;8034:13;;;;;;;;;;;;;;8004:9;-1:-1:-1::0;;;;;8004:29:21::1;;;:44;;;;:::i;:::-;8003:45;7995:94;;;;-1:-1:-1::0;;;7995:94:21::1;;;;;;;;;8123:89;8202:9;8123:63;:9;-1:-1:-1::0;;;;;8123:36:21::1;;8160:10;8171:1;8160:13;;;;;;;;;;;;;;8123:51;;;;;;;;;;;;;;;;:63;:78:::0;:89:::1;:78;:89;:::i;:::-;8104:13;8118:1;8104:16;;;;;;;;;::::0;;::::1;::::0;;;;;:108;7976:3:::1;;7933:290;;;-1:-1:-1::0;8241:10:21;;;;-1:-1:-1;7545:729:21;-1:-1:-1;;;;7545:729:21:o;6939:117::-;6991:58;;-1:-1:-1;;;6991:58:21;;;;;;;;2419:69;;;;;;;;;;;;-1:-1:-1;;;;;2419:69:21;;:::o;2156:29:17:-;;;-1:-1:-1;;;;;2156:29:17;;:::o;7093:175::-;7196:32;7209:9;7220:7;7196:12;:32::i;:::-;7188:73;;;;-1:-1:-1;;;7188:73:17;;;;;;;;;7093:175;;:::o;8078:267::-;8172:10;;:36;;-1:-1:-1;;;8172:36:17;;-1:-1:-1;;;;;8172:10:17;;;;:16;;:36;;8197:9;;8172:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8164:84;;;;-1:-1:-1;;;8164:84:17;;;;;;;;;8266:37;8293:9;8266:26;:37::i;:::-;8258:80;;;;-1:-1:-1;;;8258:80:17;;;;;;;;;8078:267;:::o;7336:185::-;7434:35;7459:9;7434:24;:35::i;:::-;7426:88;;;;-1:-1:-1;;;7426:88:17;;;;;;;;2048:181:18;2140:4;2221:1;2163:9;-1:-1:-1;;;;;2163:36:18;;2200:10;2163:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2163:48:18;;;;;;;;;;;;;;:55;:59;2156:66;;2048:181;;;;;:::o;3282:168:6:-;3338:7;3374:1;3365:5;:10;;3357:55;;;;-1:-1:-1;;;3357:55:6;;;;;;;;;-1:-1:-1;3437:5:6;3282:168::o;3026:124:19:-;3091:7;3117:26;1535:8;3117;:1;3123;3117:8;:5;:8;:::i;:::-;:12;:26;:12;:26;:::i;:::-;3110:33;3026:124;-1:-1:-1;;;3026:124:19:o;2913:780:16:-;3085:13;;3081:606;;3206:44;;-1:-1:-1;;;3206:44:16;;3180:23;;-1:-1:-1;;;;;3206:24:16;;;;;:44;;3239:9;;3206:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3180:70;;3265:56;3287:9;3298:6;3306:3;3311:9;3265:21;:56::i;:::-;3422:44;;-1:-1:-1;;;3422:44:16;;3401:18;;-1:-1:-1;;;;;3422:24:16;;;;;:44;;3455:9;;3422:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3401:65;-1:-1:-1;3583:30:16;:15;3603:9;3583:30;:19;:30;:::i;:::-;3569:10;:44;3544:132;;;;-1:-1:-1;;;3544:132:16;;;;;;;;;3081:606;;;2913:780;;;;:::o;8546:477:21:-;-1:-1:-1;;;;;8774:30:21;;;8715:7;8774:30;;;:19;:30;;;;;;8715:7;;8774:30;8818:35;;8814:175;;8869:67;;-1:-1:-1;;;8869:67:21;;-1:-1:-1;;;;;8869:31:21;;;;;:67;;8901:9;;8912;;8923:7;;8932:3;;8869:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8965:12;8950:28;;;;;8814:175;9014:1;8999:17;;;8546:477;;;;;;;:::o;3815:167:17:-;3918:57;3945:6;3953:5;3960:3;3965:9;3918:26;:57::i;3653:206:19:-;3722:7;3745:6;;;:16;;-1:-1:-1;3755:6:19;;3745:16;3741:55;;;-1:-1:-1;3784:1:19;3777:8;;3741:55;3812:40;3850:1;3812:33;1535:8;3812:15;3850:1;3812:8;:1;3818;3812:8;:5;:8;:::i;:::-;:12;:15;:12;:15;:::i;:33::-;:37;:40;:37;:40;:::i;5871:144:17:-;5954:4;6000:8;-1:-1:-1;;;;;5977:31:17;:9;-1:-1:-1;;;;;5977:17:17;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5977:31:17;;;5871:144;-1:-1:-1;;;5871:144:17:o;5639:149::-;5741:40;;-1:-1:-1;;;5741:40:17;;5718:4;;-1:-1:-1;;;;;5741:25:17;;;;;:40;;5775:4;;5741:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6152:203;6229:4;6252:10;;:36;;-1:-1:-1;;;6252:36:17;;-1:-1:-1;;;;;6252:10:17;;;;:16;;:36;;6277:9;;6252:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:96;;;;-1:-1:-1;6304:44:17;;-1:-1:-1;;;6304:44:17;;-1:-1:-1;;;;;6304:29:17;;;;;:44;;6342:4;;6304:44;;;;3538:215:0;3596:7;3619:6;3615:20;;-1:-1:-1;3634:1:0;3627:8;;3615:20;3657:5;;;3661:1;3657;:5;:1;3680:5;;;;;:10;3672:56;;;;-1:-1:-1;;;3672:56:0;;;;;;;;4217:150;4275:7;4306:1;4302;:5;4294:44;;;;-1:-1:-1;;;4294:44:0;;;;;;;;;4359:1;4355;:5;;;;;;;4217:150;-1:-1:-1;;;4217:150:0:o;2138:355:16:-;2304:13;;2300:187;;2333:21;2410:3;2415:9;2357:68;;;;;;;;;;;;;;-1:-1:-1;;2357:68:16;;;;;;;;;;;;;;-1:-1:-1;;;;;2357:68:16;-1:-1:-1;;;2357:68:16;;;2439:37;-1:-1:-1;;;2439:37:16;;2357:68;;-1:-1:-1;;;;;;2439:16:16;;;;;:37;;2456:6;;-1:-1:-1;;2357:68:16;;2439:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2439:37:16;;;;;;;;;;;;;3136:155:0;3194:7;3226:1;3221;:6;;3213:49;;;;-1:-1:-1;;;3213:49:0;;;;;;;;;-1:-1:-1;3279:5:0;;;3136:155::o;1582:741:15:-;1812:13;;1808:509;;1867:21;;-1:-1:-1;;;1867:21:15;;1841:23;;-1:-1:-1;;;;;1867:16:15;;;;;:21;;1884:3;;1867:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1841:47;;1903:135;1947:6;1971:5;1994:3;2015:9;1903:26;:135::i;:::-;2074:21;;-1:-1:-1;;;2074:21:15;;2053:18;;-1:-1:-1;;;;;2074:16:15;;;;;:21;;2091:3;;2074:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2053:42;-1:-1:-1;2213:30:15;:15;2233:9;2213:30;:19;:30;:::i;2690:175:0:-;2748:7;2779:5;;;2802:6;;;;2794:46;;;;-1:-1:-1;;;2794:46:0;;;;;;;;885:203:3;985:96;1005:5;1035:27;;;1064:4;1070:2;1074:5;1012:68;;;;;;;;;;;;;;;-1:-1:-1;;1012:68:3;;;;;;;;;;;;;;-1:-1:-1;;;;;1012:68:3;-1:-1:-1;;;;;;1012:68:3;;;;;;;;;;3386:23;3412:69;3440:4;3412:69;;;;;;;;;;;;;;;;;3420:5;-1:-1:-1;;;;;3412:27:3;;;:69;;;;;:::i;:::-;3495:17;;3386:95;;-1:-1:-1;3495:21:3;3491:221;;3635:10;3624:30;;;;;;;;;;;;;;3616:85;;;;-1:-1:-1;;;3616:85:3;;;;;;;;;2967:751;;;:::o;3581:193:4:-;3684:12;3715:52;3737:6;3745:4;3751:1;3754:12;3684;4858:18;4869:6;4858:10;:18::i;:::-;4850:60;;;;-1:-1:-1;;;4850:60:4;;;;;;;;;4981:12;4995:23;5022:6;-1:-1:-1;;;;;5022:11:4;5042:5;5050:4;5022:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4980:75;;;;5072:52;5090:7;5099:10;5111:12;5072:17;:52::i;:::-;5065:59;4608:523;-1:-1:-1;;;;;;;4608:523:4:o;726:413::-;1086:20;1124:8;;;726:413::o;7091:725::-;7206:12;7234:7;7230:580;;;-1:-1:-1;7264:10:4;7257:17;;7230:580;7375:17;;:21;7371:429;;7633:10;7627:17;7693:15;7680:10;7676:2;7672:19;7665:44;7582:145;7772:12;7765:20;;-1:-1:-1;;;7765:20:4;;;;;;;;;142:134:-1;220:13;;238:33;220:13;238:33;;2402:263;;2517:2;2505:9;2496:7;2492:23;2488:32;2485:2;;;-1:-1;;2523:12;2485:2;226:6;220:13;238:33;265:5;238:33;;2672:392;;2812:2;;2800:9;2791:7;2787:23;2783:32;2780:2;;;-1:-1;;2818:12;2780:2;2869:17;2863:24;2907:18;;2899:6;2896:30;2893:2;;;-1:-1;;2929:12;2893:2;3031:6;3020:9;3016:22;429:3;422:4;414:6;410:17;406:27;396:2;;-1:-1;;437:12;396:2;477:6;471:13;457:27;;2907:18;29092:6;29089:30;29086:2;;;-1:-1;;29122:12;29086:2;2812;29159:6;29155:17;;;499:80;2812:2;29155:17;29220:15;499:80;;;607:21;;;664:14;;;;639:17;;;744:27;;;;;741:36;-1:-1;738:2;;;-1:-1;;780:12;738:2;-1:-1;806:10;;800:217;825:6;822:1;819:13;800:217;;;905:48;949:3;937:10;905:48;;;893:61;;847:1;840:9;;;;;968:14;;;;996;;800:217;;;-1:-1;2949:99;2774:290;-1:-1;;;;;;;;2774:290;3071:257;;3183:2;3171:9;3162:7;3158:23;3154:32;3151:2;;;-1:-1;;3189:12;3151:2;1112:6;1106:13;34278:5;31705:13;31698:21;34256:5;34253:32;34243:2;;-1:-1;;34289:12;3335:360;;3459:2;3447:9;3438:7;3434:23;3430:32;3427:2;;;-1:-1;;3465:12;3427:2;3516:17;3510:24;3554:18;;3546:6;3543:30;3540:2;;;-1:-1;;3576:12;3540:2;3662:6;3651:9;3647:22;1279:3;1272:4;1264:6;1260:17;1256:27;1246:2;;-1:-1;;1287:12;1246:2;1327:6;1321:13;1307:27;;3554:18;29387:6;29384:30;29381:2;;;-1:-1;;29417:12;29381:2;1349:64;29490:9;29471:17;;-1:-1;;29467:33;3459:2;29548:15;1349:64;;;1340:73;;1433:6;1426:5;1419:21;1537:3;3459:2;1528:6;1461;1519:16;;1516:25;1513:2;;;-1:-1;;1544:12;1513:2;1564:39;1596:6;3459:2;1495:5;1491:16;3459:2;1461:6;1457:17;1564:39;;;-1:-1;3596:83;3421:274;-1:-1;;;;3421:274;3702:277;;3824:2;3812:9;3803:7;3799:23;3795:32;3792:2;;;-1:-1;;3830:12;3792:2;1910:6;1897:20;1922:51;1967:5;1922:51;;3986:460;;;4154:2;4142:9;4133:7;4129:23;4125:32;4122:2;;;-1:-1;;4160:12;4122:2;1910:6;1897:20;1922:51;1967:5;1922:51;;;4212:81;-1:-1;4330:2;4398:22;;1713:20;1738:62;1713:20;1738:62;;;4338:92;;;;4116:330;;;;;;4453:402;;;4592:2;4580:9;4571:7;4567:23;4563:32;4560:2;;;-1:-1;;4598:12;4560:2;1910:6;1897:20;1922:51;1967:5;1922:51;;;4650:81;4768:2;4807:22;;;;2191:20;;-1:-1;;;4554:301;4862:527;;;;5018:2;5006:9;4997:7;4993:23;4989:32;4986:2;;;-1:-1;;5024:12;4986:2;1910:6;1897:20;1922:51;1967:5;1922:51;;;5076:81;-1:-1;5194:2;5233:22;;2191:20;;-1:-1;5302:2;5341:22;;72:20;97:33;72:20;97:33;;;5310:63;;;;4980:409;;;;;;5396:261;;5510:2;5498:9;5489:7;5485:23;5481:32;5478:2;;;-1:-1;;5516:12;5478:2;-1:-1;2062:13;;5472:185;-1:-1;5472:185;6117:173;16353:37;;6279:4;6270:14;;6197:93;6447:103;-1:-1;;;;;32114:54;6508:37;;6502:48;8135:343;;8277:5;29999:12;30802:6;30797:3;30790:19;8370:52;8415:6;30839:4;30834:3;30830:14;30839:4;8396:5;8392:16;8370:52;;;29490:9;34036:14;-1:-1;;34032:28;8434:39;;;;30839:4;8434:39;;8225:253;-1:-1;;8225:253;16522:271;;8645:5;29999:12;8756:52;8801:6;8796:3;8789:4;8782:5;8778:16;8756:52;;;8820:16;;;;;16656:137;-1:-1;;16656:137;16800:222;-1:-1;;;;;32114:54;;;;6508:37;;16927:2;16912:18;;16898:124;17029:349;-1:-1;;;;;32114:54;;;;6377:58;;17364:2;17349:18;;16353:37;17192:2;17177:18;;17163:215;17385:444;-1:-1;;;;;32114:54;;;6508:37;;32114:54;;;;17732:2;17717:18;;6508:37;17815:2;17800:18;;16353:37;;;;17568:2;17553:18;;17539:290;17836:544;;2907:18;;32125:42;;;31621:5;32114:54;6515:3;6508:37;33412:24;18217:2;18206:9;18202:18;9460:58;18045:2;18254;18243:9;18239:18;18232:48;18294:76;18045:2;18034:9;18030:18;18356:6;18294:76;;;18286:84;18016:364;-1:-1;;;;;18016:364;18727:629;18982:2;18996:47;;;29999:12;;18967:18;;;30790:19;;;18727:629;;30839:4;;30830:14;;;;29695;;;18727:629;7116:260;7141:6;7138:1;7135:13;7116:260;;;6022:46;6064:3;7208:6;7202:13;6022:46;;;6088:14;;;;30530;;;;7163:1;7156:9;7116:260;;;7120:14;;;19213:9;19207:4;19203:20;30839:4;19187:9;19183:18;19176:48;19238:108;7630:5;29999:12;7649:86;7728:6;7723:3;7649:86;;;7642:93;;30839:4;7806:5;29695:14;7818:21;;-1:-1;7845:260;7870:6;7867:1;7864:13;7845:260;;;7958:63;8017:3;7937:6;7931:13;7958:63;;;30530:14;;;;7951:70;-1:-1;7163:1;7885:9;7845:260;;;-1:-1;19230:116;;18953:403;-1:-1;;;;;;;18953:403;19919:592;-1:-1;;;;;32114:54;;;8939:70;;20331:2;20316:18;;16353:37;;;;32114:54;;;20414:2;20399:18;;6508:37;32114:54;;;20497:2;20482:18;;6508:37;20148:3;20133:19;;20119:392;20518:310;;20665:2;20686:17;20679:47;20740:78;20665:2;20654:9;20650:18;20804:6;20740:78;;20835:416;21035:2;21049:47;;;10109:2;21020:18;;;30790:19;10145:34;30830:14;;;10125:55;-1:-1;;;10200:12;;;10193:32;10244:12;;;21006:245;21258:416;21458:2;21472:47;;;10495:2;21443:18;;;30790:19;10531:29;30830:14;;;10511:50;10580:12;;;21429:245;21681:416;21881:2;21895:47;;;10831:2;21866:18;;;30790:19;10867:29;30830:14;;;10847:50;10916:12;;;21852:245;22104:416;22304:2;22318:47;;;11167:2;22289:18;;;30790:19;11203:34;30830:14;;;11183:55;-1:-1;;;11258:12;;;11251:40;11310:12;;;22275:245;22527:416;22727:2;22741:47;;;11561:2;22712:18;;;30790:19;11597:34;30830:14;;;11577:55;-1:-1;;;11652:12;;;11645:28;11692:12;;;22698:245;22950:416;23150:2;23164:47;;;11943:2;23135:18;;;30790:19;11979:32;30830:14;;;11959:53;12031:12;;;23121:245;23373:416;23573:2;23587:47;;;12282:2;23558:18;;;30790:19;12318:28;30830:14;;;12298:49;12366:12;;;23544:245;23796:416;23996:2;24010:47;;;12617:2;23981:18;;;30790:19;12653:32;30830:14;;;12633:53;12705:12;;;23967:245;24642:416;24842:2;24856:47;;;13340:2;24827:18;;;30790:19;13376:28;30830:14;;;13356:49;13424:12;;;24813:245;25065:416;25265:2;25279:47;;;25250:18;;;30790:19;13711:34;30830:14;;;13691:55;13765:12;;;25236:245;25488:416;25688:2;25702:47;;;14016:2;25673:18;;;30790:19;14052:34;30830:14;;;14032:55;-1:-1;;;14107:12;;;14100:25;14144:12;;;25659:245;25911:416;26111:2;26125:47;;;14395:2;26096:18;;;30790:19;14431:31;30830:14;;;14411:52;14482:12;;;26082:245;26334:416;26534:2;26548:47;;;14733:2;26519:18;;;30790:19;14769:31;30830:14;;;14749:52;14820:12;;;26505:245;26757:416;26957:2;26971:47;;;15071:2;26942:18;;;30790:19;15107:34;30830:14;;;15087:55;-1:-1;;;15162:12;;;15155:27;15201:12;;;26928:245;27180:416;27380:2;27394:47;;;15452:2;27365:18;;;30790:19;15488:30;30830:14;;;15468:51;15538:12;;;27351:245;27603:416;27803:2;27817:47;;;15789:2;27788:18;;;30790:19;15825:34;30830:14;;;15805:55;-1:-1;;;15880:12;;;15873:34;15926:12;;;27774:245;28026:416;28226:2;28240:47;;;16177:2;28211:18;;;30790:19;16213:33;30830:14;;;16193:54;16266:12;;;28197:245;28449:222;16353:37;;;28576:2;28561:18;;28547:124;28678:256;28740:2;28734:9;28766:17;;;28841:18;28826:34;;28862:22;;;28823:62;28820:2;;;28898:1;;28888:12;28820:2;28740;28907:22;28718:216;;-1:-1;28718:216;33692:268;33757:1;33764:101;33778:6;33775:1;33772:13;33764:101;;;33845:11;;;33839:18;33826:11;;;33819:39;33800:2;33793:10;33764:101;;;33880:6;33877:1;33874:13;33871:2;;;-1:-1;;33757:1;33927:16;;33920:27;33741:219;34073:117;-1:-1;;;;;32114:54;;34132:35;;34122:2;;34181:1;;34171:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1379400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"controller()": "1136",
								"getRequiredComponentUnitsForIssue(address,uint256)": "infinite",
								"initialize(address,address)": "infinite",
								"issue(address,uint256,address)": "infinite",
								"managerIssuanceHook(address)": "1332",
								"redeem(address,uint256,address)": "infinite",
								"removeModule()": "319"
							},
							"internal": {
								"_callPreIssueHooks(contract ISetToken,uint256,address,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1637,
									"end": 9025,
									"name": "PUSH",
									"source": 21,
									"value": "80"
								},
								{
									"begin": 1637,
									"end": 9025,
									"name": "PUSH",
									"source": 21,
									"value": "40"
								},
								{
									"begin": 1637,
									"end": 9025,
									"name": "MSTORE",
									"source": 21
								},
								{
									"begin": 2679,
									"end": 2749,
									"name": "CALLVALUE",
									"source": 21
								},
								{
									"begin": 2679,
									"end": 2749,
									"name": "DUP1",
									"source": 21
								},
								{
									"begin": 2679,
									"end": 2749,
									"name": "ISZERO",
									"source": 21
								},
								{
									"begin": 2679,
									"end": 2749,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "1"
								},
								{
									"begin": 2679,
									"end": 2749,
									"name": "JUMPI",
									"source": 21
								},
								{
									"begin": 2679,
									"end": 2749,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 2679,
									"end": 2749,
									"name": "DUP1",
									"source": 21
								},
								{
									"begin": 2679,
									"end": 2749,
									"name": "REVERT",
									"source": 21
								},
								{
									"begin": 2679,
									"end": 2749,
									"name": "tag",
									"source": 21,
									"value": "1"
								},
								{
									"begin": 2679,
									"end": 2749,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 2679,
									"end": 2749,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 2679,
									"end": 2749,
									"name": "PUSH",
									"source": 21,
									"value": "40"
								},
								{
									"begin": 2679,
									"end": 2749,
									"name": "MLOAD",
									"source": 21
								},
								{
									"begin": 2679,
									"end": 2749,
									"name": "PUSHSIZE",
									"source": 21
								},
								{
									"begin": 2679,
									"end": 2749,
									"name": "CODESIZE",
									"source": 21
								},
								{
									"begin": 2679,
									"end": 2749,
									"name": "SUB",
									"source": 21
								},
								{
									"begin": 2679,
									"end": 2749,
									"name": "DUP1",
									"source": 21
								},
								{
									"begin": 2679,
									"end": 2749,
									"name": "PUSHSIZE",
									"source": 21
								},
								{
									"begin": 2679,
									"end": 2749,
									"name": "DUP4",
									"source": 21
								},
								{
									"begin": 2679,
									"end": 2749,
									"name": "CODECOPY",
									"source": 21
								},
								{
									"begin": 2679,
									"end": 2749,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 2679,
									"end": 2749,
									"name": "ADD",
									"source": 21
								},
								{
									"begin": 2679,
									"end": 2749,
									"name": "PUSH",
									"source": 21,
									"value": "40"
								},
								{
									"begin": 2679,
									"end": 2749,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 2679,
									"end": 2749,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 2679,
									"end": 2749,
									"name": "MSTORE",
									"source": 21
								},
								{
									"begin": 2679,
									"end": 2749,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "2"
								},
								{
									"begin": 2679,
									"end": 2749,
									"name": "SWAP2",
									"source": 21
								},
								{
									"begin": 2679,
									"end": 2749,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "3"
								},
								{
									"begin": 2679,
									"end": 2749,
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 2679,
									"end": 2749,
									"name": "tag",
									"source": 21,
									"value": "2"
								},
								{
									"begin": 2679,
									"end": 2749,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 3375,
									"end": 3385,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 3375,
									"end": 3399,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 3375,
									"end": 3399,
									"name": "SLOAD",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3375,
									"end": 3399,
									"name": "AND",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3375,
									"end": 3399,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 3375,
									"end": 3399,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 3375,
									"end": 3399,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 3375,
									"end": 3399,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 3375,
									"end": 3399,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 3375,
									"end": 3399,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 3375,
									"end": 3399,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 3375,
									"end": 3399,
									"name": "OR",
									"source": 17
								},
								{
									"begin": 3375,
									"end": 3399,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 3375,
									"end": 3399,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 1760,
									"end": 1782,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1760,
									"end": 1782,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1637,
									"end": 9025,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "11"
								},
								{
									"begin": 1637,
									"end": 9025,
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 186,
									"end": 489,
									"name": "tag",
									"source": -1,
									"value": "3"
								},
								{
									"begin": 186,
									"end": 489,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 186,
									"end": 489,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 321,
									"end": 323,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 309,
									"end": 318,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 300,
									"end": 307,
									"name": "DUP5",
									"source": -1
								},
								{
									"begin": 296,
									"end": 319,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 292,
									"end": 324,
									"name": "SLT",
									"source": -1
								},
								{
									"begin": 289,
									"end": 291,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 289,
									"end": 291,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "13"
								},
								{
									"begin": 289,
									"end": 291,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 327,
									"end": 339,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 289,
									"end": 291,
									"name": "tag",
									"source": -1,
									"value": "13"
								},
								{
									"begin": 289,
									"end": 291,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 103,
									"end": 116,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 103,
									"end": 116,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 774,
									"end": 828,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 774,
									"end": 828,
									"name": "AND",
									"source": -1
								},
								{
									"begin": 919,
									"end": 974,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 919,
									"end": 974,
									"name": "EQ",
									"source": -1
								},
								{
									"begin": 909,
									"end": 911,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "14"
								},
								{
									"begin": 909,
									"end": 911,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 978,
									"end": 990,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 909,
									"end": 911,
									"name": "tag",
									"source": -1,
									"value": "14"
								},
								{
									"begin": 909,
									"end": 911,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 379,
									"end": 473,
									"name": "SWAP4",
									"source": -1
								},
								{
									"begin": 283,
									"end": 489,
									"name": "SWAP3",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 283,
									"end": 489,
									"name": "JUMP",
									"source": -1
								},
								{
									"begin": 283,
									"end": 489,
									"name": "tag",
									"source": -1,
									"value": "11"
								},
								{
									"begin": 283,
									"end": 489,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 1637,
									"end": 9025,
									"name": "PUSH #[$]",
									"source": 21,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1637,
									"end": 9025,
									"name": "DUP1",
									"source": 21
								},
								{
									"begin": 1637,
									"end": 9025,
									"name": "PUSH [$]",
									"source": 21,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1637,
									"end": 9025,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 1637,
									"end": 9025,
									"name": "CODECOPY",
									"source": 21
								},
								{
									"begin": 1637,
									"end": 9025,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 1637,
									"end": 9025,
									"name": "RETURN",
									"source": 21
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ed208afc26f50268e56110fa9f76600be53a3934c9e31aa6790d4a3d5c565b3864736f6c634300060a0033",
									".code": [
										{
											"begin": 1637,
											"end": 9025,
											"name": "PUSH",
											"source": 21,
											"value": "80"
										},
										{
											"begin": 1637,
											"end": 9025,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 1637,
											"end": 9025,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 1637,
											"end": 9025,
											"name": "CALLVALUE",
											"source": 21
										},
										{
											"begin": 1637,
											"end": 9025,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1637,
											"end": 9025,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 1637,
											"end": 9025,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "1"
										},
										{
											"begin": 1637,
											"end": 9025,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 1637,
											"end": 9025,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1637,
											"end": 9025,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1637,
											"end": 9025,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 1637,
											"end": 9025,
											"name": "tag",
											"source": 21,
											"value": "1"
										},
										{
											"begin": 1637,
											"end": 9025,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1637,
											"end": 9025,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1637,
											"end": 9025,
											"name": "PUSH",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 1637,
											"end": 9025,
											"name": "CALLDATASIZE",
											"source": 21
										},
										{
											"begin": 1637,
											"end": 9025,
											"name": "LT",
											"source": 21
										},
										{
											"begin": 1637,
											"end": 9025,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "2"
										},
										{
											"begin": 1637,
											"end": 9025,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 1637,
											"end": 9025,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1637,
											"end": 9025,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 1637,
											"end": 9025,
											"name": "PUSH",
											"source": 21,
											"value": "E0"
										},
										{
											"begin": 1637,
											"end": 9025,
											"name": "SHR",
											"source": 21
										},
										{
											"begin": 1637,
											"end": 9025,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1637,
											"end": 9025,
											"name": "PUSH",
											"source": 21,
											"value": "7A4FFD03"
										},
										{
											"begin": 1637,
											"end": 9025,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 1637,
											"end": 9025,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "10"
										},
										{
											"begin": 1637,
											"end": 9025,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 1637,
											"end": 9025,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1637,
											"end": 9025,
											"name": "PUSH",
											"source": 21,
											"value": "7A4FFD03"
										},
										{
											"begin": 1637,
											"end": 9025,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 1637,
											"end": 9025,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "6"
										},
										{
											"begin": 1637,
											"end": 9025,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 1637,
											"end": 9025,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1637,
											"end": 9025,
											"name": "PUSH",
											"source": 21,
											"value": "847EF08D"
										},
										{
											"begin": 1637,
											"end": 9025,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 1637,
											"end": 9025,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "7"
										},
										{
											"begin": 1637,
											"end": 9025,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 1637,
											"end": 9025,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1637,
											"end": 9025,
											"name": "PUSH",
											"source": 21,
											"value": "DFE75335"
										},
										{
											"begin": 1637,
											"end": 9025,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 1637,
											"end": 9025,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "8"
										},
										{
											"begin": 1637,
											"end": 9025,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 1637,
											"end": 9025,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1637,
											"end": 9025,
											"name": "PUSH",
											"source": 21,
											"value": "F77C4791"
										},
										{
											"begin": 1637,
											"end": 9025,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 1637,
											"end": 9025,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "9"
										},
										{
											"begin": 1637,
											"end": 9025,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 1637,
											"end": 9025,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "2"
										},
										{
											"begin": 1637,
											"end": 9025,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1637,
											"end": 9025,
											"name": "tag",
											"source": 21,
											"value": "10"
										},
										{
											"begin": 1637,
											"end": 9025,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1637,
											"end": 9025,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1637,
											"end": 9025,
											"name": "PUSH",
											"source": 21,
											"value": "485CC955"
										},
										{
											"begin": 1637,
											"end": 9025,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 1637,
											"end": 9025,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "3"
										},
										{
											"begin": 1637,
											"end": 9025,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 1637,
											"end": 9025,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1637,
											"end": 9025,
											"name": "PUSH",
											"source": 21,
											"value": "5C833BFD"
										},
										{
											"begin": 1637,
											"end": 9025,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 1637,
											"end": 9025,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 1637,
											"end": 9025,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 1637,
											"end": 9025,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1637,
											"end": 9025,
											"name": "PUSH",
											"source": 21,
											"value": "6D78F47A"
										},
										{
											"begin": 1637,
											"end": 9025,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 1637,
											"end": 9025,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "5"
										},
										{
											"begin": 1637,
											"end": 9025,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 1637,
											"end": 9025,
											"name": "tag",
											"source": 21,
											"value": "2"
										},
										{
											"begin": 1637,
											"end": 9025,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1637,
											"end": 9025,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1637,
											"end": 9025,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1637,
											"end": 9025,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 6481,
											"end": 6791,
											"name": "tag",
											"source": 21,
											"value": "3"
										},
										{
											"begin": 6481,
											"end": 6791,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6481,
											"end": 6791,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "11"
										},
										{
											"begin": 6481,
											"end": 6791,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "12"
										},
										{
											"begin": 6481,
											"end": 6791,
											"name": "CALLDATASIZE",
											"source": 21
										},
										{
											"begin": 6481,
											"end": 6791,
											"name": "PUSH",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 6481,
											"end": 6791,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "13"
										},
										{
											"begin": 6481,
											"end": 6791,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6481,
											"end": 6791,
											"name": "tag",
											"source": 21,
											"value": "12"
										},
										{
											"begin": 6481,
											"end": 6791,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6481,
											"end": 6791,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "14"
										},
										{
											"begin": 6481,
											"end": 6791,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 6481,
											"end": 6791,
											"name": "tag",
											"source": 21,
											"value": "11"
										},
										{
											"begin": 6481,
											"end": 6791,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6481,
											"end": 6791,
											"name": "STOP",
											"source": 21
										},
										{
											"begin": 4734,
											"end": 6079,
											"name": "tag",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 4734,
											"end": 6079,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4734,
											"end": 6079,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "11"
										},
										{
											"begin": 4734,
											"end": 6079,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "16"
										},
										{
											"begin": 4734,
											"end": 6079,
											"name": "CALLDATASIZE",
											"source": 21
										},
										{
											"begin": 4734,
											"end": 6079,
											"name": "PUSH",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 4734,
											"end": 6079,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "17"
										},
										{
											"begin": 4734,
											"end": 6079,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4734,
											"end": 6079,
											"name": "tag",
											"source": 21,
											"value": "16"
										},
										{
											"begin": 4734,
											"end": 6079,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4734,
											"end": 6079,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "18"
										},
										{
											"begin": 4734,
											"end": 6079,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 3254,
											"end": 4317,
											"name": "tag",
											"source": 21,
											"value": "5"
										},
										{
											"begin": 3254,
											"end": 4317,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3254,
											"end": 4317,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "11"
										},
										{
											"begin": 3254,
											"end": 4317,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 3254,
											"end": 4317,
											"name": "CALLDATASIZE",
											"source": 21
										},
										{
											"begin": 3254,
											"end": 4317,
											"name": "PUSH",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 3254,
											"end": 4317,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "17"
										},
										{
											"begin": 3254,
											"end": 4317,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3254,
											"end": 4317,
											"name": "tag",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 3254,
											"end": 4317,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3254,
											"end": 4317,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "21"
										},
										{
											"begin": 3254,
											"end": 4317,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 7545,
											"end": 8274,
											"name": "tag",
											"source": 21,
											"value": "6"
										},
										{
											"begin": 7545,
											"end": 8274,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7545,
											"end": 8274,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "22"
										},
										{
											"begin": 7545,
											"end": 8274,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "23"
										},
										{
											"begin": 7545,
											"end": 8274,
											"name": "CALLDATASIZE",
											"source": 21
										},
										{
											"begin": 7545,
											"end": 8274,
											"name": "PUSH",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 7545,
											"end": 8274,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 7545,
											"end": 8274,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 7545,
											"end": 8274,
											"name": "tag",
											"source": 21,
											"value": "23"
										},
										{
											"begin": 7545,
											"end": 8274,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7545,
											"end": 8274,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "25"
										},
										{
											"begin": 7545,
											"end": 8274,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 7545,
											"end": 8274,
											"name": "tag",
											"source": 21,
											"value": "22"
										},
										{
											"begin": 7545,
											"end": 8274,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7545,
											"end": 8274,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 7545,
											"end": 8274,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 7545,
											"end": 8274,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "26"
										},
										{
											"begin": 7545,
											"end": 8274,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 7545,
											"end": 8274,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 7545,
											"end": 8274,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 7545,
											"end": 8274,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "27"
										},
										{
											"begin": 7545,
											"end": 8274,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 7545,
											"end": 8274,
											"name": "tag",
											"source": 21,
											"value": "26"
										},
										{
											"begin": 7545,
											"end": 8274,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7545,
											"end": 8274,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 7545,
											"end": 8274,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 7545,
											"end": 8274,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 7545,
											"end": 8274,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 7545,
											"end": 8274,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 7545,
											"end": 8274,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 7545,
											"end": 8274,
											"name": "RETURN",
											"source": 21
										},
										{
											"begin": 6939,
											"end": 7056,
											"name": "tag",
											"source": 21,
											"value": "7"
										},
										{
											"begin": 6939,
											"end": 7056,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6939,
											"end": 7056,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "11"
										},
										{
											"begin": 6939,
											"end": 7056,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "29"
										},
										{
											"begin": 6939,
											"end": 7056,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 2419,
											"end": 2488,
											"name": "tag",
											"source": 21,
											"value": "8"
										},
										{
											"begin": 2419,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2419,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "30"
										},
										{
											"begin": 2419,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "31"
										},
										{
											"begin": 2419,
											"end": 2488,
											"name": "CALLDATASIZE",
											"source": 21
										},
										{
											"begin": 2419,
											"end": 2488,
											"name": "PUSH",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 2419,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "32"
										},
										{
											"begin": 2419,
											"end": 2488,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2419,
											"end": 2488,
											"name": "tag",
											"source": 21,
											"value": "31"
										},
										{
											"begin": 2419,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2419,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "33"
										},
										{
											"begin": 2419,
											"end": 2488,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 2419,
											"end": 2488,
											"name": "tag",
											"source": 21,
											"value": "30"
										},
										{
											"begin": 2419,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2419,
											"end": 2488,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 2419,
											"end": 2488,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 2419,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "26"
										},
										{
											"begin": 2419,
											"end": 2488,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 2419,
											"end": 2488,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 2419,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "82"
										},
										{
											"begin": 2419,
											"end": 2488,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2156,
											"end": 2185,
											"name": "tag",
											"source": 17,
											"value": "9"
										},
										{
											"begin": 2156,
											"end": 2185,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2156,
											"end": 2185,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "30"
										},
										{
											"begin": 2156,
											"end": 2185,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "37"
										},
										{
											"begin": 2156,
											"end": 2185,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 6481,
											"end": 6791,
											"name": "tag",
											"source": 21,
											"value": "14"
										},
										{
											"begin": 6481,
											"end": 6791,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6620,
											"end": 6629,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 6631,
											"end": 6641,
											"name": "CALLER",
											"source": 21
										},
										{
											"begin": 2440,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "41"
										},
										{
											"begin": 2464,
											"end": 2473,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2475,
											"end": 2482,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2440,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "42"
										},
										{
											"begin": 2440,
											"end": 2483,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 2440,
											"end": 2483,
											"name": "tag",
											"source": 17,
											"value": "41"
										},
										{
											"begin": 2440,
											"end": 2483,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6674,
											"end": 6683,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 3050,
											"end": 3092,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 3082,
											"end": 3091,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3050,
											"end": 3081,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "45"
										},
										{
											"begin": 3050,
											"end": 3092,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 3050,
											"end": 3092,
											"name": "tag",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 3050,
											"end": 3092,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6699,
											"end": 6729,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 6699,
											"end": 6729,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 6699,
											"end": 6729,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 6699,
											"end": 6729,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 6699,
											"end": 6729,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 6699,
											"end": 6729,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 6699,
											"end": 6729,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "PUSH",
											"source": 21,
											"value": "2"
										},
										{
											"begin": 6699,
											"end": 6729,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 6699,
											"end": 6729,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 6699,
											"end": 6729,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 6699,
											"end": 6729,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 6699,
											"end": 6729,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 6699,
											"end": 6729,
											"name": "KECCAK256",
											"source": 21
										},
										{
											"begin": 6699,
											"end": 6745,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 6699,
											"end": 6745,
											"name": "SLOAD",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6699,
											"end": 6745,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 6699,
											"end": 6745,
											"name": "SWAP5",
											"source": 21
										},
										{
											"begin": 6699,
											"end": 6745,
											"name": "DUP10",
											"source": 21
										},
										{
											"begin": 6699,
											"end": 6745,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 6699,
											"end": 6745,
											"name": "SWAP5",
											"source": 21
										},
										{
											"begin": 6699,
											"end": 6745,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 6699,
											"end": 6745,
											"name": "SWAP5",
											"source": 21
										},
										{
											"begin": 6699,
											"end": 6745,
											"name": "OR",
											"source": 21
										},
										{
											"begin": 6699,
											"end": 6745,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 6699,
											"end": 6745,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 6699,
											"end": 6745,
											"name": "SSTORE",
											"source": 21
										},
										{
											"begin": 6756,
											"end": 6784,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 6756,
											"end": 6784,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7FF078F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6756,
											"end": 6784,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 6756,
											"end": 6784,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 6756,
											"end": 6784,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 6756,
											"end": 6784,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 6699,
											"end": 6729,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 6699,
											"end": 6729,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 6756,
											"end": 6782,
											"name": "PUSH",
											"source": 21,
											"value": "FFE0F1E"
										},
										{
											"begin": 6756,
											"end": 6782,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 6756,
											"end": 6784,
											"name": "PUSH",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 6756,
											"end": 6784,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 6756,
											"end": 6784,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 6756,
											"end": 6784,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6756,
											"end": 6784,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 6699,
											"end": 6729,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 6756,
											"end": 6784,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 6756,
											"end": 6784,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 6756,
											"end": 6784,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 6756,
											"end": 6784,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6756,
											"end": 6784,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 6699,
											"end": 6729,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 6699,
											"end": 6729,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 6756,
											"end": 6784,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 6756,
											"end": 6784,
											"name": "EXTCODESIZE",
											"source": 21
										},
										{
											"begin": 6756,
											"end": 6784,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 6756,
											"end": 6784,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 6756,
											"end": 6784,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 6756,
											"end": 6784,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "47"
										},
										{
											"begin": 6756,
											"end": 6784,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 6756,
											"end": 6784,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 6756,
											"end": 6784,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 6756,
											"end": 6784,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 6756,
											"end": 6784,
											"name": "tag",
											"source": 21,
											"value": "47"
										},
										{
											"begin": 6756,
											"end": 6784,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6756,
											"end": 6784,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6756,
											"end": 6784,
											"name": "GAS",
											"source": 21
										},
										{
											"begin": 6756,
											"end": 6784,
											"name": "CALL",
											"source": 21
										},
										{
											"begin": 6756,
											"end": 6784,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 6756,
											"end": 6784,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 6756,
											"end": 6784,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 6756,
											"end": 6784,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "49"
										},
										{
											"begin": 6756,
											"end": 6784,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 6756,
											"end": 6784,
											"name": "RETURNDATASIZE",
											"source": 21
										},
										{
											"begin": 6756,
											"end": 6784,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 6756,
											"end": 6784,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 6756,
											"end": 6784,
											"name": "RETURNDATACOPY",
											"source": 21
										},
										{
											"begin": 6756,
											"end": 6784,
											"name": "RETURNDATASIZE",
											"source": 21
										},
										{
											"begin": 6756,
											"end": 6784,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 6756,
											"end": 6784,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 6756,
											"end": 6784,
											"name": "tag",
											"source": 21,
											"value": "49"
										},
										{
											"begin": 6756,
											"end": 6784,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6756,
											"end": 6784,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6756,
											"end": 6784,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6756,
											"end": 6784,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6756,
											"end": 6784,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2493,
											"end": 2494,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6481,
											"end": 6791,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6481,
											"end": 6791,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6481,
											"end": 6791,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6481,
											"end": 6791,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6481,
											"end": 6791,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 4734,
											"end": 6079,
											"name": "tag",
											"source": 21,
											"value": "18"
										},
										{
											"begin": 4734,
											"end": 6079,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1688,
											"end": 1689,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2277,
											"end": 2284,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2277,
											"end": 2284,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2277,
											"end": 2296,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2277,
											"end": 2296,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1688,
											"end": 1689,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2407,
											"end": 2414,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2407,
											"end": 2425,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 4906,
											"end": 4915,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 2574,
											"end": 2620,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "55"
										},
										{
											"begin": 4906,
											"end": 4915,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 2574,
											"end": 2609,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "56"
										},
										{
											"begin": 2574,
											"end": 2620,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 2574,
											"end": 2620,
											"name": "tag",
											"source": 17,
											"value": "55"
										},
										{
											"begin": 2574,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4951,
											"end": 4952,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 4939,
											"end": 4948,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 4939,
											"end": 4952,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 4931,
											"end": 4984,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "58"
										},
										{
											"begin": 4931,
											"end": 4984,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 4931,
											"end": 4984,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 4931,
											"end": 4984,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4931,
											"end": 4984,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 4931,
											"end": 4984,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 4931,
											"end": 4984,
											"name": "PUSH",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 4931,
											"end": 4984,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4931,
											"end": 4984,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "52"
										},
										{
											"begin": 4931,
											"end": 4984,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 4931,
											"end": 4984,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 4931,
											"end": 4984,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4931,
											"end": 4984,
											"name": "tag",
											"source": 21,
											"value": "58"
										},
										{
											"begin": 4931,
											"end": 4984,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5096,
											"end": 5133,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 5096,
											"end": 5133,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2770A7EB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5096,
											"end": 5133,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5096,
											"end": 5133,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5096,
											"end": 5110,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 5096,
											"end": 5110,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 5096,
											"end": 5110,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 5096,
											"end": 5110,
											"name": "PUSH",
											"source": 21,
											"value": "9DC29FAC"
										},
										{
											"begin": 5096,
											"end": 5110,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 5096,
											"end": 5133,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "61"
										},
										{
											"begin": 5096,
											"end": 5133,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 5111,
											"end": 5121,
											"name": "CALLER",
											"source": 21
										},
										{
											"begin": 5111,
											"end": 5121,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 5123,
											"end": 5132,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 5123,
											"end": 5132,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 5096,
											"end": 5133,
											"name": "PUSH",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 5096,
											"end": 5133,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5096,
											"end": 5133,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "62"
										},
										{
											"begin": 5096,
											"end": 5133,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5096,
											"end": 5133,
											"name": "tag",
											"source": 21,
											"value": "61"
										},
										{
											"begin": 5096,
											"end": 5133,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5096,
											"end": 5133,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5096,
											"end": 5133,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 5096,
											"end": 5133,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 5096,
											"end": 5133,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 5096,
											"end": 5133,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 5096,
											"end": 5133,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 5096,
											"end": 5133,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5096,
											"end": 5133,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5096,
											"end": 5133,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 5096,
											"end": 5133,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 5096,
											"end": 5133,
											"name": "EXTCODESIZE",
											"source": 21
										},
										{
											"begin": 5096,
											"end": 5133,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 5096,
											"end": 5133,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 5096,
											"end": 5133,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 5096,
											"end": 5133,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "63"
										},
										{
											"begin": 5096,
											"end": 5133,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 5096,
											"end": 5133,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5096,
											"end": 5133,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 5096,
											"end": 5133,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 5096,
											"end": 5133,
											"name": "tag",
											"source": 21,
											"value": "63"
										},
										{
											"begin": 5096,
											"end": 5133,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5096,
											"end": 5133,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5096,
											"end": 5133,
											"name": "GAS",
											"source": 21
										},
										{
											"begin": 5096,
											"end": 5133,
											"name": "CALL",
											"source": 21
										},
										{
											"begin": 5096,
											"end": 5133,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 5096,
											"end": 5133,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 5096,
											"end": 5133,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 5096,
											"end": 5133,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "65"
										},
										{
											"begin": 5096,
											"end": 5133,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 5096,
											"end": 5133,
											"name": "RETURNDATASIZE",
											"source": 21
										},
										{
											"begin": 5096,
											"end": 5133,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5096,
											"end": 5133,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 5096,
											"end": 5133,
											"name": "RETURNDATACOPY",
											"source": 21
										},
										{
											"begin": 5096,
											"end": 5133,
											"name": "RETURNDATASIZE",
											"source": 21
										},
										{
											"begin": 5096,
											"end": 5133,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5096,
											"end": 5133,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 5096,
											"end": 5133,
											"name": "tag",
											"source": 21,
											"value": "65"
										},
										{
											"begin": 5096,
											"end": 5133,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5096,
											"end": 5133,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5096,
											"end": 5133,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5096,
											"end": 5133,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5096,
											"end": 5133,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5229,
											"end": 5256,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 5259,
											"end": 5268,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5259,
											"end": 5282,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 5259,
											"end": 5282,
											"name": "PUSH",
											"source": 21,
											"value": "99D50D5D"
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "PUSH",
											"source": 21,
											"value": "E0"
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "SHL",
											"source": 21
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "PUSH",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "EXTCODESIZE",
											"source": 21
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "66"
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "tag",
											"source": 21,
											"value": "66"
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "GAS",
											"source": 21
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "STATICCALL",
											"source": 21
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "68"
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "RETURNDATASIZE",
											"source": 21
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "RETURNDATACOPY",
											"source": 21
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "RETURNDATASIZE",
											"source": 21
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "tag",
											"source": 21,
											"value": "68"
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "RETURNDATASIZE",
											"source": 21
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "RETURNDATACOPY",
											"source": 21
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "RETURNDATASIZE",
											"source": 21
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "69"
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "70"
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "tag",
											"source": 21,
											"value": "69"
										},
										{
											"begin": 5259,
											"end": 5284,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5229,
											"end": 5284,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5299,
											"end": 5308,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5294,
											"end": 5993,
											"name": "tag",
											"source": 21,
											"value": "71"
										},
										{
											"begin": 5294,
											"end": 5993,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5318,
											"end": 5328,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5318,
											"end": 5335,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 5314,
											"end": 5315,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5314,
											"end": 5335,
											"name": "LT",
											"source": 21
										},
										{
											"begin": 5294,
											"end": 5993,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 5294,
											"end": 5993,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "72"
										},
										{
											"begin": 5294,
											"end": 5993,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 5356,
											"end": 5373,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5376,
											"end": 5386,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5387,
											"end": 5388,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5376,
											"end": 5389,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5376,
											"end": 5389,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 5376,
											"end": 5389,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5376,
											"end": 5389,
											"name": "LT",
											"source": 21
										},
										{
											"begin": 5376,
											"end": 5389,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "74"
										},
										{
											"begin": 5376,
											"end": 5389,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 5376,
											"end": 5389,
											"name": "INVALID",
											"source": 21
										},
										{
											"begin": 5376,
											"end": 5389,
											"name": "tag",
											"source": 21,
											"value": "74"
										},
										{
											"begin": 5376,
											"end": 5389,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5376,
											"end": 5389,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 5376,
											"end": 5389,
											"name": "MUL",
											"source": 21
										},
										{
											"begin": 5376,
											"end": 5389,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 5376,
											"end": 5389,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5376,
											"end": 5389,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5376,
											"end": 5389,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 5356,
											"end": 5389,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 5356,
											"end": 5389,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5412,
											"end": 5452,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "75"
										},
										{
											"begin": 5442,
											"end": 5451,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5412,
											"end": 5421,
											"name": "DUP9",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5412,
											"end": 5441,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 5412,
											"end": 5441,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "76"
										},
										{
											"begin": 5412,
											"end": 5441,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 5412,
											"end": 5452,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 5412,
											"end": 5452,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 5412,
											"end": 5452,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5412,
											"end": 5452,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 5412,
											"end": 5452,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 5412,
											"end": 5452,
											"name": "tag",
											"source": 21,
											"value": "75"
										},
										{
											"begin": 5412,
											"end": 5452,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5411,
											"end": 5452,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 5403,
											"end": 5493,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "77"
										},
										{
											"begin": 5403,
											"end": 5493,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 5403,
											"end": 5493,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 5403,
											"end": 5493,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5403,
											"end": 5493,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5403,
											"end": 5493,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 5403,
											"end": 5493,
											"name": "PUSH",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 5403,
											"end": 5493,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5403,
											"end": 5493,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "52"
										},
										{
											"begin": 5403,
											"end": 5493,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 5403,
											"end": 5493,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "79"
										},
										{
											"begin": 5403,
											"end": 5493,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5403,
											"end": 5493,
											"name": "tag",
											"source": 21,
											"value": "77"
										},
										{
											"begin": 5403,
											"end": 5493,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5523,
											"end": 5582,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "80"
										},
										{
											"begin": 5523,
											"end": 5532,
											"name": "DUP9",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5523,
											"end": 5559,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 5523,
											"end": 5559,
											"name": "PUSH",
											"source": 21,
											"value": "66CB8D2F"
										},
										{
											"begin": 5560,
											"end": 5569,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "PUSH",
											"source": 21,
											"value": "E0"
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "SHL",
											"source": 21
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "PUSH",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "81"
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "82"
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "tag",
											"source": 21,
											"value": "81"
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "EXTCODESIZE",
											"source": 21
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "83"
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "tag",
											"source": 21,
											"value": "83"
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "GAS",
											"source": 21
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "STATICCALL",
											"source": 21
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "85"
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "RETURNDATASIZE",
											"source": 21
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "RETURNDATACOPY",
											"source": 21
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "RETURNDATASIZE",
											"source": 21
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "tag",
											"source": 21,
											"value": "85"
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "RETURNDATASIZE",
											"source": 21
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "NOT",
											"source": 21
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "86"
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "87"
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "tag",
											"source": 21,
											"value": "86"
										},
										{
											"begin": 5523,
											"end": 5570,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5523,
											"end": 5580,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "88"
										},
										{
											"begin": 5523,
											"end": 5582,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 5523,
											"end": 5582,
											"name": "tag",
											"source": 21,
											"value": "80"
										},
										{
											"begin": 5523,
											"end": 5582,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5508,
											"end": 5582,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5711,
											"end": 5736,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 5765,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "89"
										},
										{
											"begin": 5739,
											"end": 5748,
											"name": "DUP9",
											"source": 21
										},
										{
											"begin": 5508,
											"end": 5582,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 5739,
											"end": 5765,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5759,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "90"
										},
										{
											"begin": 5739,
											"end": 5765,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 5739,
											"end": 5765,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 5739,
											"end": 5765,
											"name": "tag",
											"source": 21,
											"value": "89"
										},
										{
											"begin": 5739,
											"end": 5765,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5711,
											"end": 5765,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5855,
											"end": 5982,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "91"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5855,
											"end": 5885,
											"name": "DUP11",
											"source": 21
										},
										{
											"begin": 5855,
											"end": 5885,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 5903,
											"end": 5912,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 5930,
											"end": 5933,
											"name": "DUP10",
											"source": 21
										},
										{
											"begin": 5711,
											"end": 5765,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 5855,
											"end": 5982,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5855,
											"end": 5885,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "92"
										},
										{
											"begin": 5855,
											"end": 5982,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 5855,
											"end": 5982,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 5855,
											"end": 5982,
											"name": "tag",
											"source": 21,
											"value": "91"
										},
										{
											"begin": 5855,
											"end": 5982,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5337,
											"end": 5340,
											"name": "PUSH",
											"source": 21,
											"value": "1"
										},
										{
											"begin": 5337,
											"end": 5340,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5294,
											"end": 5993,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "71"
										},
										{
											"begin": 5294,
											"end": 5993,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5294,
											"end": 5993,
											"name": "tag",
											"source": 21,
											"value": "72"
										},
										{
											"begin": 5294,
											"end": 5993,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5294,
											"end": 5993,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6057,
											"end": 6060,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6008,
											"end": 6072,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 6045,
											"end": 6055,
											"name": "CALLER",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6008,
											"end": 6072,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 6033,
											"end": 6042,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6008,
											"end": 6072,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 6008,
											"end": 6072,
											"name": "PUSH",
											"source": 21,
											"value": "5F8AAADA00823525432114F0E904C6F7C0198A5B8F113EE635FF81AAF9566AD"
										},
										{
											"begin": 6062,
											"end": 6071,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 6008,
											"end": 6072,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 6008,
											"end": 6072,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 6008,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "93"
										},
										{
											"begin": 6008,
											"end": 6072,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 6008,
											"end": 6072,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 6008,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "94"
										},
										{
											"begin": 6008,
											"end": 6072,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6008,
											"end": 6072,
											"name": "tag",
											"source": 21,
											"value": "93"
										},
										{
											"begin": 6008,
											"end": 6072,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6008,
											"end": 6072,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 6008,
											"end": 6072,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 6008,
											"end": 6072,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 6008,
											"end": 6072,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 6008,
											"end": 6072,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 6008,
											"end": 6072,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 6008,
											"end": 6072,
											"name": "LOG4",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1645,
											"end": 1646,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2580,
											"end": 2602,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2580,
											"end": 2602,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4734,
											"end": 6079,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 3254,
											"end": 4317,
											"name": "tag",
											"source": 21,
											"value": "21"
										},
										{
											"begin": 3254,
											"end": 4317,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1688,
											"end": 1689,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2277,
											"end": 2284,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2277,
											"end": 2284,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2277,
											"end": 2296,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2277,
											"end": 2296,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1688,
											"end": 1689,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2407,
											"end": 2414,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2407,
											"end": 2425,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3425,
											"end": 3434,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 2574,
											"end": 2620,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "99"
										},
										{
											"begin": 3425,
											"end": 3434,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 2574,
											"end": 2609,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "56"
										},
										{
											"begin": 2574,
											"end": 2620,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 2574,
											"end": 2620,
											"name": "tag",
											"source": 17,
											"value": "99"
										},
										{
											"begin": 2574,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3470,
											"end": 3471,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3458,
											"end": 3467,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 3458,
											"end": 3471,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 3450,
											"end": 3502,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "101"
										},
										{
											"begin": 3450,
											"end": 3502,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 3450,
											"end": 3502,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 3450,
											"end": 3502,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3450,
											"end": 3502,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3450,
											"end": 3502,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 3450,
											"end": 3502,
											"name": "PUSH",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 3450,
											"end": 3502,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3450,
											"end": 3502,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "52"
										},
										{
											"begin": 3450,
											"end": 3502,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3450,
											"end": 3502,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "103"
										},
										{
											"begin": 3450,
											"end": 3502,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3450,
											"end": 3502,
											"name": "tag",
											"source": 21,
											"value": "101"
										},
										{
											"begin": 3450,
											"end": 3502,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3513,
											"end": 3533,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3536,
											"end": 3593,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "104"
										},
										{
											"begin": 3555,
											"end": 3564,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 3566,
											"end": 3575,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 3577,
											"end": 3587,
											"name": "CALLER",
											"source": 21
										},
										{
											"begin": 3589,
											"end": 3592,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 3536,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "105"
										},
										{
											"begin": 3536,
											"end": 3593,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 3536,
											"end": 3593,
											"name": "tag",
											"source": 21,
											"value": "104"
										},
										{
											"begin": 3536,
											"end": 3593,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3513,
											"end": 3593,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3513,
											"end": 3593,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3618,
											"end": 3645,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 3659,
											"end": 3695,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 3708,
											"end": 3763,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "106"
										},
										{
											"begin": 3742,
											"end": 3751,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 3753,
											"end": 3762,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 3708,
											"end": 3741,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "25"
										},
										{
											"begin": 3708,
											"end": 3763,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 3708,
											"end": 3763,
											"name": "tag",
											"source": 21,
											"value": "106"
										},
										{
											"begin": 3708,
											"end": 3763,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3604,
											"end": 3763,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3604,
											"end": 3763,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3604,
											"end": 3763,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3858,
											"end": 3867,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3853,
											"end": 4149,
											"name": "tag",
											"source": 21,
											"value": "107"
										},
										{
											"begin": 3853,
											"end": 4149,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3877,
											"end": 3887,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 3877,
											"end": 3894,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 3873,
											"end": 3874,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3873,
											"end": 3894,
											"name": "LT",
											"source": 21
										},
										{
											"begin": 3853,
											"end": 4149,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 3853,
											"end": 4149,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "108"
										},
										{
											"begin": 3853,
											"end": 4149,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 3969,
											"end": 4138,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "110"
										},
										{
											"begin": 4006,
											"end": 4016,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 4017,
											"end": 4018,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 4006,
											"end": 4019,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 4006,
											"end": 4019,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 4006,
											"end": 4019,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 4006,
											"end": 4019,
											"name": "LT",
											"source": 21
										},
										{
											"begin": 4006,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "111"
										},
										{
											"begin": 4006,
											"end": 4019,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 4006,
											"end": 4019,
											"name": "INVALID",
											"source": 21
										},
										{
											"begin": 4006,
											"end": 4019,
											"name": "tag",
											"source": 21,
											"value": "111"
										},
										{
											"begin": 4006,
											"end": 4019,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4006,
											"end": 4019,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 4006,
											"end": 4019,
											"name": "MUL",
											"source": 21
										},
										{
											"begin": 4006,
											"end": 4019,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 4006,
											"end": 4019,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4006,
											"end": 4019,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4006,
											"end": 4019,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 4038,
											"end": 4048,
											"name": "CALLER",
											"source": 21
										},
										{
											"begin": 4074,
											"end": 4083,
											"name": "DUP11",
											"source": 21
										},
										{
											"begin": 4102,
											"end": 4121,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 4122,
											"end": 4123,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 4102,
											"end": 4124,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 4102,
											"end": 4124,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 4102,
											"end": 4124,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 4102,
											"end": 4124,
											"name": "LT",
											"source": 21
										},
										{
											"begin": 4102,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "112"
										},
										{
											"begin": 4102,
											"end": 4124,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 4102,
											"end": 4124,
											"name": "INVALID",
											"source": 21
										},
										{
											"begin": 4102,
											"end": 4124,
											"name": "tag",
											"source": 21,
											"value": "112"
										},
										{
											"begin": 4102,
											"end": 4124,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4102,
											"end": 4124,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 4102,
											"end": 4124,
											"name": "MUL",
											"source": 21
										},
										{
											"begin": 4102,
											"end": 4124,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 4102,
											"end": 4124,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4102,
											"end": 4124,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4102,
											"end": 4124,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 3969,
											"end": 3981,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "113"
										},
										{
											"begin": 3969,
											"end": 4138,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 3969,
											"end": 4138,
											"name": "tag",
											"source": 21,
											"value": "110"
										},
										{
											"begin": 3969,
											"end": 4138,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3896,
											"end": 3899,
											"name": "PUSH",
											"source": 21,
											"value": "1"
										},
										{
											"begin": 3896,
											"end": 3899,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3853,
											"end": 4149,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "107"
										},
										{
											"begin": 3853,
											"end": 4149,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3853,
											"end": 4149,
											"name": "tag",
											"source": 21,
											"value": "108"
										},
										{
											"begin": 3853,
											"end": 4149,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4188,
											"end": 4218,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 4188,
											"end": 4218,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40C10F19"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4188,
											"end": 4218,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 4188,
											"end": 4218,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4188,
											"end": 4202,
											"name": "DUP9",
											"source": 21
										},
										{
											"begin": 4188,
											"end": 4202,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 4188,
											"end": 4202,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 4188,
											"end": 4202,
											"name": "PUSH",
											"source": 21,
											"value": "40C10F19"
										},
										{
											"begin": 4188,
											"end": 4202,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 4188,
											"end": 4218,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "114"
										},
										{
											"begin": 4188,
											"end": 4218,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 4203,
											"end": 4206,
											"name": "DUP9",
											"source": 21
										},
										{
											"begin": 4203,
											"end": 4206,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 4208,
											"end": 4217,
											"name": "DUP11",
											"source": 21
										},
										{
											"begin": 4208,
											"end": 4217,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 4188,
											"end": 4218,
											"name": "PUSH",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 4188,
											"end": 4218,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4188,
											"end": 4218,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "62"
										},
										{
											"begin": 4188,
											"end": 4218,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4188,
											"end": 4218,
											"name": "tag",
											"source": 21,
											"value": "114"
										},
										{
											"begin": 4188,
											"end": 4218,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4188,
											"end": 4218,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 4188,
											"end": 4218,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 4188,
											"end": 4218,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 4188,
											"end": 4218,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 4188,
											"end": 4218,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 4188,
											"end": 4218,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 4188,
											"end": 4218,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 4188,
											"end": 4218,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 4188,
											"end": 4218,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 4188,
											"end": 4218,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 4188,
											"end": 4218,
											"name": "EXTCODESIZE",
											"source": 21
										},
										{
											"begin": 4188,
											"end": 4218,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 4188,
											"end": 4218,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 4188,
											"end": 4218,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 4188,
											"end": 4218,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "116"
										},
										{
											"begin": 4188,
											"end": 4218,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 4188,
											"end": 4218,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 4188,
											"end": 4218,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 4188,
											"end": 4218,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 4188,
											"end": 4218,
											"name": "tag",
											"source": 21,
											"value": "116"
										},
										{
											"begin": 4188,
											"end": 4218,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4188,
											"end": 4218,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4188,
											"end": 4218,
											"name": "GAS",
											"source": 21
										},
										{
											"begin": 4188,
											"end": 4218,
											"name": "CALL",
											"source": 21
										},
										{
											"begin": 4188,
											"end": 4218,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 4188,
											"end": 4218,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 4188,
											"end": 4218,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 4188,
											"end": 4218,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "118"
										},
										{
											"begin": 4188,
											"end": 4218,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 4188,
											"end": 4218,
											"name": "RETURNDATASIZE",
											"source": 21
										},
										{
											"begin": 4188,
											"end": 4218,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 4188,
											"end": 4218,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 4188,
											"end": 4218,
											"name": "RETURNDATACOPY",
											"source": 21
										},
										{
											"begin": 4188,
											"end": 4218,
											"name": "RETURNDATASIZE",
											"source": 21
										},
										{
											"begin": 4188,
											"end": 4218,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 4188,
											"end": 4218,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 4188,
											"end": 4218,
											"name": "tag",
											"source": 21,
											"value": "118"
										},
										{
											"begin": 4188,
											"end": 4218,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4188,
											"end": 4218,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4188,
											"end": 4218,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4188,
											"end": 4218,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4188,
											"end": 4218,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4281,
											"end": 4284,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4234,
											"end": 4310,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 4269,
											"end": 4279,
											"name": "CALLER",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4234,
											"end": 4310,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 4257,
											"end": 4266,
											"name": "DUP9",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4234,
											"end": 4310,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 4234,
											"end": 4310,
											"name": "PUSH",
											"source": 21,
											"value": "C07F1E2FE31C4D90EAE81F76D263D7995AAC043A99D6EE6DE9C0506047F541C2"
										},
										{
											"begin": 4286,
											"end": 4298,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 4300,
											"end": 4309,
											"name": "DUP11",
											"source": 21
										},
										{
											"begin": 4234,
											"end": 4310,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 4234,
											"end": 4310,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 4234,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "119"
										},
										{
											"begin": 4234,
											"end": 4310,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 4234,
											"end": 4310,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 4234,
											"end": 4310,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 4234,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "62"
										},
										{
											"begin": 4234,
											"end": 4310,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4234,
											"end": 4310,
											"name": "tag",
											"source": 21,
											"value": "119"
										},
										{
											"begin": 4234,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4234,
											"end": 4310,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 4234,
											"end": 4310,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 4234,
											"end": 4310,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 4234,
											"end": 4310,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 4234,
											"end": 4310,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 4234,
											"end": 4310,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 4234,
											"end": 4310,
											"name": "LOG4",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1645,
											"end": 1646,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2580,
											"end": 2602,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2580,
											"end": 2602,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3254,
											"end": 4317,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 7545,
											"end": 8274,
											"name": "tag",
											"source": 21,
											"value": "25"
										},
										{
											"begin": 7545,
											"end": 8274,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7741,
											"end": 7757,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 7759,
											"end": 7775,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 7713,
											"end": 7722,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 2574,
											"end": 2620,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "121"
										},
										{
											"begin": 2610,
											"end": 2619,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2574,
											"end": 2609,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "56"
										},
										{
											"begin": 2574,
											"end": 2620,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 2574,
											"end": 2620,
											"name": "tag",
											"source": 17,
											"value": "121"
										},
										{
											"begin": 2574,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7791,
											"end": 7818,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 7821,
											"end": 7830,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7821,
											"end": 7844,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 7821,
											"end": 7844,
											"name": "PUSH",
											"source": 21,
											"value": "99D50D5D"
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "PUSH",
											"source": 21,
											"value": "E0"
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "SHL",
											"source": 21
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "PUSH",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "EXTCODESIZE",
											"source": 21
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "123"
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "tag",
											"source": 21,
											"value": "123"
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "GAS",
											"source": 21
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "STATICCALL",
											"source": 21
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "125"
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "RETURNDATASIZE",
											"source": 21
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "RETURNDATACOPY",
											"source": 21
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "RETURNDATASIZE",
											"source": 21
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "tag",
											"source": 21,
											"value": "125"
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "RETURNDATASIZE",
											"source": 21
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "RETURNDATACOPY",
											"source": 21
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "RETURNDATASIZE",
											"source": 21
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "126"
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "70"
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "tag",
											"source": 21,
											"value": "126"
										},
										{
											"begin": 7821,
											"end": 7846,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7791,
											"end": 7846,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 7791,
											"end": 7846,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7857,
											"end": 7887,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 7904,
											"end": 7914,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 7904,
											"end": 7921,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 7890,
											"end": 7922,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7890,
											"end": 7922,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 7890,
											"end": 7922,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 7890,
											"end": 7922,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 7890,
											"end": 7922,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 7890,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "127"
										},
										{
											"begin": 7890,
											"end": 7922,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 7890,
											"end": 7922,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 7890,
											"end": 7922,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 7890,
											"end": 7922,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 7890,
											"end": 7922,
											"name": "tag",
											"source": 21,
											"value": "127"
										},
										{
											"begin": 7890,
											"end": 7922,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7890,
											"end": 7922,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7890,
											"end": 7922,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 7890,
											"end": 7922,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 7890,
											"end": 7922,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 7890,
											"end": 7922,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 7890,
											"end": 7922,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 7890,
											"end": 7922,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 7890,
											"end": 7922,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 7890,
											"end": 7922,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 7890,
											"end": 7922,
											"name": "MUL",
											"source": 21
										},
										{
											"begin": 7890,
											"end": 7922,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 7890,
											"end": 7922,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 7890,
											"end": 7922,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 7890,
											"end": 7922,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 7890,
											"end": 7922,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 7890,
											"end": 7922,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 7890,
											"end": 7922,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 7890,
											"end": 7922,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 7890,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "128"
										},
										{
											"begin": 7890,
											"end": 7922,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 7890,
											"end": 7922,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 7890,
											"end": 7922,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 7890,
											"end": 7922,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 7890,
											"end": 7922,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 7890,
											"end": 7922,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 7890,
											"end": 7922,
											"name": "MUL",
											"source": 21
										},
										{
											"begin": 7890,
											"end": 7922,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 7890,
											"end": 7922,
											"name": "CALLDATASIZE",
											"source": 21
										},
										{
											"begin": 7890,
											"end": 7922,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 7890,
											"end": 7922,
											"name": "CALLDATACOPY",
											"source": 21
										},
										{
											"begin": 7890,
											"end": 7922,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 7890,
											"end": 7922,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7890,
											"end": 7922,
											"name": "tag",
											"source": 21,
											"value": "128"
										},
										{
											"begin": 7890,
											"end": 7922,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7857,
											"end": 7922,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7938,
											"end": 7947,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 7933,
											"end": 8223,
											"name": "tag",
											"source": 21,
											"value": "129"
										},
										{
											"begin": 7933,
											"end": 8223,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7957,
											"end": 7967,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 7957,
											"end": 7974,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 7953,
											"end": 7954,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 7953,
											"end": 7974,
											"name": "LT",
											"source": 21
										},
										{
											"begin": 7933,
											"end": 8223,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 7933,
											"end": 8223,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "130"
										},
										{
											"begin": 7933,
											"end": 8223,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 8004,
											"end": 8048,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "132"
										},
										{
											"begin": 8034,
											"end": 8044,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 8045,
											"end": 8046,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 8034,
											"end": 8047,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 8034,
											"end": 8047,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 8034,
											"end": 8047,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 8034,
											"end": 8047,
											"name": "LT",
											"source": 21
										},
										{
											"begin": 8034,
											"end": 8047,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "133"
										},
										{
											"begin": 8034,
											"end": 8047,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 8034,
											"end": 8047,
											"name": "INVALID",
											"source": 21
										},
										{
											"begin": 8034,
											"end": 8047,
											"name": "tag",
											"source": 21,
											"value": "133"
										},
										{
											"begin": 8034,
											"end": 8047,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8034,
											"end": 8047,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 8034,
											"end": 8047,
											"name": "MUL",
											"source": 21
										},
										{
											"begin": 8034,
											"end": 8047,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 8034,
											"end": 8047,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 8034,
											"end": 8047,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 8034,
											"end": 8047,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 8004,
											"end": 8013,
											"name": "DUP10",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8004,
											"end": 8033,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 8004,
											"end": 8033,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "76"
										},
										{
											"begin": 8004,
											"end": 8033,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 8004,
											"end": 8048,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 8004,
											"end": 8048,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 8004,
											"end": 8048,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8004,
											"end": 8048,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 8004,
											"end": 8048,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 8004,
											"end": 8048,
											"name": "tag",
											"source": 21,
											"value": "132"
										},
										{
											"begin": 8004,
											"end": 8048,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8003,
											"end": 8048,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 7995,
											"end": 8089,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "134"
										},
										{
											"begin": 7995,
											"end": 8089,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 7995,
											"end": 8089,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 7995,
											"end": 8089,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7995,
											"end": 8089,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 7995,
											"end": 8089,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 7995,
											"end": 8089,
											"name": "PUSH",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 7995,
											"end": 8089,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 7995,
											"end": 8089,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "52"
										},
										{
											"begin": 7995,
											"end": 8089,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 7995,
											"end": 8089,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "79"
										},
										{
											"begin": 7995,
											"end": 8089,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 7995,
											"end": 8089,
											"name": "tag",
											"source": 21,
											"value": "134"
										},
										{
											"begin": 7995,
											"end": 8089,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8123,
											"end": 8212,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "136"
										},
										{
											"begin": 8202,
											"end": 8211,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 8123,
											"end": 8186,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "137"
										},
										{
											"begin": 8123,
											"end": 8132,
											"name": "DUP11",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8123,
											"end": 8159,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 8123,
											"end": 8159,
											"name": "PUSH",
											"source": 21,
											"value": "66CB8D2F"
										},
										{
											"begin": 8160,
											"end": 8170,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 8171,
											"end": 8172,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 8160,
											"end": 8173,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 8160,
											"end": 8173,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 8160,
											"end": 8173,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 8160,
											"end": 8173,
											"name": "LT",
											"source": 21
										},
										{
											"begin": 8160,
											"end": 8173,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "138"
										},
										{
											"begin": 8160,
											"end": 8173,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 8160,
											"end": 8173,
											"name": "INVALID",
											"source": 21
										},
										{
											"begin": 8160,
											"end": 8173,
											"name": "tag",
											"source": 21,
											"value": "138"
										},
										{
											"begin": 8160,
											"end": 8173,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8160,
											"end": 8173,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 8160,
											"end": 8173,
											"name": "MUL",
											"source": 21
										},
										{
											"begin": 8160,
											"end": 8173,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 8160,
											"end": 8173,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 8160,
											"end": 8173,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 8160,
											"end": 8173,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 8123,
											"end": 8174,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 8123,
											"end": 8174,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 8123,
											"end": 8174,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 8123,
											"end": 8174,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8123,
											"end": 8174,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 8123,
											"end": 8174,
											"name": "PUSH",
											"source": 21,
											"value": "E0"
										},
										{
											"begin": 8123,
											"end": 8174,
											"name": "SHL",
											"source": 21
										},
										{
											"begin": 8123,
											"end": 8174,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 8123,
											"end": 8174,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 8123,
											"end": 8174,
											"name": "PUSH",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 8123,
											"end": 8174,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 8123,
											"end": 8174,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "81"
										},
										{
											"begin": 8123,
											"end": 8174,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 8123,
											"end": 8174,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 8123,
											"end": 8174,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "82"
										},
										{
											"begin": 8123,
											"end": 8174,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 8123,
											"end": 8186,
											"name": "tag",
											"source": 21,
											"value": "137"
										},
										{
											"begin": 8123,
											"end": 8186,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8123,
											"end": 8201,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 8123,
											"end": 8212,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8123,
											"end": 8201,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "144"
										},
										{
											"begin": 8123,
											"end": 8212,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 8123,
											"end": 8212,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 8123,
											"end": 8212,
											"name": "tag",
											"source": 21,
											"value": "136"
										},
										{
											"begin": 8123,
											"end": 8212,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8104,
											"end": 8117,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 8118,
											"end": 8119,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 8104,
											"end": 8120,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 8104,
											"end": 8120,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 8104,
											"end": 8120,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 8104,
											"end": 8120,
											"name": "LT",
											"source": 21
										},
										{
											"begin": 8104,
											"end": 8120,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "145"
										},
										{
											"begin": 8104,
											"end": 8120,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 8104,
											"end": 8120,
											"name": "INVALID",
											"source": 21
										},
										{
											"begin": 8104,
											"end": 8120,
											"name": "tag",
											"source": 21,
											"value": "145"
										},
										{
											"begin": 8104,
											"end": 8120,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8104,
											"end": 8120,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 8104,
											"end": 8120,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 8104,
											"end": 8120,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 8104,
											"end": 8120,
											"name": "MUL",
											"source": 21
										},
										{
											"begin": 8104,
											"end": 8120,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 8104,
											"end": 8120,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 8104,
											"end": 8120,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 8104,
											"end": 8120,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 8104,
											"end": 8120,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 8104,
											"end": 8212,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 7976,
											"end": 7979,
											"name": "PUSH",
											"source": 21,
											"value": "1"
										},
										{
											"begin": 7976,
											"end": 7979,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 7933,
											"end": 8223,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "129"
										},
										{
											"begin": 7933,
											"end": 8223,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 7933,
											"end": 8223,
											"name": "tag",
											"source": 21,
											"value": "130"
										},
										{
											"begin": 7933,
											"end": 8223,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8241,
											"end": 8251,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 8241,
											"end": 8251,
											"name": "SWAP7",
											"source": 21
										},
										{
											"begin": 8241,
											"end": 8251,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 8241,
											"end": 8251,
											"name": "SWAP6",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7545,
											"end": 8274,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7545,
											"end": 8274,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 6939,
											"end": 7056,
											"name": "tag",
											"source": 21,
											"value": "29"
										},
										{
											"begin": 6939,
											"end": 7056,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6991,
											"end": 7049,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 6991,
											"end": 7049,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6991,
											"end": 7049,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 6991,
											"end": 7049,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 6991,
											"end": 7049,
											"name": "PUSH",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 6991,
											"end": 7049,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6991,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "52"
										},
										{
											"begin": 6991,
											"end": 7049,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 6991,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "148"
										},
										{
											"begin": 6991,
											"end": 7049,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2419,
											"end": 2488,
											"name": "tag",
											"source": 21,
											"value": "33"
										},
										{
											"begin": 2419,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2419,
											"end": 2488,
											"name": "PUSH",
											"source": 21,
											"value": "2"
										},
										{
											"begin": 2419,
											"end": 2488,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 2419,
											"end": 2488,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 2419,
											"end": 2488,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2419,
											"end": 2488,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 2419,
											"end": 2488,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 2419,
											"end": 2488,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 2419,
											"end": 2488,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 2419,
											"end": 2488,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 2419,
											"end": 2488,
											"name": "KECCAK256",
											"source": 21
										},
										{
											"begin": 2419,
											"end": 2488,
											"name": "SLOAD",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2419,
											"end": 2488,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 2419,
											"end": 2488,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 2419,
											"end": 2488,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 2156,
											"end": 2185,
											"name": "tag",
											"source": 17,
											"value": "37"
										},
										{
											"begin": 2156,
											"end": 2185,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2156,
											"end": 2185,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2156,
											"end": 2185,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2156,
											"end": 2185,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2156,
											"end": 2185,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2156,
											"end": 2185,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 7093,
											"end": 7268,
											"name": "tag",
											"source": 17,
											"value": "42"
										},
										{
											"begin": 7093,
											"end": 7268,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7196,
											"end": 7228,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "150"
										},
										{
											"begin": 7209,
											"end": 7218,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7220,
											"end": 7227,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7196,
											"end": 7208,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "151"
										},
										{
											"begin": 7196,
											"end": 7228,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 7196,
											"end": 7228,
											"name": "tag",
											"source": 17,
											"value": "150"
										},
										{
											"begin": 7196,
											"end": 7228,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7188,
											"end": 7261,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "152"
										},
										{
											"begin": 7188,
											"end": 7261,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 7188,
											"end": 7261,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 7188,
											"end": 7261,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7188,
											"end": 7261,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7188,
											"end": 7261,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7188,
											"end": 7261,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 7188,
											"end": 7261,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7188,
											"end": 7261,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "52"
										},
										{
											"begin": 7188,
											"end": 7261,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7188,
											"end": 7261,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "154"
										},
										{
											"begin": 7188,
											"end": 7261,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7188,
											"end": 7261,
											"name": "tag",
											"source": 17,
											"value": "152"
										},
										{
											"begin": 7188,
											"end": 7261,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7093,
											"end": 7268,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7093,
											"end": 7268,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7093,
											"end": 7268,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 8078,
											"end": 8345,
											"name": "tag",
											"source": 17,
											"value": "45"
										},
										{
											"begin": 8078,
											"end": 8345,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8172,
											"end": 8182,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8172,
											"end": 8182,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1D3AF8FB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8172,
											"end": 8182,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8172,
											"end": 8182,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 8172,
											"end": 8182,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 8172,
											"end": 8182,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8172,
											"end": 8188,
											"name": "PUSH",
											"source": 17,
											"value": "74EBE3EC"
										},
										{
											"begin": 8172,
											"end": 8188,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "156"
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8197,
											"end": 8206,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 8197,
											"end": 8206,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "82"
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "tag",
											"source": 17,
											"value": "156"
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "EXTCODESIZE",
											"source": 17
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "157"
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "tag",
											"source": 17,
											"value": "157"
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "GAS",
											"source": 17
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "STATICCALL",
											"source": 17
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "159"
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "RETURNDATACOPY",
											"source": 17
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "tag",
											"source": 17,
											"value": "159"
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "160"
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "161"
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "tag",
											"source": 17,
											"value": "160"
										},
										{
											"begin": 8172,
											"end": 8208,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8164,
											"end": 8248,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "162"
										},
										{
											"begin": 8164,
											"end": 8248,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 8164,
											"end": 8248,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 8164,
											"end": 8248,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8164,
											"end": 8248,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8164,
											"end": 8248,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8164,
											"end": 8248,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 8164,
											"end": 8248,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8164,
											"end": 8248,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "52"
										},
										{
											"begin": 8164,
											"end": 8248,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8164,
											"end": 8248,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "164"
										},
										{
											"begin": 8164,
											"end": 8248,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8164,
											"end": 8248,
											"name": "tag",
											"source": 17,
											"value": "162"
										},
										{
											"begin": 8164,
											"end": 8248,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8266,
											"end": 8303,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "165"
										},
										{
											"begin": 8293,
											"end": 8302,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8266,
											"end": 8292,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "166"
										},
										{
											"begin": 8266,
											"end": 8303,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 8266,
											"end": 8303,
											"name": "tag",
											"source": 17,
											"value": "165"
										},
										{
											"begin": 8266,
											"end": 8303,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8258,
											"end": 8338,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "167"
										},
										{
											"begin": 8258,
											"end": 8338,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 8258,
											"end": 8338,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 8258,
											"end": 8338,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8258,
											"end": 8338,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8258,
											"end": 8338,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8258,
											"end": 8338,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 8258,
											"end": 8338,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8258,
											"end": 8338,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "52"
										},
										{
											"begin": 8258,
											"end": 8338,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8258,
											"end": 8338,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "169"
										},
										{
											"begin": 8258,
											"end": 8338,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8258,
											"end": 8338,
											"name": "tag",
											"source": 17,
											"value": "167"
										},
										{
											"begin": 8258,
											"end": 8338,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8078,
											"end": 8345,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8078,
											"end": 8345,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 7336,
											"end": 7521,
											"name": "tag",
											"source": 17,
											"value": "56"
										},
										{
											"begin": 7336,
											"end": 7521,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7434,
											"end": 7469,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "171"
										},
										{
											"begin": 7459,
											"end": 7468,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7434,
											"end": 7458,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "172"
										},
										{
											"begin": 7434,
											"end": 7469,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 7434,
											"end": 7469,
											"name": "tag",
											"source": 17,
											"value": "171"
										},
										{
											"begin": 7434,
											"end": 7469,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7426,
											"end": 7514,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "167"
										},
										{
											"begin": 7426,
											"end": 7514,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 7426,
											"end": 7514,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 7426,
											"end": 7514,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7426,
											"end": 7514,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7426,
											"end": 7514,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7426,
											"end": 7514,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 7426,
											"end": 7514,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7426,
											"end": 7514,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "52"
										},
										{
											"begin": 7426,
											"end": 7514,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7426,
											"end": 7514,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "175"
										},
										{
											"begin": 7426,
											"end": 7514,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2048,
											"end": 2229,
											"name": "tag",
											"source": 18,
											"value": "76"
										},
										{
											"begin": 2048,
											"end": 2229,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2140,
											"end": 2144,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2221,
											"end": 2222,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2163,
											"end": 2172,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2163,
											"end": 2199,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2163,
											"end": 2199,
											"name": "PUSH",
											"source": 18,
											"value": "A7BDAD03"
										},
										{
											"begin": 2200,
											"end": 2210,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "177"
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "82"
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "tag",
											"source": 18,
											"value": "177"
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "EXTCODESIZE",
											"source": 18
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "178"
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "tag",
											"source": 18,
											"value": "178"
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "GAS",
											"source": 18
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "STATICCALL",
											"source": 18
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "180"
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "RETURNDATACOPY",
											"source": 18
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "tag",
											"source": 18,
											"value": "180"
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "RETURNDATACOPY",
											"source": 18
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "181"
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "70"
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "tag",
											"source": 18,
											"value": "181"
										},
										{
											"begin": 2163,
											"end": 2211,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2163,
											"end": 2218,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 2156,
											"end": 2222,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2156,
											"end": 2222,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2048,
											"end": 2229,
											"name": "tag",
											"source": 18,
											"value": "176"
										},
										{
											"begin": 2048,
											"end": 2229,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2048,
											"end": 2229,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2048,
											"end": 2229,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2048,
											"end": 2229,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2048,
											"end": 2229,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2048,
											"end": 2229,
											"name": "JUMP",
											"source": 18,
											"value": "[out]"
										},
										{
											"begin": 3282,
											"end": 3450,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 3282,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3338,
											"end": 3345,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3374,
											"end": 3375,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3365,
											"end": 3370,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3365,
											"end": 3375,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3365,
											"end": 3375,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3357,
											"end": 3412,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 3357,
											"end": 3412,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3357,
											"end": 3412,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3357,
											"end": 3412,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3357,
											"end": 3412,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3357,
											"end": 3412,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3357,
											"end": 3412,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3357,
											"end": 3412,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3357,
											"end": 3412,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 3357,
											"end": 3412,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3357,
											"end": 3412,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 3357,
											"end": 3412,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3357,
											"end": 3412,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 3357,
											"end": 3412,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3437,
											"end": 3442,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3282,
											"end": 3450,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3026,
											"end": 3150,
											"name": "tag",
											"source": 19,
											"value": "90"
										},
										{
											"begin": 3026,
											"end": 3150,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3091,
											"end": 3098,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3117,
											"end": 3143,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "187"
										},
										{
											"begin": 1535,
											"end": 1543,
											"name": "PUSH",
											"source": 19,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3117,
											"end": 3125,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "188"
										},
										{
											"begin": 3117,
											"end": 3118,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 3123,
											"end": 3124,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 3117,
											"end": 3125,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3117,
											"end": 3122,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "189"
										},
										{
											"begin": 3117,
											"end": 3125,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 3117,
											"end": 3125,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 3117,
											"end": 3125,
											"name": "tag",
											"source": 19,
											"value": "188"
										},
										{
											"begin": 3117,
											"end": 3125,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3117,
											"end": 3129,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3117,
											"end": 3143,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3117,
											"end": 3129,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "190"
										},
										{
											"begin": 3117,
											"end": 3143,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 3117,
											"end": 3143,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 3117,
											"end": 3143,
											"name": "tag",
											"source": 19,
											"value": "187"
										},
										{
											"begin": 3117,
											"end": 3143,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3110,
											"end": 3143,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 3026,
											"end": 3150,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3026,
											"end": 3150,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 2913,
											"end": 3693,
											"name": "tag",
											"source": 16,
											"value": "92"
										},
										{
											"begin": 2913,
											"end": 3693,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3085,
											"end": 3098,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3085,
											"end": 3098,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3081,
											"end": 3687,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "192"
										},
										{
											"begin": 3081,
											"end": 3687,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3180,
											"end": 3203,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3180,
											"end": 3203,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3206,
											"end": 3230,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 3206,
											"end": 3230,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3206,
											"end": 3230,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3206,
											"end": 3230,
											"name": "PUSH",
											"source": 16,
											"value": "70A08231"
										},
										{
											"begin": 3206,
											"end": 3230,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "193"
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3239,
											"end": 3248,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 3239,
											"end": 3248,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "82"
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "tag",
											"source": 16,
											"value": "193"
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "EXTCODESIZE",
											"source": 16
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "194"
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "tag",
											"source": 16,
											"value": "194"
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "GAS",
											"source": 16
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "STATICCALL",
											"source": 16
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "196"
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "RETURNDATACOPY",
											"source": 16
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "tag",
											"source": 16,
											"value": "196"
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "197"
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "87"
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "tag",
											"source": 16,
											"value": "197"
										},
										{
											"begin": 3206,
											"end": 3250,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3180,
											"end": 3250,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3180,
											"end": 3250,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3265,
											"end": 3321,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "199"
										},
										{
											"begin": 3287,
											"end": 3296,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 3298,
											"end": 3304,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 3306,
											"end": 3309,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 3311,
											"end": 3320,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 3265,
											"end": 3286,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "200"
										},
										{
											"begin": 3265,
											"end": 3321,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 3265,
											"end": 3321,
											"name": "tag",
											"source": 16,
											"value": "199"
										},
										{
											"begin": 3265,
											"end": 3321,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3401,
											"end": 3419,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3401,
											"end": 3419,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3422,
											"end": 3446,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 3422,
											"end": 3446,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3422,
											"end": 3446,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3422,
											"end": 3446,
											"name": "PUSH",
											"source": 16,
											"value": "70A08231"
										},
										{
											"begin": 3422,
											"end": 3446,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "201"
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3455,
											"end": 3464,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 3455,
											"end": 3464,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "82"
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "tag",
											"source": 16,
											"value": "201"
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "EXTCODESIZE",
											"source": 16
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "202"
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "tag",
											"source": 16,
											"value": "202"
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "GAS",
											"source": 16
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "STATICCALL",
											"source": 16
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "204"
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "RETURNDATACOPY",
											"source": 16
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "tag",
											"source": 16,
											"value": "204"
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "205"
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "87"
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "tag",
											"source": 16,
											"value": "205"
										},
										{
											"begin": 3422,
											"end": 3466,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3401,
											"end": 3466,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3583,
											"end": 3613,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "206"
										},
										{
											"begin": 3583,
											"end": 3598,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3603,
											"end": 3612,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3583,
											"end": 3613,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3583,
											"end": 3602,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "207"
										},
										{
											"begin": 3583,
											"end": 3613,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3583,
											"end": 3613,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 3583,
											"end": 3613,
											"name": "tag",
											"source": 16,
											"value": "206"
										},
										{
											"begin": 3583,
											"end": 3613,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3569,
											"end": 3579,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3569,
											"end": 3613,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 3544,
											"end": 3676,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "208"
										},
										{
											"begin": 3544,
											"end": 3676,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3544,
											"end": 3676,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3544,
											"end": 3676,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3544,
											"end": 3676,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3544,
											"end": 3676,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3544,
											"end": 3676,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 3544,
											"end": 3676,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3544,
											"end": 3676,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "52"
										},
										{
											"begin": 3544,
											"end": 3676,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3544,
											"end": 3676,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "210"
										},
										{
											"begin": 3544,
											"end": 3676,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3544,
											"end": 3676,
											"name": "tag",
											"source": 16,
											"value": "208"
										},
										{
											"begin": 3544,
											"end": 3676,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3081,
											"end": 3687,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3081,
											"end": 3687,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3081,
											"end": 3687,
											"name": "tag",
											"source": 16,
											"value": "192"
										},
										{
											"begin": 3081,
											"end": 3687,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2913,
											"end": 3693,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2913,
											"end": 3693,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2913,
											"end": 3693,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2913,
											"end": 3693,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2913,
											"end": 3693,
											"name": "JUMP",
											"source": 16,
											"value": "[out]"
										},
										{
											"begin": 8546,
											"end": 9023,
											"name": "tag",
											"source": 21,
											"value": "105"
										},
										{
											"begin": 8546,
											"end": 9023,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8774,
											"end": 8804,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 8774,
											"end": 8804,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 8774,
											"end": 8804,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 8715,
											"end": 8722,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 8774,
											"end": 8804,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 8774,
											"end": 8804,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 8774,
											"end": 8804,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 8774,
											"end": 8793,
											"name": "PUSH",
											"source": 21,
											"value": "2"
										},
										{
											"begin": 8774,
											"end": 8804,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 8774,
											"end": 8804,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 8774,
											"end": 8804,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 8774,
											"end": 8804,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 8774,
											"end": 8804,
											"name": "KECCAK256",
											"source": 21
										},
										{
											"begin": 8774,
											"end": 8804,
											"name": "SLOAD",
											"source": 21
										},
										{
											"begin": 8715,
											"end": 8722,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 8715,
											"end": 8722,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 8774,
											"end": 8804,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 8818,
											"end": 8853,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 8818,
											"end": 8853,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 8814,
											"end": 8989,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "212"
										},
										{
											"begin": 8814,
											"end": 8989,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 8869,
											"end": 8936,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 8869,
											"end": 8936,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0458083"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8869,
											"end": 8936,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 8869,
											"end": 8936,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8869,
											"end": 8900,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 8869,
											"end": 8900,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 8869,
											"end": 8900,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 8869,
											"end": 8900,
											"name": "PUSH",
											"source": 21,
											"value": "A0458083"
										},
										{
											"begin": 8869,
											"end": 8900,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 8869,
											"end": 8936,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "213"
										},
										{
											"begin": 8869,
											"end": 8936,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 8901,
											"end": 8910,
											"name": "DUP10",
											"source": 21
										},
										{
											"begin": 8901,
											"end": 8910,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 8912,
											"end": 8921,
											"name": "DUP10",
											"source": 21
										},
										{
											"begin": 8912,
											"end": 8921,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 8923,
											"end": 8930,
											"name": "DUP10",
											"source": 21
										},
										{
											"begin": 8923,
											"end": 8930,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 8932,
											"end": 8935,
											"name": "DUP10",
											"source": 21
										},
										{
											"begin": 8932,
											"end": 8935,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 8869,
											"end": 8936,
											"name": "PUSH",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 8869,
											"end": 8936,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 8869,
											"end": 8936,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "214"
										},
										{
											"begin": 8869,
											"end": 8936,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 8869,
											"end": 8936,
											"name": "tag",
											"source": 21,
											"value": "213"
										},
										{
											"begin": 8869,
											"end": 8936,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8869,
											"end": 8936,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 8869,
											"end": 8936,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 8869,
											"end": 8936,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 8869,
											"end": 8936,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 8869,
											"end": 8936,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 8869,
											"end": 8936,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 8869,
											"end": 8936,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 8869,
											"end": 8936,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 8869,
											"end": 8936,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 8869,
											"end": 8936,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 8869,
											"end": 8936,
											"name": "EXTCODESIZE",
											"source": 21
										},
										{
											"begin": 8869,
											"end": 8936,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 8869,
											"end": 8936,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 8869,
											"end": 8936,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 8869,
											"end": 8936,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "215"
										},
										{
											"begin": 8869,
											"end": 8936,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 8869,
											"end": 8936,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 8869,
											"end": 8936,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 8869,
											"end": 8936,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 8869,
											"end": 8936,
											"name": "tag",
											"source": 21,
											"value": "215"
										},
										{
											"begin": 8869,
											"end": 8936,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8869,
											"end": 8936,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8869,
											"end": 8936,
											"name": "GAS",
											"source": 21
										},
										{
											"begin": 8869,
											"end": 8936,
											"name": "CALL",
											"source": 21
										},
										{
											"begin": 8869,
											"end": 8936,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 8869,
											"end": 8936,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 8869,
											"end": 8936,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 8869,
											"end": 8936,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "217"
										},
										{
											"begin": 8869,
											"end": 8936,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 8869,
											"end": 8936,
											"name": "RETURNDATASIZE",
											"source": 21
										},
										{
											"begin": 8869,
											"end": 8936,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 8869,
											"end": 8936,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 8869,
											"end": 8936,
											"name": "RETURNDATACOPY",
											"source": 21
										},
										{
											"begin": 8869,
											"end": 8936,
											"name": "RETURNDATASIZE",
											"source": 21
										},
										{
											"begin": 8869,
											"end": 8936,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 8869,
											"end": 8936,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 8869,
											"end": 8936,
											"name": "tag",
											"source": 21,
											"value": "217"
										},
										{
											"begin": 8869,
											"end": 8936,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8869,
											"end": 8936,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8869,
											"end": 8936,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8869,
											"end": 8936,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8869,
											"end": 8936,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8965,
											"end": 8977,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 8950,
											"end": 8978,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 8950,
											"end": 8978,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8950,
											"end": 8978,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8950,
											"end": 8978,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "211"
										},
										{
											"begin": 8950,
											"end": 8978,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 8814,
											"end": 8989,
											"name": "tag",
											"source": 21,
											"value": "212"
										},
										{
											"begin": 8814,
											"end": 8989,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9014,
											"end": 9015,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 8999,
											"end": 9016,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 8999,
											"end": 9016,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8999,
											"end": 9016,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8546,
											"end": 9023,
											"name": "tag",
											"source": 21,
											"value": "211"
										},
										{
											"begin": 8546,
											"end": 9023,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8546,
											"end": 9023,
											"name": "SWAP5",
											"source": 21
										},
										{
											"begin": 8546,
											"end": 9023,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 8546,
											"end": 9023,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8546,
											"end": 9023,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8546,
											"end": 9023,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8546,
											"end": 9023,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8546,
											"end": 9023,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 3815,
											"end": 3982,
											"name": "tag",
											"source": 17,
											"value": "113"
										},
										{
											"begin": 3815,
											"end": 3982,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3918,
											"end": 3975,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "192"
										},
										{
											"begin": 3945,
											"end": 3951,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3953,
											"end": 3958,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3960,
											"end": 3963,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3965,
											"end": 3974,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3918,
											"end": 3944,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "220"
										},
										{
											"begin": 3918,
											"end": 3975,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 3653,
											"end": 3859,
											"name": "tag",
											"source": 19,
											"value": "144"
										},
										{
											"begin": 3653,
											"end": 3859,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3722,
											"end": 3729,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3745,
											"end": 3751,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3745,
											"end": 3751,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 3745,
											"end": 3751,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3745,
											"end": 3761,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "222"
										},
										{
											"begin": 3745,
											"end": 3761,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3755,
											"end": 3761,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3755,
											"end": 3761,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 3745,
											"end": 3761,
											"name": "tag",
											"source": 19,
											"value": "222"
										},
										{
											"begin": 3745,
											"end": 3761,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3741,
											"end": 3796,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 3741,
											"end": 3796,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "223"
										},
										{
											"begin": 3741,
											"end": 3796,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3784,
											"end": 3785,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3777,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "176"
										},
										{
											"begin": 3777,
											"end": 3785,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3741,
											"end": 3796,
											"name": "tag",
											"source": 19,
											"value": "223"
										},
										{
											"begin": 3741,
											"end": 3796,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3812,
											"end": 3852,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "187"
										},
										{
											"begin": 3850,
											"end": 3851,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 3812,
											"end": 3845,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "225"
										},
										{
											"begin": 1535,
											"end": 1543,
											"name": "PUSH",
											"source": 19,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3812,
											"end": 3827,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "188"
										},
										{
											"begin": 3850,
											"end": 3851,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 3812,
											"end": 3820,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "227"
										},
										{
											"begin": 3812,
											"end": 3813,
											"name": "DUP10",
											"source": 19
										},
										{
											"begin": 3818,
											"end": 3819,
											"name": "DUP10",
											"source": 19
										},
										{
											"begin": 3812,
											"end": 3820,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3812,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "189"
										},
										{
											"begin": 3812,
											"end": 3820,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 3812,
											"end": 3820,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 3812,
											"end": 3820,
											"name": "tag",
											"source": 19,
											"value": "227"
										},
										{
											"begin": 3812,
											"end": 3820,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3812,
											"end": 3824,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3812,
											"end": 3827,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3812,
											"end": 3824,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "207"
										},
										{
											"begin": 3812,
											"end": 3827,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 3812,
											"end": 3827,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 3812,
											"end": 3845,
											"name": "tag",
											"source": 19,
											"value": "225"
										},
										{
											"begin": 3812,
											"end": 3845,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3812,
											"end": 3849,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3812,
											"end": 3852,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3812,
											"end": 3849,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "228"
										},
										{
											"begin": 3812,
											"end": 3852,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 3812,
											"end": 3852,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 5871,
											"end": 6015,
											"name": "tag",
											"source": 17,
											"value": "151"
										},
										{
											"begin": 5871,
											"end": 6015,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5954,
											"end": 5958,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6000,
											"end": 6008,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5977,
											"end": 6008,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5977,
											"end": 5986,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5977,
											"end": 5994,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5977,
											"end": 5994,
											"name": "PUSH",
											"source": 17,
											"value": "481C6A75"
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "EXTCODESIZE",
											"source": 17
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "230"
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "tag",
											"source": 17,
											"value": "230"
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "GAS",
											"source": 17
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "STATICCALL",
											"source": 17
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "232"
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "RETURNDATACOPY",
											"source": 17
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "tag",
											"source": 17,
											"value": "232"
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "233"
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "234"
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "tag",
											"source": 17,
											"value": "233"
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5977,
											"end": 6008,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5977,
											"end": 6008,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 5977,
											"end": 6008,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 5871,
											"end": 6015,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5871,
											"end": 6015,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 5639,
											"end": 5788,
											"name": "tag",
											"source": 17,
											"value": "166"
										},
										{
											"begin": 5639,
											"end": 5788,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "53BAE5F7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5718,
											"end": 5722,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5718,
											"end": 5722,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5741,
											"end": 5766,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5741,
											"end": 5766,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5741,
											"end": 5766,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5741,
											"end": 5766,
											"name": "PUSH",
											"source": 17,
											"value": "53BAE5F7"
										},
										{
											"begin": 5741,
											"end": 5766,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "236"
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5775,
											"end": 5779,
											"name": "ADDRESS",
											"source": 17
										},
										{
											"begin": 5775,
											"end": 5779,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "82"
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "tag",
											"source": 17,
											"value": "236"
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "EXTCODESIZE",
											"source": 17
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "237"
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "tag",
											"source": 17,
											"value": "237"
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "GAS",
											"source": 17
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "STATICCALL",
											"source": 17
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "239"
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "RETURNDATACOPY",
											"source": 17
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "tag",
											"source": 17,
											"value": "239"
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "176"
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "161"
										},
										{
											"begin": 5741,
											"end": 5781,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6152,
											"end": 6355,
											"name": "tag",
											"source": 17,
											"value": "172"
										},
										{
											"begin": 6152,
											"end": 6355,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6229,
											"end": 6233,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6252,
											"end": 6262,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6252,
											"end": 6262,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1D3AF8FB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6252,
											"end": 6262,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6252,
											"end": 6262,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6252,
											"end": 6262,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 6252,
											"end": 6262,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6252,
											"end": 6268,
											"name": "PUSH",
											"source": 17,
											"value": "74EBE3EC"
										},
										{
											"begin": 6252,
											"end": 6268,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "242"
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6277,
											"end": 6286,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 6277,
											"end": 6286,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "82"
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "tag",
											"source": 17,
											"value": "242"
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "EXTCODESIZE",
											"source": 17
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "243"
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "tag",
											"source": 17,
											"value": "243"
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "GAS",
											"source": 17
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "STATICCALL",
											"source": 17
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "245"
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "RETURNDATACOPY",
											"source": 17
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "tag",
											"source": 17,
											"value": "245"
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "246"
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "161"
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "tag",
											"source": 17,
											"value": "246"
										},
										{
											"begin": 6252,
											"end": 6288,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6252,
											"end": 6348,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6252,
											"end": 6348,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6252,
											"end": 6348,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "176"
										},
										{
											"begin": 6252,
											"end": 6348,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6304,
											"end": 6348,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 6304,
											"end": 6348,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "35FC6C9F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6304,
											"end": 6348,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6304,
											"end": 6348,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6304,
											"end": 6333,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6304,
											"end": 6333,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 6304,
											"end": 6333,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6304,
											"end": 6333,
											"name": "PUSH",
											"source": 17,
											"value": "D7F1B27C"
										},
										{
											"begin": 6304,
											"end": 6333,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6304,
											"end": 6348,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "236"
										},
										{
											"begin": 6304,
											"end": 6348,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6342,
											"end": 6346,
											"name": "ADDRESS",
											"source": 17
										},
										{
											"begin": 6342,
											"end": 6346,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6304,
											"end": 6348,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 6304,
											"end": 6348,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6304,
											"end": 6348,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "82"
										},
										{
											"begin": 6304,
											"end": 6348,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3596,
											"end": 3603,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3619,
											"end": 3625,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3615,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 3615,
											"end": 3635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3634,
											"end": 3635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3627,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 3627,
											"end": 3635,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3615,
											"end": 3635,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 3615,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3657,
											"end": 3662,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3657,
											"end": 3662,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3657,
											"end": 3662,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3661,
											"end": 3662,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3657,
											"end": 3658,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3657,
											"end": 3662,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3657,
											"end": 3658,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3680,
											"end": 3690,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4217,
											"end": 4367,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 4217,
											"end": 4367,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4275,
											"end": 4282,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4306,
											"end": 4307,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4303,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4307,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4359,
											"end": 4360,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4355,
											"end": 4356,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4217,
											"end": 4367,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4217,
											"end": 4367,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2138,
											"end": 2493,
											"name": "tag",
											"source": 16,
											"value": "200"
										},
										{
											"begin": 2138,
											"end": 2493,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2304,
											"end": 2317,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2304,
											"end": 2317,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2300,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "192"
										},
										{
											"begin": 2300,
											"end": 2487,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2333,
											"end": 2354,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 2410,
											"end": 2413,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2415,
											"end": 2424,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2357,
											"end": 2425,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2357,
											"end": 2425,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2357,
											"end": 2425,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 2357,
											"end": 2425,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2357,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "266"
										},
										{
											"begin": 2357,
											"end": 2425,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2357,
											"end": 2425,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2357,
											"end": 2425,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2357,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "62"
										},
										{
											"begin": 2357,
											"end": 2425,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2357,
											"end": 2425,
											"name": "tag",
											"source": 16,
											"value": "266"
										},
										{
											"begin": 2357,
											"end": 2425,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2357,
											"end": 2425,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2357,
											"end": 2425,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2357,
											"end": 2425,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2357,
											"end": 2425,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2357,
											"end": 2425,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2357,
											"end": 2425,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2357,
											"end": 2425,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2357,
											"end": 2425,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2357,
											"end": 2425,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2357,
											"end": 2425,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2357,
											"end": 2425,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2357,
											"end": 2425,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2357,
											"end": 2425,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2357,
											"end": 2425,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2357,
											"end": 2425,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2357,
											"end": 2425,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2357,
											"end": 2425,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2357,
											"end": 2425,
											"name": "AND",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2357,
											"end": 2425,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 2357,
											"end": 2425,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2357,
											"end": 2425,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "47B78199"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2357,
											"end": 2425,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2357,
											"end": 2425,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2439,
											"end": 2455,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 2439,
											"end": 2455,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2439,
											"end": 2455,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2439,
											"end": 2455,
											"name": "PUSH",
											"source": 16,
											"value": "8F6F0332"
										},
										{
											"begin": 2439,
											"end": 2455,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "267"
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2456,
											"end": 2462,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 2456,
											"end": 2462,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 2357,
											"end": 2425,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 2357,
											"end": 2425,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "268"
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "tag",
											"source": 16,
											"value": "267"
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "EXTCODESIZE",
											"source": 16
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "269"
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "tag",
											"source": 16,
											"value": "269"
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "GAS",
											"source": 16
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "CALL",
											"source": 16
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "271"
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "RETURNDATACOPY",
											"source": 16
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "tag",
											"source": 16,
											"value": "271"
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "RETURNDATACOPY",
											"source": 16
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "208"
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "273"
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3201,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3226,
											"end": 3227,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3221,
											"end": 3222,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3221,
											"end": 3227,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3221,
											"end": 3227,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3279,
											"end": 3284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3279,
											"end": 3284,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3279,
											"end": 3284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1582,
											"end": 2323,
											"name": "tag",
											"source": 15,
											"value": "220"
										},
										{
											"begin": 1582,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1812,
											"end": 1825,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1812,
											"end": 1825,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1808,
											"end": 2317,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "192"
										},
										{
											"begin": 1808,
											"end": 2317,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1841,
											"end": 1864,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1841,
											"end": 1864,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1867,
											"end": 1883,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 1867,
											"end": 1883,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1867,
											"end": 1883,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1867,
											"end": 1883,
											"name": "PUSH",
											"source": 15,
											"value": "70A08231"
										},
										{
											"begin": 1867,
											"end": 1883,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "280"
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1884,
											"end": 1887,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 1884,
											"end": 1887,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "82"
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "tag",
											"source": 15,
											"value": "280"
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "EXTCODESIZE",
											"source": 15
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "281"
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "tag",
											"source": 15,
											"value": "281"
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "GAS",
											"source": 15
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "STATICCALL",
											"source": 15
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "283"
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "RETURNDATACOPY",
											"source": 15
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "tag",
											"source": 15,
											"value": "283"
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "284"
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "87"
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "tag",
											"source": 15,
											"value": "284"
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1841,
											"end": 1888,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1841,
											"end": 1888,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1903,
											"end": 2038,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "285"
										},
										{
											"begin": 1947,
											"end": 1953,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1971,
											"end": 1976,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1994,
											"end": 1997,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2015,
											"end": 2024,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1903,
											"end": 1929,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "286"
										},
										{
											"begin": 1903,
											"end": 2038,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1903,
											"end": 2038,
											"name": "tag",
											"source": 15,
											"value": "285"
										},
										{
											"begin": 1903,
											"end": 2038,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2053,
											"end": 2071,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2071,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2074,
											"end": 2090,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 2074,
											"end": 2090,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2074,
											"end": 2090,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2074,
											"end": 2090,
											"name": "PUSH",
											"source": 15,
											"value": "70A08231"
										},
										{
											"begin": 2074,
											"end": 2090,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "287"
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2091,
											"end": 2094,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 2091,
											"end": 2094,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "82"
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "tag",
											"source": 15,
											"value": "287"
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "EXTCODESIZE",
											"source": 15
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "288"
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "tag",
											"source": 15,
											"value": "288"
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "GAS",
											"source": 15
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "STATICCALL",
											"source": 15
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "290"
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "RETURNDATACOPY",
											"source": 15
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "tag",
											"source": 15,
											"value": "290"
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "291"
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "87"
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "tag",
											"source": 15,
											"value": "291"
										},
										{
											"begin": 2074,
											"end": 2095,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2053,
											"end": 2095,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2213,
											"end": 2243,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "206"
										},
										{
											"begin": 2213,
											"end": 2228,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2233,
											"end": 2242,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2213,
											"end": 2243,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2213,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "228"
										},
										{
											"begin": 2213,
											"end": 2243,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2213,
											"end": 2243,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2748,
											"end": 2755,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2779,
											"end": 2784,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2779,
											"end": 2784,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2779,
											"end": 2784,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 885,
											"end": 1088,
											"name": "tag",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 885,
											"end": 1088,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 985,
											"end": 1081,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 1005,
											"end": 1010,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1062,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 1035,
											"end": 1062,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1035,
											"end": 1062,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1064,
											"end": 1068,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1070,
											"end": 1072,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1074,
											"end": 1079,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "301"
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "tag",
											"source": 3,
											"value": "301"
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3386,
											"end": 3409,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "305"
										},
										{
											"begin": 3440,
											"end": 3444,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 3,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3420,
											"end": 3425,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3412,
											"end": 3439,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3412,
											"end": 3439,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "306"
										},
										{
											"begin": 3412,
											"end": 3439,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "tag",
											"source": 3,
											"value": "305"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3495,
											"end": 3512,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3495,
											"end": 3512,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3386,
											"end": 3481,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3386,
											"end": 3481,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3495,
											"end": 3516,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3491,
											"end": 3712,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "309"
										},
										{
											"begin": 3491,
											"end": 3712,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3635,
											"end": 3645,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "308"
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "tag",
											"source": 3,
											"value": "308"
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "309"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "311"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "tag",
											"source": 3,
											"value": "309"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2967,
											"end": 3718,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2967,
											"end": 3718,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2967,
											"end": 3718,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2967,
											"end": 3718,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "tag",
											"source": 4,
											"value": "306"
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3684,
											"end": 3696,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3715,
											"end": 3767,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 3737,
											"end": 3743,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3745,
											"end": 3749,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3751,
											"end": 3752,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3754,
											"end": 3766,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3684,
											"end": 3696,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4858,
											"end": 4876,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "319"
										},
										{
											"begin": 4869,
											"end": 4875,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4858,
											"end": 4868,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "320"
										},
										{
											"begin": 4858,
											"end": 4876,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4858,
											"end": 4876,
											"name": "tag",
											"source": 4,
											"value": "319"
										},
										{
											"begin": 4858,
											"end": 4876,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "321"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "323"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "tag",
											"source": 4,
											"value": "321"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4981,
											"end": 4993,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4995,
											"end": 5018,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5022,
											"end": 5028,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5022,
											"end": 5033,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5042,
											"end": 5047,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5050,
											"end": 5054,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "324"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "325"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "tag",
											"source": 4,
											"value": "324"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "328"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 4,
											"value": "3F"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "327"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "tag",
											"source": 4,
											"value": "328"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "tag",
											"source": 4,
											"value": "327"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4980,
											"end": 5055,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4980,
											"end": 5055,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4980,
											"end": 5055,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4980,
											"end": 5055,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5072,
											"end": 5124,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "329"
										},
										{
											"begin": 5090,
											"end": 5097,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5099,
											"end": 5109,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5111,
											"end": 5123,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5072,
											"end": 5089,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "330"
										},
										{
											"begin": 5072,
											"end": 5124,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5072,
											"end": 5124,
											"name": "tag",
											"source": 4,
											"value": "329"
										},
										{
											"begin": 5072,
											"end": 5124,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5065,
											"end": 5124,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "tag",
											"source": 4,
											"value": "320"
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1086,
											"end": 1106,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1124,
											"end": 1132,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1124,
											"end": 1132,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1124,
											"end": 1132,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "tag",
											"source": 4,
											"value": "330"
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7206,
											"end": 7218,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 7234,
											"end": 7241,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7230,
											"end": 7810,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7230,
											"end": 7810,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "333"
										},
										{
											"begin": 7230,
											"end": 7810,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7264,
											"end": 7274,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7257,
											"end": 7274,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 7257,
											"end": 7274,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7230,
											"end": 7810,
											"name": "tag",
											"source": 4,
											"value": "333"
										},
										{
											"begin": 7230,
											"end": 7810,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7392,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7392,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7396,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7371,
											"end": 7800,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "335"
										},
										{
											"begin": 7371,
											"end": 7800,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7633,
											"end": 7643,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7627,
											"end": 7644,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7693,
											"end": 7708,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7680,
											"end": 7690,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7676,
											"end": 7678,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7672,
											"end": 7691,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7665,
											"end": 7709,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7582,
											"end": 7727,
											"name": "tag",
											"source": 4,
											"value": "335"
										},
										{
											"begin": 7582,
											"end": 7727,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7772,
											"end": 7784,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "338"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 142,
											"end": 276,
											"name": "tag",
											"source": -1,
											"value": "340"
										},
										{
											"begin": 142,
											"end": 276,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 220,
											"end": 233,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 220,
											"end": 233,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 238,
											"end": 271,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "176"
										},
										{
											"begin": 220,
											"end": 233,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 238,
											"end": 271,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "343"
										},
										{
											"begin": 238,
											"end": 271,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 2402,
											"end": 2665,
											"name": "tag",
											"source": -1,
											"value": "234"
										},
										{
											"begin": 2402,
											"end": 2665,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2402,
											"end": 2665,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2517,
											"end": 2519,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 2505,
											"end": 2514,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 2496,
											"end": 2503,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 2492,
											"end": 2515,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2488,
											"end": 2520,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 2485,
											"end": 2487,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2485,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "345"
										},
										{
											"begin": 2485,
											"end": 2487,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 2523,
											"end": 2535,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2485,
											"end": 2487,
											"name": "tag",
											"source": -1,
											"value": "345"
										},
										{
											"begin": 2485,
											"end": 2487,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 226,
											"end": 232,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 220,
											"end": 233,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 238,
											"end": 271,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "187"
										},
										{
											"begin": 265,
											"end": 270,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 238,
											"end": 271,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "343"
										},
										{
											"begin": 238,
											"end": 271,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 3064,
											"name": "tag",
											"source": -1,
											"value": "70"
										},
										{
											"begin": 2672,
											"end": 3064,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 3064,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2812,
											"end": 2814,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 2812,
											"end": 2814,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2800,
											"end": 2809,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 2791,
											"end": 2798,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 2787,
											"end": 2810,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2783,
											"end": 2815,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "348"
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 2818,
											"end": 2830,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "tag",
											"source": -1,
											"value": "348"
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2869,
											"end": 2886,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 2863,
											"end": 2887,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 2907,
											"end": 2925,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2907,
											"end": 2925,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2899,
											"end": 2905,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 2896,
											"end": 2926,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 2893,
											"end": 2895,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2893,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "349"
										},
										{
											"begin": 2893,
											"end": 2895,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 2929,
											"end": 2941,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2893,
											"end": 2895,
											"name": "tag",
											"source": -1,
											"value": "349"
										},
										{
											"begin": 2893,
											"end": 2895,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3031,
											"end": 3037,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3029,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 3016,
											"end": 3038,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 429,
											"end": 432,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 422,
											"end": 426,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 414,
											"end": 420,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 410,
											"end": 427,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 406,
											"end": 433,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 396,
											"end": 398,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "350"
										},
										{
											"begin": 396,
											"end": 398,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 437,
											"end": 449,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 396,
											"end": 398,
											"name": "tag",
											"source": -1,
											"value": "350"
										},
										{
											"begin": 396,
											"end": 398,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 477,
											"end": 483,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 471,
											"end": 484,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 457,
											"end": 484,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 457,
											"end": 484,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2907,
											"end": 2925,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 29092,
											"end": 29098,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 29089,
											"end": 29119,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 29086,
											"end": 29088,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 29086,
											"end": 29088,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "351"
										},
										{
											"begin": 29086,
											"end": 29088,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 29122,
											"end": 29134,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 29086,
											"end": 29088,
											"name": "tag",
											"source": -1,
											"value": "351"
										},
										{
											"begin": 29086,
											"end": 29088,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2812,
											"end": 2814,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 29159,
											"end": 29165,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 29155,
											"end": 29172,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 29155,
											"end": 29172,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 29155,
											"end": 29172,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 499,
											"end": 579,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "352"
										},
										{
											"begin": 2812,
											"end": 2814,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 29155,
											"end": 29172,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 29220,
											"end": 29235,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 499,
											"end": 579,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "353"
										},
										{
											"begin": 499,
											"end": 579,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 499,
											"end": 579,
											"name": "tag",
											"source": -1,
											"value": "352"
										},
										{
											"begin": 499,
											"end": 579,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 607,
											"end": 628,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 607,
											"end": 628,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 607,
											"end": 628,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 664,
											"end": 678,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 664,
											"end": 678,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 664,
											"end": 678,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 664,
											"end": 678,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 639,
											"end": 656,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 639,
											"end": 656,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 639,
											"end": 656,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 744,
											"end": 771,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 744,
											"end": 771,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 744,
											"end": 771,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 744,
											"end": 771,
											"name": "DUP8",
											"source": -1
										},
										{
											"begin": 744,
											"end": 771,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 741,
											"end": 777,
											"name": "DUP11",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 738,
											"end": 740,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 738,
											"end": 740,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "354"
										},
										{
											"begin": 738,
											"end": 740,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP8",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP9",
											"source": -1
										},
										{
											"begin": 780,
											"end": 792,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 738,
											"end": 740,
											"name": "tag",
											"source": -1,
											"value": "354"
										},
										{
											"begin": 738,
											"end": 740,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP8",
											"source": -1
										},
										{
											"begin": 806,
											"end": 816,
											"name": "SWAP5",
											"source": -1
										},
										{
											"begin": 806,
											"end": 816,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 800,
											"end": 1017,
											"name": "tag",
											"source": -1,
											"value": "355"
										},
										{
											"begin": 800,
											"end": 1017,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 825,
											"end": 831,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 822,
											"end": 823,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 819,
											"end": 832,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 800,
											"end": 1017,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 800,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "357"
										},
										{
											"begin": 800,
											"end": 1017,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 905,
											"end": 953,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "358"
										},
										{
											"begin": 949,
											"end": 952,
											"name": "DUP11",
											"source": -1
										},
										{
											"begin": 937,
											"end": 947,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 905,
											"end": 953,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "340"
										},
										{
											"begin": 905,
											"end": 953,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 905,
											"end": 953,
											"name": "tag",
											"source": -1,
											"value": "358"
										},
										{
											"begin": 905,
											"end": 953,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 893,
											"end": 954,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 893,
											"end": 954,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 847,
											"end": 848,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 840,
											"end": 849,
											"name": "SWAP5",
											"source": -1
										},
										{
											"begin": 840,
											"end": 849,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 840,
											"end": 849,
											"name": "SWAP5",
											"source": -1
										},
										{
											"begin": 840,
											"end": 849,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 840,
											"end": 849,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 968,
											"end": 982,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 968,
											"end": 982,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 968,
											"end": 982,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 968,
											"end": 982,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 996,
											"end": 1010,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 996,
											"end": 1010,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 800,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "355"
										},
										{
											"begin": 800,
											"end": 1017,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 800,
											"end": 1017,
											"name": "tag",
											"source": -1,
											"value": "357"
										},
										{
											"begin": 800,
											"end": 1017,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2949,
											"end": 3048,
											"name": "SWAP9",
											"source": -1
										},
										{
											"begin": 2774,
											"end": 3064,
											"name": "SWAP8",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2774,
											"end": 3064,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 3071,
											"end": 3328,
											"name": "tag",
											"source": -1,
											"value": "161"
										},
										{
											"begin": 3071,
											"end": 3328,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3071,
											"end": 3328,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3183,
											"end": 3185,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 3171,
											"end": 3180,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 3162,
											"end": 3169,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 3158,
											"end": 3181,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3154,
											"end": 3186,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 3151,
											"end": 3153,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 3151,
											"end": 3153,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "360"
										},
										{
											"begin": 3151,
											"end": 3153,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 3189,
											"end": 3201,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 3151,
											"end": 3153,
											"name": "tag",
											"source": -1,
											"value": "360"
										},
										{
											"begin": 3151,
											"end": 3153,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1112,
											"end": 1118,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 1106,
											"end": 1119,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 34278,
											"end": 34283,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 31705,
											"end": 31718,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 31698,
											"end": 31719,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 34256,
											"end": 34261,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 34253,
											"end": 34285,
											"name": "EQ",
											"source": -1
										},
										{
											"begin": 34243,
											"end": 34245,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "187"
										},
										{
											"begin": 34243,
											"end": 34245,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 34289,
											"end": 34301,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 3335,
											"end": 3695,
											"name": "tag",
											"source": -1,
											"value": "273"
										},
										{
											"begin": 3335,
											"end": 3695,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3335,
											"end": 3695,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3459,
											"end": 3461,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 3447,
											"end": 3456,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 3438,
											"end": 3445,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 3434,
											"end": 3457,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3430,
											"end": 3462,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 3427,
											"end": 3429,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 3427,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "363"
										},
										{
											"begin": 3427,
											"end": 3429,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 3465,
											"end": 3477,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 3427,
											"end": 3429,
											"name": "tag",
											"source": -1,
											"value": "363"
										},
										{
											"begin": 3427,
											"end": 3429,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3516,
											"end": 3533,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 3510,
											"end": 3534,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 3554,
											"end": 3572,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3554,
											"end": 3572,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 3546,
											"end": 3552,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 3543,
											"end": 3573,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 3540,
											"end": 3542,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 3540,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "364"
										},
										{
											"begin": 3540,
											"end": 3542,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 3576,
											"end": 3588,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 3540,
											"end": 3542,
											"name": "tag",
											"source": -1,
											"value": "364"
										},
										{
											"begin": 3540,
											"end": 3542,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3662,
											"end": 3668,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 3651,
											"end": 3660,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 3647,
											"end": 3669,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1279,
											"end": 1282,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 1272,
											"end": 1276,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 1264,
											"end": 1270,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 1260,
											"end": 1277,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1256,
											"end": 1283,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 1246,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "365"
										},
										{
											"begin": 1246,
											"end": 1248,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 1287,
											"end": 1299,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 1246,
											"end": 1248,
											"name": "tag",
											"source": -1,
											"value": "365"
										},
										{
											"begin": 1246,
											"end": 1248,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1327,
											"end": 1333,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 1321,
											"end": 1334,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 1307,
											"end": 1334,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 1307,
											"end": 1334,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3554,
											"end": 3572,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 29387,
											"end": 29393,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 29384,
											"end": 29414,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 29381,
											"end": 29383,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 29381,
											"end": 29383,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "366"
										},
										{
											"begin": 29381,
											"end": 29383,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 29417,
											"end": 29429,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 29381,
											"end": 29383,
											"name": "tag",
											"source": -1,
											"value": "366"
										},
										{
											"begin": 29381,
											"end": 29383,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1349,
											"end": 1413,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "367"
										},
										{
											"begin": 29490,
											"end": 29499,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 29471,
											"end": 29488,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 29471,
											"end": 29488,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 29467,
											"end": 29500,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 3459,
											"end": 3461,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 29548,
											"end": 29563,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1349,
											"end": 1413,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "353"
										},
										{
											"begin": 1349,
											"end": 1413,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1349,
											"end": 1413,
											"name": "tag",
											"source": -1,
											"value": "367"
										},
										{
											"begin": 1349,
											"end": 1413,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1340,
											"end": 1413,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 1340,
											"end": 1413,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1433,
											"end": 1439,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 1426,
											"end": 1431,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 1419,
											"end": 1440,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1537,
											"end": 1540,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 3459,
											"end": 3461,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 1528,
											"end": 1534,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 1461,
											"end": 1467,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 1519,
											"end": 1535,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1519,
											"end": 1535,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1516,
											"end": 1541,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 1513,
											"end": 1515,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 1513,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "368"
										},
										{
											"begin": 1513,
											"end": 1515,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 1544,
											"end": 1556,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 1513,
											"end": 1515,
											"name": "tag",
											"source": -1,
											"value": "368"
										},
										{
											"begin": 1513,
											"end": 1515,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1564,
											"end": 1603,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "369"
										},
										{
											"begin": 1596,
											"end": 1602,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 3459,
											"end": 3461,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 1495,
											"end": 1500,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 1491,
											"end": 1507,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 3459,
											"end": 3461,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 1461,
											"end": 1467,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 1457,
											"end": 1474,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1564,
											"end": 1603,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "370"
										},
										{
											"begin": 1564,
											"end": 1603,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1564,
											"end": 1603,
											"name": "tag",
											"source": -1,
											"value": "369"
										},
										{
											"begin": 1564,
											"end": 1603,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3596,
											"end": 3679,
											"name": "SWAP5",
											"source": -1
										},
										{
											"begin": 3421,
											"end": 3695,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3421,
											"end": 3695,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 3702,
											"end": 3979,
											"name": "tag",
											"source": -1,
											"value": "32"
										},
										{
											"begin": 3702,
											"end": 3979,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3702,
											"end": 3979,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3824,
											"end": 3826,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 3812,
											"end": 3821,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 3803,
											"end": 3810,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 3799,
											"end": 3822,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3795,
											"end": 3827,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 3792,
											"end": 3794,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 3792,
											"end": 3794,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "372"
										},
										{
											"begin": 3792,
											"end": 3794,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 3830,
											"end": 3842,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 3792,
											"end": 3794,
											"name": "tag",
											"source": -1,
											"value": "372"
										},
										{
											"begin": 3792,
											"end": 3794,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1910,
											"end": 1916,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 1897,
											"end": 1917,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 1922,
											"end": 1973,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "187"
										},
										{
											"begin": 1967,
											"end": 1972,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 1922,
											"end": 1973,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "343"
										},
										{
											"begin": 1922,
											"end": 1973,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 3986,
											"end": 4446,
											"name": "tag",
											"source": -1,
											"value": "13"
										},
										{
											"begin": 3986,
											"end": 4446,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3986,
											"end": 4446,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3986,
											"end": 4446,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 4154,
											"end": 4156,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 4142,
											"end": 4151,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 4133,
											"end": 4140,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 4129,
											"end": 4152,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4125,
											"end": 4157,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 4122,
											"end": 4124,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4122,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "375"
										},
										{
											"begin": 4122,
											"end": 4124,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 4160,
											"end": 4172,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4122,
											"end": 4124,
											"name": "tag",
											"source": -1,
											"value": "375"
										},
										{
											"begin": 4122,
											"end": 4124,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1910,
											"end": 1916,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 1897,
											"end": 1917,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 1922,
											"end": 1973,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "376"
										},
										{
											"begin": 1967,
											"end": 1972,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 1922,
											"end": 1973,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "343"
										},
										{
											"begin": 1922,
											"end": 1973,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1922,
											"end": 1973,
											"name": "tag",
											"source": -1,
											"value": "376"
										},
										{
											"begin": 1922,
											"end": 1973,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4212,
											"end": 4293,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4330,
											"end": 4332,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 4398,
											"end": 4420,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 4398,
											"end": 4420,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1713,
											"end": 1733,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 1738,
											"end": 1800,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "377"
										},
										{
											"begin": 1713,
											"end": 1733,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 1738,
											"end": 1800,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "343"
										},
										{
											"begin": 1738,
											"end": 1800,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1738,
											"end": 1800,
											"name": "tag",
											"source": -1,
											"value": "377"
										},
										{
											"begin": 1738,
											"end": 1800,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4338,
											"end": 4430,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 4338,
											"end": 4430,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 4338,
											"end": 4430,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4338,
											"end": 4430,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4116,
											"end": 4446,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 4116,
											"end": 4446,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4116,
											"end": 4446,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 4116,
											"end": 4446,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 4116,
											"end": 4446,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4116,
											"end": 4446,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 4453,
											"end": 4855,
											"name": "tag",
											"source": -1,
											"value": "24"
										},
										{
											"begin": 4453,
											"end": 4855,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4453,
											"end": 4855,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4453,
											"end": 4855,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 4592,
											"end": 4594,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 4580,
											"end": 4589,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 4571,
											"end": 4578,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 4567,
											"end": 4590,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4563,
											"end": 4595,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 4560,
											"end": 4562,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4560,
											"end": 4562,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "379"
										},
										{
											"begin": 4560,
											"end": 4562,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 4598,
											"end": 4610,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4560,
											"end": 4562,
											"name": "tag",
											"source": -1,
											"value": "379"
										},
										{
											"begin": 4560,
											"end": 4562,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1910,
											"end": 1916,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 1897,
											"end": 1917,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 1922,
											"end": 1973,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "380"
										},
										{
											"begin": 1967,
											"end": 1972,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 1922,
											"end": 1973,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "343"
										},
										{
											"begin": 1922,
											"end": 1973,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1922,
											"end": 1973,
											"name": "tag",
											"source": -1,
											"value": "380"
										},
										{
											"begin": 1922,
											"end": 1973,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4650,
											"end": 4731,
											"name": "SWAP5",
											"source": -1
										},
										{
											"begin": 4768,
											"end": 4770,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 4807,
											"end": 4829,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 4807,
											"end": 4829,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 4807,
											"end": 4829,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 4807,
											"end": 4829,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 2191,
											"end": 2211,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 2191,
											"end": 2211,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4554,
											"end": 4855,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 4862,
											"end": 5389,
											"name": "tag",
											"source": -1,
											"value": "17"
										},
										{
											"begin": 4862,
											"end": 5389,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4862,
											"end": 5389,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4862,
											"end": 5389,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 4862,
											"end": 5389,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5018,
											"end": 5020,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 5006,
											"end": 5015,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 4997,
											"end": 5004,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 4993,
											"end": 5016,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4989,
											"end": 5021,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 4986,
											"end": 4988,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4986,
											"end": 4988,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "382"
										},
										{
											"begin": 4986,
											"end": 4988,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 5024,
											"end": 5036,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4986,
											"end": 4988,
											"name": "tag",
											"source": -1,
											"value": "382"
										},
										{
											"begin": 4986,
											"end": 4988,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1910,
											"end": 1916,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 1897,
											"end": 1917,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 1922,
											"end": 1973,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "383"
										},
										{
											"begin": 1967,
											"end": 1972,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 1922,
											"end": 1973,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "343"
										},
										{
											"begin": 1922,
											"end": 1973,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1922,
											"end": 1973,
											"name": "tag",
											"source": -1,
											"value": "383"
										},
										{
											"begin": 1922,
											"end": 1973,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5076,
											"end": 5157,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5194,
											"end": 5196,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 5233,
											"end": 5255,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 5233,
											"end": 5255,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 2191,
											"end": 2211,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 2191,
											"end": 2211,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5302,
											"end": 5304,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5363,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 5341,
											"end": 5363,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 72,
											"end": 92,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "384"
										},
										{
											"begin": 72,
											"end": 92,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "343"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 97,
											"end": 130,
											"name": "tag",
											"source": -1,
											"value": "384"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5310,
											"end": 5373,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 5310,
											"end": 5373,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 5310,
											"end": 5373,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5310,
											"end": 5373,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4980,
											"end": 5389,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 4980,
											"end": 5389,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4980,
											"end": 5389,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 4980,
											"end": 5389,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4980,
											"end": 5389,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 4980,
											"end": 5389,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 5396,
											"end": 5657,
											"name": "tag",
											"source": -1,
											"value": "87"
										},
										{
											"begin": 5396,
											"end": 5657,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5396,
											"end": 5657,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5510,
											"end": 5512,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 5498,
											"end": 5507,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 5489,
											"end": 5496,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 5485,
											"end": 5508,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5481,
											"end": 5513,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 5478,
											"end": 5480,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 5478,
											"end": 5480,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "386"
										},
										{
											"begin": 5478,
											"end": 5480,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 5516,
											"end": 5528,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 5478,
											"end": 5480,
											"name": "tag",
											"source": -1,
											"value": "386"
										},
										{
											"begin": 5478,
											"end": 5480,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2062,
											"end": 2075,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 2062,
											"end": 2075,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 5472,
											"end": 5657,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5472,
											"end": 5657,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 6117,
											"end": 6290,
											"name": "tag",
											"source": -1,
											"value": "389"
										},
										{
											"begin": 6117,
											"end": 6290,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 16353,
											"end": 16390,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 16353,
											"end": 16390,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 6279,
											"end": 6283,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 6270,
											"end": 6284,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 6270,
											"end": 6284,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 6197,
											"end": 6290,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 6447,
											"end": 6550,
											"name": "tag",
											"source": -1,
											"value": "391"
										},
										{
											"begin": 6447,
											"end": 6550,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 32114,
											"end": 32168,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 6508,
											"end": 6545,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 6508,
											"end": 6545,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 6502,
											"end": 6550,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 8135,
											"end": 8478,
											"name": "tag",
											"source": -1,
											"value": "393"
										},
										{
											"begin": 8135,
											"end": 8478,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 8135,
											"end": 8478,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8277,
											"end": 8282,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 29999,
											"end": 30011,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 30802,
											"end": 30808,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 30797,
											"end": 30800,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 30790,
											"end": 30809,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 8370,
											"end": 8422,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "395"
										},
										{
											"begin": 8415,
											"end": 8421,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 30839,
											"end": 30843,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 30834,
											"end": 30837,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 30830,
											"end": 30844,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 30839,
											"end": 30843,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 8396,
											"end": 8401,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 8392,
											"end": 8408,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 8370,
											"end": 8422,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "370"
										},
										{
											"begin": 8370,
											"end": 8422,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 8370,
											"end": 8422,
											"name": "tag",
											"source": -1,
											"value": "395"
										},
										{
											"begin": 8370,
											"end": 8422,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 29490,
											"end": 29499,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 34036,
											"end": 34050,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 34032,
											"end": 34060,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 8434,
											"end": 8473,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 8434,
											"end": 8473,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 8434,
											"end": 8473,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 8434,
											"end": 8473,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 30839,
											"end": 30843,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 8434,
											"end": 8473,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 8434,
											"end": 8473,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 8225,
											"end": 8478,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8225,
											"end": 8478,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 16522,
											"end": 16793,
											"name": "tag",
											"source": -1,
											"value": "325"
										},
										{
											"begin": 16522,
											"end": 16793,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 16522,
											"end": 16793,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8645,
											"end": 8650,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 29999,
											"end": 30011,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 8756,
											"end": 8808,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "397"
										},
										{
											"begin": 8801,
											"end": 8807,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 8796,
											"end": 8799,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 8789,
											"end": 8793,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 8782,
											"end": 8787,
											"name": "DUP8",
											"source": -1
										},
										{
											"begin": 8778,
											"end": 8794,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 8756,
											"end": 8808,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "370"
										},
										{
											"begin": 8756,
											"end": 8808,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 8756,
											"end": 8808,
											"name": "tag",
											"source": -1,
											"value": "397"
										},
										{
											"begin": 8756,
											"end": 8808,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 8820,
											"end": 8836,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 8820,
											"end": 8836,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 8820,
											"end": 8836,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 8820,
											"end": 8836,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 8820,
											"end": 8836,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 16656,
											"end": 16793,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16656,
											"end": 16793,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 16800,
											"end": 17022,
											"name": "tag",
											"source": -1,
											"value": "82"
										},
										{
											"begin": 16800,
											"end": 17022,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 32114,
											"end": 32168,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 32114,
											"end": 32168,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 32114,
											"end": 32168,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 32114,
											"end": 32168,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 6508,
											"end": 6545,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 6508,
											"end": 6545,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 16927,
											"end": 16929,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 16912,
											"end": 16930,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 16912,
											"end": 16930,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 16898,
											"end": 17022,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 17029,
											"end": 17378,
											"name": "tag",
											"source": -1,
											"value": "62"
										},
										{
											"begin": 17029,
											"end": 17378,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 32114,
											"end": 32168,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 32114,
											"end": 32168,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 32114,
											"end": 32168,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 32114,
											"end": 32168,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 6377,
											"end": 6435,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 6377,
											"end": 6435,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 17364,
											"end": 17366,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 17349,
											"end": 17367,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 17349,
											"end": 17367,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 16353,
											"end": 16390,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 17192,
											"end": 17194,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 17177,
											"end": 17195,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 17177,
											"end": 17195,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 17163,
											"end": 17378,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 17385,
											"end": 17829,
											"name": "tag",
											"source": -1,
											"value": "302"
										},
										{
											"begin": 17385,
											"end": 17829,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 32114,
											"end": 32168,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 32114,
											"end": 32168,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 32114,
											"end": 32168,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 6508,
											"end": 6545,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 6508,
											"end": 6545,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 32114,
											"end": 32168,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 32114,
											"end": 32168,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 32114,
											"end": 32168,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 32114,
											"end": 32168,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 17732,
											"end": 17734,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 17717,
											"end": 17735,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 17717,
											"end": 17735,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 6508,
											"end": 6545,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 17815,
											"end": 17817,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 17800,
											"end": 17818,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 17800,
											"end": 17818,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 16353,
											"end": 16390,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 16353,
											"end": 16390,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 16353,
											"end": 16390,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 16353,
											"end": 16390,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 17568,
											"end": 17570,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 17553,
											"end": 17571,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 17553,
											"end": 17571,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 17539,
											"end": 17829,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 17836,
											"end": 18380,
											"name": "tag",
											"source": -1,
											"value": "268"
										},
										{
											"begin": 17836,
											"end": 18380,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 17836,
											"end": 18380,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2907,
											"end": 2925,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2907,
											"end": 2925,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 32125,
											"end": 32167,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": 32125,
											"end": 32167,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 32125,
											"end": 32167,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 31621,
											"end": 31626,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 32114,
											"end": 32168,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 6515,
											"end": 6518,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 6508,
											"end": 6545,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 33412,
											"end": 33436,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 18217,
											"end": 18219,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 18206,
											"end": 18215,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 18202,
											"end": 18220,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 9460,
											"end": 9518,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 18045,
											"end": 18047,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 18254,
											"end": 18256,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 18243,
											"end": 18252,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 18239,
											"end": 18257,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 18232,
											"end": 18280,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 18294,
											"end": 18370,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "402"
										},
										{
											"begin": 18045,
											"end": 18047,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 18034,
											"end": 18043,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 18030,
											"end": 18048,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 18356,
											"end": 18362,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 18294,
											"end": 18370,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "393"
										},
										{
											"begin": 18294,
											"end": 18370,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 18294,
											"end": 18370,
											"name": "tag",
											"source": -1,
											"value": "402"
										},
										{
											"begin": 18294,
											"end": 18370,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 18286,
											"end": 18370,
											"name": "SWAP6",
											"source": -1
										},
										{
											"begin": 18016,
											"end": 18380,
											"name": "SWAP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18016,
											"end": 18380,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 18727,
											"end": 19356,
											"name": "tag",
											"source": -1,
											"value": "27"
										},
										{
											"begin": 18727,
											"end": 19356,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 18982,
											"end": 18984,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 18996,
											"end": 19043,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 18996,
											"end": 19043,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 18996,
											"end": 19043,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 29999,
											"end": 30011,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 29999,
											"end": 30011,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 18967,
											"end": 18985,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 18967,
											"end": 18985,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 18967,
											"end": 18985,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 30790,
											"end": 30809,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 30790,
											"end": 30809,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 30790,
											"end": 30809,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 18727,
											"end": 19356,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 18727,
											"end": 19356,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 30839,
											"end": 30843,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 30839,
											"end": 30843,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 30830,
											"end": 30844,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 30830,
											"end": 30844,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 30830,
											"end": 30844,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 30830,
											"end": 30844,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 29695,
											"end": 29709,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 29695,
											"end": 29709,
											"name": "DUP8",
											"source": -1
										},
										{
											"begin": 29695,
											"end": 29709,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 18727,
											"end": 19356,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 7116,
											"end": 7376,
											"name": "tag",
											"source": -1,
											"value": "405"
										},
										{
											"begin": 7116,
											"end": 7376,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 7141,
											"end": 7147,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 7138,
											"end": 7139,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7135,
											"end": 7148,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 7116,
											"end": 7376,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 7116,
											"end": 7376,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "407"
										},
										{
											"begin": 7116,
											"end": 7376,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 6022,
											"end": 6068,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "408"
										},
										{
											"begin": 6064,
											"end": 6067,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 7208,
											"end": 7214,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 7202,
											"end": 7215,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 6022,
											"end": 6068,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "391"
										},
										{
											"begin": 6022,
											"end": 6068,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 6022,
											"end": 6068,
											"name": "tag",
											"source": -1,
											"value": "408"
										},
										{
											"begin": 6022,
											"end": 6068,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 6088,
											"end": 6102,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 6088,
											"end": 6102,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 6088,
											"end": 6102,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 6088,
											"end": 6102,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 30530,
											"end": 30544,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 30530,
											"end": 30544,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 30530,
											"end": 30544,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 30530,
											"end": 30544,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 7163,
											"end": 7164,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 7156,
											"end": 7165,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 7116,
											"end": 7376,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "405"
										},
										{
											"begin": 7116,
											"end": 7376,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 7116,
											"end": 7376,
											"name": "tag",
											"source": -1,
											"value": "407"
										},
										{
											"begin": 7116,
											"end": 7376,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 7120,
											"end": 7134,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7120,
											"end": 7134,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7120,
											"end": 7134,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19213,
											"end": 19222,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 19207,
											"end": 19211,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 19203,
											"end": 19223,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30839,
											"end": 30843,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 19187,
											"end": 19196,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 19183,
											"end": 19201,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 19176,
											"end": 19224,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 19238,
											"end": 19346,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 7630,
											"end": 7635,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 29999,
											"end": 30011,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 7649,
											"end": 7735,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "409"
										},
										{
											"begin": 7728,
											"end": 7734,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7723,
											"end": 7726,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 7649,
											"end": 7735,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "94"
										},
										{
											"begin": 7649,
											"end": 7735,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 7649,
											"end": 7735,
											"name": "tag",
											"source": -1,
											"value": "409"
										},
										{
											"begin": 7649,
											"end": 7735,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 7642,
											"end": 7735,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 7642,
											"end": 7735,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30839,
											"end": 30843,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 7806,
											"end": 7811,
											"name": "DUP8",
											"source": -1
										},
										{
											"begin": 29695,
											"end": 29709,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 7818,
											"end": 7839,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 7818,
											"end": 7839,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 7845,
											"end": 8105,
											"name": "tag",
											"source": -1,
											"value": "411"
										},
										{
											"begin": 7845,
											"end": 8105,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 7870,
											"end": 7876,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7867,
											"end": 7868,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7864,
											"end": 7877,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 7845,
											"end": 8105,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 7845,
											"end": 8105,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "413"
										},
										{
											"begin": 7845,
											"end": 8105,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 7958,
											"end": 8021,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "414"
										},
										{
											"begin": 8017,
											"end": 8020,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 7937,
											"end": 7943,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 7931,
											"end": 7944,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 7958,
											"end": 8021,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "389"
										},
										{
											"begin": 7958,
											"end": 8021,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 7958,
											"end": 8021,
											"name": "tag",
											"source": -1,
											"value": "414"
										},
										{
											"begin": 7958,
											"end": 8021,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 30530,
											"end": 30544,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 30530,
											"end": 30544,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 30530,
											"end": 30544,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 30530,
											"end": 30544,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 7951,
											"end": 8021,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7163,
											"end": 7164,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 7885,
											"end": 7894,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 7845,
											"end": 8105,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "411"
										},
										{
											"begin": 7845,
											"end": 8105,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 7845,
											"end": 8105,
											"name": "tag",
											"source": -1,
											"value": "413"
										},
										{
											"begin": 7845,
											"end": 8105,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19230,
											"end": 19346,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 19230,
											"end": 19346,
											"name": "SWAP8",
											"source": -1
										},
										{
											"begin": 18953,
											"end": 19356,
											"name": "SWAP7",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18953,
											"end": 19356,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 19919,
											"end": 20511,
											"name": "tag",
											"source": -1,
											"value": "214"
										},
										{
											"begin": 19919,
											"end": 20511,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 32114,
											"end": 32168,
											"name": "SWAP5",
											"source": -1
										},
										{
											"begin": 32114,
											"end": 32168,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 32114,
											"end": 32168,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 8939,
											"end": 9009,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 8939,
											"end": 9009,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 20331,
											"end": 20333,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 20316,
											"end": 20334,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 20316,
											"end": 20334,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 16353,
											"end": 16390,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 16353,
											"end": 16390,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 16353,
											"end": 16390,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 16353,
											"end": 16390,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 32114,
											"end": 32168,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 32114,
											"end": 32168,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 32114,
											"end": 32168,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 20414,
											"end": 20416,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 20399,
											"end": 20417,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 20399,
											"end": 20417,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 6508,
											"end": 6545,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 32114,
											"end": 32168,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 32114,
											"end": 32168,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 32114,
											"end": 32168,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 20497,
											"end": 20499,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 20482,
											"end": 20500,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 20482,
											"end": 20500,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 6508,
											"end": 6545,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 20148,
											"end": 20151,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 20133,
											"end": 20152,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 20133,
											"end": 20152,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 20119,
											"end": 20511,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 20518,
											"end": 20828,
											"name": "tag",
											"source": -1,
											"value": "338"
										},
										{
											"begin": 20518,
											"end": 20828,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 20518,
											"end": 20828,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 20665,
											"end": 20667,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 20686,
											"end": 20703,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 20679,
											"end": 20726,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 20740,
											"end": 20818,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "187"
										},
										{
											"begin": 20665,
											"end": 20667,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 20654,
											"end": 20663,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 20650,
											"end": 20668,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 20804,
											"end": 20810,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 20740,
											"end": 20818,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "393"
										},
										{
											"begin": 20740,
											"end": 20818,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 20835,
											"end": 21251,
											"name": "tag",
											"source": -1,
											"value": "175"
										},
										{
											"begin": 20835,
											"end": 21251,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 21035,
											"end": 21037,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 21049,
											"end": 21096,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21049,
											"end": 21096,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 21049,
											"end": 21096,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 10109,
											"end": 10111,
											"name": "PUSH",
											"source": -1,
											"value": "28"
										},
										{
											"begin": 21020,
											"end": 21038,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 21020,
											"end": 21038,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 21020,
											"end": 21038,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 30790,
											"end": 30809,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 10145,
											"end": 10179,
											"name": "PUSH",
											"source": -1,
											"value": "4D75737420626520612076616C696420616E6420696E697469616C697A656420"
										},
										{
											"begin": 30830,
											"end": 30844,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 30830,
											"end": 30844,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 30830,
											"end": 30844,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 10125,
											"end": 10180,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "29B2BA2A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10200,
											"end": 10212,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 10200,
											"end": 10212,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 10200,
											"end": 10212,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 10193,
											"end": 10225,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 10244,
											"end": 10256,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 10244,
											"end": 10256,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 10244,
											"end": 10256,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 21006,
											"end": 21251,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 21258,
											"end": 21674,
											"name": "tag",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 21258,
											"end": 21674,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 21458,
											"end": 21460,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 21472,
											"end": 21519,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21472,
											"end": 21519,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 21472,
											"end": 21519,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 10495,
											"end": 10497,
											"name": "PUSH",
											"source": -1,
											"value": "1B"
										},
										{
											"begin": 21443,
											"end": 21461,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 21443,
											"end": 21461,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 21443,
											"end": 21461,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 30790,
											"end": 30809,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 10531,
											"end": 10560,
											"name": "PUSH",
											"source": -1,
											"value": "52656465656D207175616E74697479206D757374206265203E20300000000000"
										},
										{
											"begin": 30830,
											"end": 30844,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 30830,
											"end": 30844,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 30830,
											"end": 30844,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 10511,
											"end": 10561,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 10580,
											"end": 10592,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 10580,
											"end": 10592,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 10580,
											"end": 10592,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 21429,
											"end": 21674,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 21681,
											"end": 22097,
											"name": "tag",
											"source": -1,
											"value": "298"
										},
										{
											"begin": 21681,
											"end": 22097,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 21881,
											"end": 21883,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 21895,
											"end": 21942,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21895,
											"end": 21942,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 21895,
											"end": 21942,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 10831,
											"end": 10833,
											"name": "PUSH",
											"source": -1,
											"value": "1B"
										},
										{
											"begin": 21866,
											"end": 21884,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 21866,
											"end": 21884,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 21866,
											"end": 21884,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 30790,
											"end": 30809,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 10867,
											"end": 10896,
											"name": "PUSH",
											"source": -1,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 30830,
											"end": 30844,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 30830,
											"end": 30844,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 30830,
											"end": 30844,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 10847,
											"end": 10897,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 10916,
											"end": 10928,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 10916,
											"end": 10928,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 10916,
											"end": 10928,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 21852,
											"end": 22097,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 22104,
											"end": 22520,
											"name": "tag",
											"source": -1,
											"value": "148"
										},
										{
											"begin": 22104,
											"end": 22520,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 22304,
											"end": 22306,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 22318,
											"end": 22365,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 22318,
											"end": 22365,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 22318,
											"end": 22365,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 11167,
											"end": 11169,
											"name": "PUSH",
											"source": -1,
											"value": "30"
										},
										{
											"begin": 22289,
											"end": 22307,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 22289,
											"end": 22307,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 22289,
											"end": 22307,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 30790,
											"end": 30809,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 11203,
											"end": 11237,
											"name": "PUSH",
											"source": -1,
											"value": "54686520426173696349737375616E63654D6F64756C65206D6F64756C652063"
										},
										{
											"begin": 30830,
											"end": 30844,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 30830,
											"end": 30844,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 30830,
											"end": 30844,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 11183,
											"end": 11238,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "185B9B9BDD081899481C995B5BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11258,
											"end": 11270,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 11258,
											"end": 11270,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 11258,
											"end": 11270,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 11251,
											"end": 11291,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 11310,
											"end": 11322,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 11310,
											"end": 11322,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 11310,
											"end": 11322,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 22275,
											"end": 22520,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 22527,
											"end": 22943,
											"name": "tag",
											"source": -1,
											"value": "79"
										},
										{
											"begin": 22527,
											"end": 22943,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 22727,
											"end": 22729,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 22741,
											"end": 22788,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 22741,
											"end": 22788,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 22741,
											"end": 22788,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 11561,
											"end": 11563,
											"name": "PUSH",
											"source": -1,
											"value": "24"
										},
										{
											"begin": 22712,
											"end": 22730,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 22712,
											"end": 22730,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 22712,
											"end": 22730,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 30790,
											"end": 30809,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 11597,
											"end": 11631,
											"name": "PUSH",
											"source": -1,
											"value": "4F6E6C792064656661756C7420706F736974696F6E732061726520737570706F"
										},
										{
											"begin": 30830,
											"end": 30844,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 30830,
											"end": 30844,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 30830,
											"end": 30844,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 11577,
											"end": 11632,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C9D1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 11645,
											"end": 11673,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 11692,
											"end": 11704,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 11692,
											"end": 11704,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 11692,
											"end": 11704,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 22698,
											"end": 22943,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 22950,
											"end": 23366,
											"name": "tag",
											"source": -1,
											"value": "169"
										},
										{
											"begin": 22950,
											"end": 23366,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 23150,
											"end": 23152,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 23164,
											"end": 23211,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 23164,
											"end": 23211,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 23164,
											"end": 23211,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 11943,
											"end": 11945,
											"name": "PUSH",
											"source": -1,
											"value": "1E"
										},
										{
											"begin": 23135,
											"end": 23153,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 23135,
											"end": 23153,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 23135,
											"end": 23153,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 30790,
											"end": 30809,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 11979,
											"end": 12011,
											"name": "PUSH",
											"source": -1,
											"value": "4D7573742062652070656E64696E6720696E697469616C697A6174696F6E0000"
										},
										{
											"begin": 30830,
											"end": 30844,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 30830,
											"end": 30844,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 30830,
											"end": 30844,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 11959,
											"end": 12012,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 23121,
											"end": 23366,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 23373,
											"end": 23789,
											"name": "tag",
											"source": -1,
											"value": "103"
										},
										{
											"begin": 23373,
											"end": 23789,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 23573,
											"end": 23575,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 23587,
											"end": 23634,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 23587,
											"end": 23634,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 23587,
											"end": 23634,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 12282,
											"end": 12284,
											"name": "PUSH",
											"source": -1,
											"value": "1A"
										},
										{
											"begin": 23558,
											"end": 23576,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 23558,
											"end": 23576,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 23558,
											"end": 23576,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 30790,
											"end": 30809,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 12318,
											"end": 12346,
											"name": "PUSH",
											"source": -1,
											"value": "4973737565207175616E74697479206D757374206265203E2030000000000000"
										},
										{
											"begin": 30830,
											"end": 30844,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 30830,
											"end": 30844,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 30830,
											"end": 30844,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 12298,
											"end": 12347,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 12366,
											"end": 12378,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 12366,
											"end": 12378,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 12366,
											"end": 12378,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 23544,
											"end": 23789,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 23796,
											"end": 24212,
											"name": "tag",
											"source": -1,
											"value": "277"
										},
										{
											"begin": 23796,
											"end": 24212,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 23996,
											"end": 23998,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 24010,
											"end": 24057,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 24010,
											"end": 24057,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 24010,
											"end": 24057,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 12617,
											"end": 12619,
											"name": "PUSH",
											"source": -1,
											"value": "1E"
										},
										{
											"begin": 23981,
											"end": 23999,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 23981,
											"end": 23999,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 23981,
											"end": 23999,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 30790,
											"end": 30809,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 12653,
											"end": 12685,
											"name": "PUSH",
											"source": -1,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 30830,
											"end": 30844,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 30830,
											"end": 30844,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 30830,
											"end": 30844,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 12633,
											"end": 12686,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 12705,
											"end": 12717,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 12705,
											"end": 12717,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 12705,
											"end": 12717,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 23967,
											"end": 24212,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 24642,
											"end": 25058,
											"name": "tag",
											"source": -1,
											"value": "262"
										},
										{
											"begin": 24642,
											"end": 25058,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 24842,
											"end": 24844,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 24856,
											"end": 24903,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 24856,
											"end": 24903,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 24856,
											"end": 24903,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 13340,
											"end": 13342,
											"name": "PUSH",
											"source": -1,
											"value": "1A"
										},
										{
											"begin": 24827,
											"end": 24845,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 24827,
											"end": 24845,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 24827,
											"end": 24845,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 30790,
											"end": 30809,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 13376,
											"end": 13404,
											"name": "PUSH",
											"source": -1,
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 30830,
											"end": 30844,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 30830,
											"end": 30844,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 30830,
											"end": 30844,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 13356,
											"end": 13405,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 13424,
											"end": 13436,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 13424,
											"end": 13436,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 13424,
											"end": 13436,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 24813,
											"end": 25058,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 25065,
											"end": 25481,
											"name": "tag",
											"source": -1,
											"value": "185"
										},
										{
											"begin": 25065,
											"end": 25481,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 25265,
											"end": 25267,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 25279,
											"end": 25326,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 25279,
											"end": 25326,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 25279,
											"end": 25326,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 25250,
											"end": 25268,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 25250,
											"end": 25268,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 25250,
											"end": 25268,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 30790,
											"end": 30809,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 13711,
											"end": 13745,
											"name": "PUSH",
											"source": -1,
											"value": "53616665436173743A2076616C7565206D75737420626520706F736974697665"
										},
										{
											"begin": 30830,
											"end": 30844,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 30830,
											"end": 30844,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 30830,
											"end": 30844,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 13691,
											"end": 13746,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 13765,
											"end": 13777,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 13765,
											"end": 13777,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 13765,
											"end": 13777,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 25236,
											"end": 25481,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 25488,
											"end": 25904,
											"name": "tag",
											"source": -1,
											"value": "258"
										},
										{
											"begin": 25488,
											"end": 25904,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 25688,
											"end": 25690,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 25702,
											"end": 25749,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 25702,
											"end": 25749,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 25702,
											"end": 25749,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 14016,
											"end": 14018,
											"name": "PUSH",
											"source": -1,
											"value": "21"
										},
										{
											"begin": 25673,
											"end": 25691,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 25673,
											"end": 25691,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 25673,
											"end": 25691,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 30790,
											"end": 30809,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 14052,
											"end": 14086,
											"name": "PUSH",
											"source": -1,
											"value": "536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F"
										},
										{
											"begin": 30830,
											"end": 30844,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 30830,
											"end": 30844,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 30830,
											"end": 30844,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 14032,
											"end": 14087,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14107,
											"end": 14119,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 14107,
											"end": 14119,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 14107,
											"end": 14119,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 14100,
											"end": 14125,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 14144,
											"end": 14156,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 14144,
											"end": 14156,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 14144,
											"end": 14156,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 25659,
											"end": 25904,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 25911,
											"end": 26327,
											"name": "tag",
											"source": -1,
											"value": "210"
										},
										{
											"begin": 25911,
											"end": 26327,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 26111,
											"end": 26113,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 26125,
											"end": 26172,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 26125,
											"end": 26172,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 26125,
											"end": 26172,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 14395,
											"end": 14397,
											"name": "PUSH",
											"source": -1,
											"value": "1D"
										},
										{
											"begin": 26096,
											"end": 26114,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 26096,
											"end": 26114,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 26096,
											"end": 26114,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 30790,
											"end": 30809,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 14431,
											"end": 14462,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C696420706F7374207472616E736665722062616C616E6365000000"
										},
										{
											"begin": 30830,
											"end": 30844,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 30830,
											"end": 30844,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 30830,
											"end": 30844,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 14411,
											"end": 14463,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 14482,
											"end": 14494,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 14482,
											"end": 14494,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 14482,
											"end": 14494,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 26082,
											"end": 26327,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 26334,
											"end": 26750,
											"name": "tag",
											"source": -1,
											"value": "323"
										},
										{
											"begin": 26334,
											"end": 26750,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 26534,
											"end": 26536,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 26548,
											"end": 26595,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 26548,
											"end": 26595,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 26548,
											"end": 26595,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 14733,
											"end": 14735,
											"name": "PUSH",
											"source": -1,
											"value": "1D"
										},
										{
											"begin": 26519,
											"end": 26537,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 26519,
											"end": 26537,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 26519,
											"end": 26537,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 30790,
											"end": 30809,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 14769,
											"end": 14800,
											"name": "PUSH",
											"source": -1,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 30830,
											"end": 30844,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 30830,
											"end": 30844,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 30830,
											"end": 30844,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 14749,
											"end": 14801,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 14820,
											"end": 14832,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 14820,
											"end": 14832,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 14820,
											"end": 14832,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 26505,
											"end": 26750,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 26757,
											"end": 27173,
											"name": "tag",
											"source": -1,
											"value": "164"
										},
										{
											"begin": 26757,
											"end": 27173,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 26957,
											"end": 26959,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 26971,
											"end": 27018,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 26971,
											"end": 27018,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 26971,
											"end": 27018,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 15071,
											"end": 15073,
											"name": "PUSH",
											"source": -1,
											"value": "23"
										},
										{
											"begin": 26942,
											"end": 26960,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 26942,
											"end": 26960,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 26942,
											"end": 26960,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 30790,
											"end": 30809,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 15107,
											"end": 15141,
											"name": "PUSH",
											"source": -1,
											"value": "4D75737420626520636F6E74726F6C6C65722D656E61626C656420536574546F"
										},
										{
											"begin": 30830,
											"end": 30844,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 30830,
											"end": 30844,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 30830,
											"end": 30844,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 15087,
											"end": 15142,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "35B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15162,
											"end": 15174,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 15162,
											"end": 15174,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 15162,
											"end": 15174,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 15155,
											"end": 15182,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 15201,
											"end": 15213,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 15201,
											"end": 15213,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 15201,
											"end": 15213,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 26928,
											"end": 27173,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 27180,
											"end": 27596,
											"name": "tag",
											"source": -1,
											"value": "154"
										},
										{
											"begin": 27180,
											"end": 27596,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 27380,
											"end": 27382,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 27394,
											"end": 27441,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 27394,
											"end": 27441,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 27394,
											"end": 27441,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 15452,
											"end": 15454,
											"name": "PUSH",
											"source": -1,
											"value": "1C"
										},
										{
											"begin": 27365,
											"end": 27383,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 27365,
											"end": 27383,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 27365,
											"end": 27383,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 30790,
											"end": 30809,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 15488,
											"end": 15518,
											"name": "PUSH",
											"source": -1,
											"value": "4D7573742062652074686520536574546F6B656E206D616E6167657200000000"
										},
										{
											"begin": 30830,
											"end": 30844,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 30830,
											"end": 30844,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 30830,
											"end": 30844,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 15468,
											"end": 15519,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 15538,
											"end": 15550,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 15538,
											"end": 15550,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 15538,
											"end": 15550,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 27351,
											"end": 27596,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 27603,
											"end": 28019,
											"name": "tag",
											"source": -1,
											"value": "311"
										},
										{
											"begin": 27603,
											"end": 28019,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 27803,
											"end": 27805,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 27817,
											"end": 27864,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 27817,
											"end": 27864,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 27817,
											"end": 27864,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 15789,
											"end": 15791,
											"name": "PUSH",
											"source": -1,
											"value": "2A"
										},
										{
											"begin": 27788,
											"end": 27806,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 27788,
											"end": 27806,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 27788,
											"end": 27806,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 30790,
											"end": 30809,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 15825,
											"end": 15859,
											"name": "PUSH",
											"source": -1,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 30830,
											"end": 30844,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 30830,
											"end": 30844,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 30830,
											"end": 30844,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 15805,
											"end": 15860,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDD081CDD58D8D95959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15880,
											"end": 15892,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 15880,
											"end": 15892,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 15880,
											"end": 15892,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 15873,
											"end": 15907,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 15926,
											"end": 15938,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 15926,
											"end": 15938,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 15926,
											"end": 15938,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 27774,
											"end": 28019,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 28026,
											"end": 28442,
											"name": "tag",
											"source": -1,
											"value": "53"
										},
										{
											"begin": 28026,
											"end": 28442,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 28226,
											"end": 28228,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 28240,
											"end": 28287,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 28240,
											"end": 28287,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 28240,
											"end": 28287,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 16177,
											"end": 16179,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 28211,
											"end": 28229,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 28211,
											"end": 28229,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 28211,
											"end": 28229,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 30790,
											"end": 30809,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 16213,
											"end": 16246,
											"name": "PUSH",
											"source": -1,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 30830,
											"end": 30844,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 30830,
											"end": 30844,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 30830,
											"end": 30844,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 16193,
											"end": 16247,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 16266,
											"end": 16278,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 16266,
											"end": 16278,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 16266,
											"end": 16278,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 28197,
											"end": 28442,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 28449,
											"end": 28671,
											"name": "tag",
											"source": -1,
											"value": "94"
										},
										{
											"begin": 28449,
											"end": 28671,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 16353,
											"end": 16390,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 16353,
											"end": 16390,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 16353,
											"end": 16390,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 28576,
											"end": 28578,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 28561,
											"end": 28579,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 28561,
											"end": 28579,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 28547,
											"end": 28671,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 28678,
											"end": 28934,
											"name": "tag",
											"source": -1,
											"value": "353"
										},
										{
											"begin": 28678,
											"end": 28934,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 28740,
											"end": 28742,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 28734,
											"end": 28743,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 28766,
											"end": 28783,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 28766,
											"end": 28783,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 28766,
											"end": 28783,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 28841,
											"end": 28859,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28826,
											"end": 28860,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 28826,
											"end": 28860,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 28862,
											"end": 28884,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 28862,
											"end": 28884,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 28862,
											"end": 28884,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 28823,
											"end": 28885,
											"name": "OR",
											"source": -1
										},
										{
											"begin": 28820,
											"end": 28822,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 28820,
											"end": 28822,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "440"
										},
										{
											"begin": 28820,
											"end": 28822,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 28898,
											"end": 28899,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28898,
											"end": 28899,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 28888,
											"end": 28900,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 28820,
											"end": 28822,
											"name": "tag",
											"source": -1,
											"value": "440"
										},
										{
											"begin": 28820,
											"end": 28822,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 28740,
											"end": 28742,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 28907,
											"end": 28929,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 28718,
											"end": 28934,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 28718,
											"end": 28934,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28718,
											"end": 28934,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 33692,
											"end": 33960,
											"name": "tag",
											"source": -1,
											"value": "370"
										},
										{
											"begin": 33692,
											"end": 33960,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 33757,
											"end": 33758,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 33764,
											"end": 33865,
											"name": "tag",
											"source": -1,
											"value": "443"
										},
										{
											"begin": 33764,
											"end": 33865,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 33778,
											"end": 33784,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 33775,
											"end": 33776,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 33772,
											"end": 33785,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 33764,
											"end": 33865,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 33764,
											"end": 33865,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "445"
										},
										{
											"begin": 33764,
											"end": 33865,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 33845,
											"end": 33856,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 33845,
											"end": 33856,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 33845,
											"end": 33856,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 33839,
											"end": 33857,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 33826,
											"end": 33837,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 33826,
											"end": 33837,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 33826,
											"end": 33837,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 33819,
											"end": 33858,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 33800,
											"end": 33802,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 33793,
											"end": 33803,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 33764,
											"end": 33865,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "443"
										},
										{
											"begin": 33764,
											"end": 33865,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 33764,
											"end": 33865,
											"name": "tag",
											"source": -1,
											"value": "445"
										},
										{
											"begin": 33764,
											"end": 33865,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 33880,
											"end": 33886,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 33877,
											"end": 33878,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 33874,
											"end": 33887,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 33871,
											"end": 33873,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 33871,
											"end": 33873,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "192"
										},
										{
											"begin": 33871,
											"end": 33873,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 33757,
											"end": 33758,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 33927,
											"end": 33943,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 33927,
											"end": 33943,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 33920,
											"end": 33947,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 33741,
											"end": 33960,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 34073,
											"end": 34190,
											"name": "tag",
											"source": -1,
											"value": "343"
										},
										{
											"begin": 34073,
											"end": 34190,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 32114,
											"end": 32168,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 32114,
											"end": 32168,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 34132,
											"end": 34167,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 34132,
											"end": 34167,
											"name": "EQ",
											"source": -1
										},
										{
											"begin": 34122,
											"end": 34124,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "167"
										},
										{
											"begin": 34122,
											"end": 34124,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 34181,
											"end": 34182,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 34181,
											"end": 34182,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 34171,
											"end": 34183,
											"name": "REVERT",
											"source": -1
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"controller()": "f77c4791",
							"getRequiredComponentUnitsForIssue(address,uint256)": "7a4ffd03",
							"initialize(address,address)": "485cc955",
							"issue(address,uint256,address)": "6d78f47a",
							"managerIssuanceHook(address)": "dfe75335",
							"redeem(address,uint256,address)": "5c833bfd",
							"removeModule()": "847ef08d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.10+commit.00c0fcaf\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IController\",\"name\":\"_controller\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_setToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_issuer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_hookContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"}],\"name\":\"SetTokenIssued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_setToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_redeemer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"}],\"name\":\"SetTokenRedeemed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"contract IController\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISetToken\",\"name\":\"_setToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"}],\"name\":\"getRequiredComponentUnitsForIssue\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISetToken\",\"name\":\"_setToken\",\"type\":\"address\"},{\"internalType\":\"contract IManagerIssuanceHook\",\"name\":\"_preIssueHook\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISetToken\",\"name\":\"_setToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"issue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISetToken\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"managerIssuanceHook\",\"outputs\":[{\"internalType\":\"contract IManagerIssuanceHook\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISetToken\",\"name\":\"_setToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"redeem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"removeModule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Set Protocol Module that enables issuance and redemption functionality on a SetToken. This is a module that is required to bring the totalSupply of a Set above 0.\",\"methods\":{\"constructor\":{\"params\":{\"_controller\":\"Address of controller contract\"}},\"getRequiredComponentUnitsForIssue(address,uint256)\":{\"params\":{\"_quantity\":\"Quantity of SetToken to issue\",\"_setToken\":\"Instance of the SetToken to issue\"},\"returns\":{\"_0\":\"address[]            List of component addresses\",\"_1\":\"uint256[]            List of component units required to issue the quantity of SetTokens\"}},\"initialize(address,address)\":{\"params\":{\"_preIssueHook\":\"Instance of the Manager Contract with the Pre-Issuance Hook function\",\"_setToken\":\"Instance of the SetToken to issue\"}},\"issue(address,uint256,address)\":{\"params\":{\"_quantity\":\"Quantity of the SetToken to mint\",\"_setToken\":\"Instance of the SetToken contract\",\"_to\":\"Address to mint SetToken to\"}},\"redeem(address,uint256,address)\":{\"params\":{\"_quantity\":\"Quantity of the SetToken to redeem\",\"_setToken\":\"Instance of the SetToken contract\",\"_to\":\"Address to send component assets to\"}}},\"title\":\"BasicIssuanceModule\"},\"userdoc\":{\"methods\":{\"constructor\":\"Set state controller state variable\",\"getRequiredComponentUnitsForIssue(address,uint256)\":{\"notice\":\"Retrieves the addresses and units required to mint a particular quantity of SetToken.\"},\"initialize(address,address)\":{\"notice\":\"Initializes this module to the SetToken with issuance-related hooks. Only callable by the SetToken's manager. Hook addresses are optional. Address(0) means that no hook will be called\"},\"issue(address,uint256,address)\":{\"notice\":\"Deposits the SetToken's position components into the SetToken and mints the SetToken of the given quantity to the specified _to address. This function only handles Default Positions (positionState = 0).\"},\"redeem(address,uint256,address)\":{\"notice\":\"Redeems the SetToken's positions and sends the components of the given quantity to the caller. This function only handles Default Positions (positionState = 0).\"},\"removeModule()\":{\"notice\":\"Reverts as this module should not be removable after added. Users should always have a way to redeem their Sets\"}}}},\"settings\":{\"compilationTarget\":{\"contracts/modules/BasicIssuanceModule.sol\":\"BasicIssuanceModule\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"@openzeppelin/contracts/math/SignedSafeMath.sol\":{\"keccak256\":\"0xd17ac7e1d8f83d20d80e652adfed83da122f3a3c7b69fefa2985d85aebf0a3e9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://64e13936e5e7382737f9c12918f5365fd9e68bf96e83d66f3323f47b1d7162c7\",\"dweb:/ipfs/Qmd2qkUCFdpAXJ6NNTkPxmkKaPzYYmeBhDey8N8XN39wqw\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xf12dfbe97e6276980b83d2830bb0eb75e0cf4f3e626c2471137f82158ae6a0fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a849c2d95e85463909e5b5c920b13e7a11216ca14127085e16d22b9379d52a\",\"dweb:/ipfs/QmUg3CZDbCCcQdroEpexBy5ZFd5vD1UWijWQq9qHZjtJNQ\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x8bbbc2f5c10065ee272592ae0a7a6ceb23de2fbd81564ee0bb015ecf404d5f61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b95e56c1640d0ef789fc5c16269e141e992f6c8ac97cc6d377bd3825e9cab182\",\"dweb:/ipfs/QmVzaxJZY51EhagrcNnkxoU6Uq17RhATe7aHvtkC6wUkgK\"]},\"@openzeppelin/contracts/utils/SafeCast.sol\":{\"keccak256\":\"0x7b2b8baa20fd60ab4a328c8e34c64a353651b80ba4b5b157cbb61813f6f85d55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://125b7f9efa390e663d630c62b97ae4e0707f31623bea989ef94c97ca9d777dd2\",\"dweb:/ipfs/QmaaLSuwvqK7wqcgyS3utHgfmB7RntcvP7eJSuvQod8Z9P\"]},\"contracts/interfaces/IController.sol\":{\"keccak256\":\"0x8deb2f94e24e9524ce4de88804c98694781d8f38fbadccc3207d28b8e0ce4911\",\"license\":\"Apache License\",\"urls\":[\"bzz-raw://755f656a314737b0eeffbee1b7dc257b751c0764d70f008beb6cccececaeb2d7\",\"dweb:/ipfs/QmUmFs1ukqWUmfcm5irGYHYZnv8NwMYGD3EUuoA5BvbhER\"]},\"contracts/interfaces/IIntegrationRegistry.sol\":{\"keccak256\":\"0xb9a2f67aa926694fcfa6b9f2300423a253162078b12e3ff0b8c864c5a143c975\",\"license\":\"Apache License\",\"urls\":[\"bzz-raw://2448da2adc2ca3c858e2413a0833f7a384e4a9430af0a923411d0d0ff1c5076d\",\"dweb:/ipfs/QmTEdnKViq2riEoDzfLwuXxtWdieLL8ZfRL7WanfQwXxHf\"]},\"contracts/interfaces/IManagerIssuanceHook.sol\":{\"keccak256\":\"0x3e7ee6c0e4cd496b28d7b0a6bc3cc1823f70ef3ba2f096f258610f17d3b4faea\",\"license\":\"Apache License\",\"urls\":[\"bzz-raw://c708d6e63031497b2148a454a27437a56b6ae9f5e44bb00f05e16814ae911ec5\",\"dweb:/ipfs/QmetNS7a4qwmiynTXVkG54KPdRFAHz57aaN9BEyjqf5yCM\"]},\"contracts/interfaces/IModule.sol\":{\"keccak256\":\"0xc6fea62e0c2fe10548cb32ff8188b7f036cd072ea2048b664e90b3570ce538fb\",\"license\":\"Apache License\",\"urls\":[\"bzz-raw://2a7594ef174c6bce3a502d34269dccf4e7f7382fc521aa9421bf31d000ca3525\",\"dweb:/ipfs/QmRBnDZnMrsEm45nhTAjzvb7znsKXdVTWy8f6FX1CiH8cu\"]},\"contracts/interfaces/IPriceOracle.sol\":{\"keccak256\":\"0xe7882bdc45986d01ebdbe189ac7b2b42de6ba06d070a331c2de61668ac805a62\",\"license\":\"Apache License\",\"urls\":[\"bzz-raw://ad37f4650905c70d415ddc8836e363e8a386f30a9764bb6b3f9fb0e183d73703\",\"dweb:/ipfs/QmNpk6Q3nAZmh4GDsdPaU56yLR4vuAwnoqQuQzBndDJTVq\"]},\"contracts/interfaces/ISetToken.sol\":{\"keccak256\":\"0x2f24b90ffc5e6bb97b169482fa915e9016fadbaade011a73d352201b396ebe12\",\"license\":\"Apache License\",\"urls\":[\"bzz-raw://8fbcd20954a2c646a953586e4a0a1cca0b968b3726c24c304dc3f6a4ce632f72\",\"dweb:/ipfs/QmQRHbqemSeohZuMWDaNrUaoQUUbP9i9UUdwn4Pph4ayAj\"]},\"contracts/interfaces/ISetValuer.sol\":{\"keccak256\":\"0xfd6d2658d8016f01c317bea67b4f4eb6af2ec2b953aa8a889d929115e045e834\",\"license\":\"Apache License\",\"urls\":[\"bzz-raw://c6265b2efc2d6a9bccf1c909e91b1ac6c83ce9aa91f597a7b69572d4ffd8ee8d\",\"dweb:/ipfs/QmeCnpzApGKUx52HYuRVKG8gKnMchh1gt5BjkGCWW6vV6m\"]},\"contracts/lib/AddressArrayUtils.sol\":{\"keccak256\":\"0x02e1a8a5f6ed402db74bb4bd3fd13041e2b9f93e17e8ca263c202003ef9874a8\",\"license\":\"Apache License\",\"urls\":[\"bzz-raw://be3a572a477380c7f473643c0bdd270647c6bc097c959fb1a0348686c1844872\",\"dweb:/ipfs/QmTgDCb18k72PHZpBpLn6dLx8CXpiPWTRLiUz5KdmYcja8\"]},\"contracts/lib/ExplicitERC20.sol\":{\"keccak256\":\"0x6b68bb213cffd51cbece27b1c7235240d84cc0f6da7a9f2ffeb07e65b3e82299\",\"license\":\"Apache License\",\"urls\":[\"bzz-raw://8362c95ef29efaed3cb3f90b623661c2d1b5c20aef58bd9d3ecd375f123b74f1\",\"dweb:/ipfs/QmfBG1JW7PrjsWf3Zib6hF9UdgPLmpghGSssTh7SAQVUKh\"]},\"contracts/lib/Invoke.sol\":{\"keccak256\":\"0x2de7e36a60fd21158bd18d5ad1029438e8ef56968a7d73311d9ee82c661517ee\",\"license\":\"Apache License\",\"urls\":[\"bzz-raw://6a2b560a709c26b35947585a5069804853905b8816af1a332588bf6e6b38b7d9\",\"dweb:/ipfs/QmTamJ76QyVqVZnk6Rd8h2czQFfzP6nrKhsPj6vrAJCuUY\"]},\"contracts/lib/ModuleBase.sol\":{\"keccak256\":\"0x55d0d483afaeb545eb776eaa94b215e0cb182496d3a3b9fbb497e3e5e08d97b7\",\"license\":\"Apache License\",\"urls\":[\"bzz-raw://9318612340faabce229223b1b3e4d1e81b38ae6c7476e63e5b9756b931b22f44\",\"dweb:/ipfs/QmWW9D4ngTmC6P7sjh3J9ArpxmPN3mbd4BJo6WxtjhgVo6\"]},\"contracts/lib/Position.sol\":{\"keccak256\":\"0x02c5cbb568149293b6715d8f298df643309e69cbf1c29fd62ceb1327e428c2aa\",\"license\":\"Apache License\",\"urls\":[\"bzz-raw://ebdb82002fc0bbd71cc63ac38e821603c9612984d650eba399a50323c1a7e8ef\",\"dweb:/ipfs/QmQKzrYP5a6bpyq4MyCPcXuauZ5ebKPhYYSPnZXHZcyv9J\"]},\"contracts/lib/PreciseUnitMath.sol\":{\"keccak256\":\"0x5846fd768188c3abb41084cd45e9069cbb32022d7924a085c317ed31ec6a8235\",\"license\":\"Apache License\",\"urls\":[\"bzz-raw://059eafd78a8397b8d030e088ce7a32f5e6b4d8496a054f58a81fcd94eae0b1d0\",\"dweb:/ipfs/QmekUPstuKpn8vvabvzVhvEtPFb1GwRSUUkFAtjieWgyUb\"]},\"contracts/lib/ResourceIdentifier.sol\":{\"keccak256\":\"0xd7071e04e50e12dad99a0454e6e2a262004383a692dd81fa560bd5670a8ddbb8\",\"license\":\"Apache License\",\"urls\":[\"bzz-raw://7229d152936f49d3adb865f90eb8078908c881cbfa873a063fb506611658d590\",\"dweb:/ipfs/QmU8oTBfv2e3Kagkz4Fm2xVFHT8sFKpb4qBoSP3CKXecAb\"]},\"contracts/modules/BasicIssuanceModule.sol\":{\"keccak256\":\"0x0cd6f4a42bdd9b0584379f01fc62bcebed86350bcd69a7fd21056c36b87f5639\",\"license\":\"Apache License\",\"urls\":[\"bzz-raw://639b790e7e546fd41fbc297edd199c850b946002e2095953b0ab3e731d14154b\",\"dweb:/ipfs/QmPmNnRNSWdnKE35drn6BCUvnEW2FQk55E8acpqzSa8Fg3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2750,
								"contract": "contracts/modules/BasicIssuanceModule.sol:BasicIssuanceModule",
								"label": "controller",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IController)1523"
							},
							{
								"astId": 1131,
								"contract": "contracts/modules/BasicIssuanceModule.sol:BasicIssuanceModule",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 4263,
								"contract": "contracts/modules/BasicIssuanceModule.sol:BasicIssuanceModule",
								"label": "managerIssuanceHook",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_contract(ISetToken)1867,t_contract(IManagerIssuanceHook)1589)"
							}
						],
						"types": {
							"t_contract(IController)1523": {
								"encoding": "inplace",
								"label": "contract IController",
								"numberOfBytes": "20"
							},
							"t_contract(IManagerIssuanceHook)1589": {
								"encoding": "inplace",
								"label": "contract IManagerIssuanceHook",
								"numberOfBytes": "20"
							},
							"t_contract(ISetToken)1867": {
								"encoding": "inplace",
								"label": "contract ISetToken",
								"numberOfBytes": "20"
							},
							"t_mapping(t_contract(ISetToken)1867,t_contract(IManagerIssuanceHook)1589)": {
								"encoding": "mapping",
								"key": "t_contract(ISetToken)1867",
								"label": "mapping(contract ISetToken => contract IManagerIssuanceHook)",
								"numberOfBytes": "32",
								"value": "t_contract(IManagerIssuanceHook)1589"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {
							"constructor": "Set state controller state variable",
							"getRequiredComponentUnitsForIssue(address,uint256)": {
								"notice": "Retrieves the addresses and units required to mint a particular quantity of SetToken."
							},
							"initialize(address,address)": {
								"notice": "Initializes this module to the SetToken with issuance-related hooks. Only callable by the SetToken's manager. Hook addresses are optional. Address(0) means that no hook will be called"
							},
							"issue(address,uint256,address)": {
								"notice": "Deposits the SetToken's position components into the SetToken and mints the SetToken of the given quantity to the specified _to address. This function only handles Default Positions (positionState = 0)."
							},
							"redeem(address,uint256,address)": {
								"notice": "Redeems the SetToken's positions and sends the components of the given quantity to the caller. This function only handles Default Positions (positionState = 0)."
							},
							"removeModule()": {
								"notice": "Reverts as this module should not be removable after added. Users should always have a way to redeem their Sets"
							}
						}
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							354
						]
					},
					"id": 355,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "66:563:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 354,
							"linearizedBaseContracts": [
								354
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 32,
										"nodeType": "Block",
										"src": "865:98:0",
										"statements": [
											{
												"assignments": [
													15
												],
												"declarations": [
													{
														"constant": false,
														"id": 15,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 32,
														"src": "875:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 14,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "875:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 19,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 16,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "887:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 17,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "891:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "887:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "875:17:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 20,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "906:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 21,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "910:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "906:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 27,
												"nodeType": "IfStatement",
												"src": "902:28:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 23,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "921:5:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 24,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "928:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 25,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "920:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 13,
													"id": 26,
													"nodeType": "Return",
													"src": "913:17:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 28,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "948:4:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"id": 29,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "954:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 30,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "947:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 13,
												"id": 31,
												"nodeType": "Return",
												"src": "940:16:0"
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "653:131:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 33,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 33,
												"src": "805:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "805:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 33,
												"src": "816:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "816:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "804:22:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 33,
												"src": "850:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 9,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "850:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 33,
												"src": "856:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "856:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "849:15:0"
									},
									"scope": 354,
									"src": "789:174:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1185:75:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 45,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 38,
														"src": "1199:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 46,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "1203:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1199:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 52,
												"nodeType": "IfStatement",
												"src": "1195:28:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1214:5:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 49,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1221:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 50,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1213:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 44,
													"id": 51,
													"nodeType": "Return",
													"src": "1206:17:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1241:4:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 54,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 36,
																"src": "1247:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"argumentTypes": null,
																"id": 55,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 38,
																"src": "1251:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1247:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 57,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1240:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 44,
												"id": 58,
												"nodeType": "Return",
												"src": "1233:20:0"
											}
										]
									},
									"documentation": {
										"id": 34,
										"nodeType": "StructuredDocumentation",
										"src": "969:135:0",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 60,
												"src": "1125:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 35,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1125:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 60,
												"src": "1136:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1136:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1124:22:0"
									},
									"returnParameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 60,
												"src": "1170:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 40,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1170:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 60,
												"src": "1176:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 42,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1176:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1169:15:0"
									},
									"scope": 354,
									"src": "1109:151:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 100,
										"nodeType": "Block",
										"src": "1484:359:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 74,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 72,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 63,
														"src": "1716:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 73,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1721:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1716:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 79,
												"nodeType": "IfStatement",
												"src": "1712:28:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1732:4:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 76,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1738:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 77,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1731:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 71,
													"id": 78,
													"nodeType": "Return",
													"src": "1724:16:0"
												}
											},
											{
												"assignments": [
													81
												],
												"declarations": [
													{
														"constant": false,
														"id": 81,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 100,
														"src": "1750:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 80,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1750:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 85,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 82,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 63,
														"src": "1762:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 83,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 65,
														"src": "1766:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1762:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1750:17:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 88,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 86,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "1781:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"id": 87,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "1785:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1781:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 89,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 65,
														"src": "1790:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1781:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 95,
												"nodeType": "IfStatement",
												"src": "1777:33:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 91,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1801:5:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1808:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 93,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1800:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 71,
													"id": 94,
													"nodeType": "Return",
													"src": "1793:17:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1828:4:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"id": 97,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "1834:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 98,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1827:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 71,
												"id": 99,
												"nodeType": "Return",
												"src": "1820:16:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1266:137:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 101,
												"src": "1424:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 62,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1424:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 101,
												"src": "1435:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1435:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1423:22:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 101,
												"src": "1469:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 67,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1469:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 101,
												"src": "1475:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 69,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1475:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1468:15:0"
									},
									"scope": 354,
									"src": "1408:435:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "2068:76:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 113,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 106,
														"src": "2082:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 114,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2087:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2082:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2078:29:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 116,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2098:5:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2105:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 118,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2097:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 112,
													"id": 119,
													"nodeType": "Return",
													"src": "2090:17:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 121,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2125:4:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 122,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 104,
																"src": "2131:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"argumentTypes": null,
																"id": 123,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 106,
																"src": "2135:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2131:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 125,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2124:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 112,
												"id": 126,
												"nodeType": "Return",
												"src": "2117:20:0"
											}
										]
									},
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "1849:138:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 128,
												"src": "2008:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 128,
												"src": "2019:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2019:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2007:22:0"
									},
									"returnParameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 128,
												"src": "2053:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 108,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2053:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 128,
												"src": "2059:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2059:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2052:15:0"
									},
									"scope": 354,
									"src": "1992:152:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 154,
										"nodeType": "Block",
										"src": "2379:76:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 140,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "2393:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 141,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2398:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2393:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 147,
												"nodeType": "IfStatement",
												"src": "2389:29:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 143,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2409:5:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 144,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2416:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 145,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2408:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 139,
													"id": 146,
													"nodeType": "Return",
													"src": "2401:17:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 148,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2436:4:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 149,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 131,
																"src": "2442:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"argumentTypes": null,
																"id": 150,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 133,
																"src": "2446:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2442:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 152,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2435:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 139,
												"id": 153,
												"nodeType": "Return",
												"src": "2428:20:0"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "2150:148:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 155,
												"src": "2319:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2319:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 155,
												"src": "2330:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2318:22:0"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 155,
												"src": "2364:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 135,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2364:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 155,
												"src": "2370:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2370:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2363:15:0"
									},
									"scope": 354,
									"src": "2303:152:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 180,
										"nodeType": "Block",
										"src": "2757:108:0",
										"statements": [
											{
												"assignments": [
													166
												],
												"declarations": [
													{
														"constant": false,
														"id": 166,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 180,
														"src": "2767:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 165,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2767:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 170,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 167,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "2779:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 168,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 160,
														"src": "2783:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2779:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2767:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 172,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 166,
																"src": "2802:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 173,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 158,
																"src": "2807:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2802:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 175,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2810:29:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 171,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2794:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2794:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 177,
												"nodeType": "ExpressionStatement",
												"src": "2794:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 178,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 166,
													"src": "2857:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 164,
												"id": 179,
												"nodeType": "Return",
												"src": "2850:8:0"
											}
										]
									},
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "2461:224:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 181,
												"src": "2703:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 181,
												"src": "2714:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2714:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2702:22:0"
									},
									"returnParameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 181,
												"src": "2748:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2748:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2747:9:0"
									},
									"scope": 354,
									"src": "2690:175:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 202,
										"nodeType": "Block",
										"src": "3203:88:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 192,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 186,
																"src": "3221:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 193,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 184,
																"src": "3226:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3221:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 195,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3229:32:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 191,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3213:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3213:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 197,
												"nodeType": "ExpressionStatement",
												"src": "3213:49:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 198,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 184,
														"src": "3279:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 199,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 186,
														"src": "3283:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3279:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 190,
												"id": 201,
												"nodeType": "Return",
												"src": "3272:12:0"
											}
										]
									},
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "2871:260:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 203,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 203,
												"src": "3149:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3149:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 203,
												"src": "3160:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3160:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3148:22:0"
									},
									"returnParameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 203,
												"src": "3194:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3194:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3193:9:0"
									},
									"scope": 354,
									"src": "3136:155:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3605:148:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 213,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 206,
														"src": "3619:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 214,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3624:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3619:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 218,
												"nodeType": "IfStatement",
												"src": "3615:20:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 216,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3634:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 212,
													"id": 217,
													"nodeType": "Return",
													"src": "3627:8:0"
												}
											},
											{
												"assignments": [
													220
												],
												"declarations": [
													{
														"constant": false,
														"id": 220,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 236,
														"src": "3645:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 219,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3645:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 224,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 221,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 206,
														"src": "3657:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 222,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "3661:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3657:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3645:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 228,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 226,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 220,
																	"src": "3680:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 227,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 206,
																	"src": "3684:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3680:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 229,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 208,
																"src": "3689:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3680:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 231,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3692:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 225,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3672:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3672:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 233,
												"nodeType": "ExpressionStatement",
												"src": "3672:56:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 234,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 220,
													"src": "3745:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 212,
												"id": 235,
												"nodeType": "Return",
												"src": "3738:8:0"
											}
										]
									},
									"documentation": {
										"id": 204,
										"nodeType": "StructuredDocumentation",
										"src": "3297:236:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 237,
												"src": "3551:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 237,
												"src": "3562:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3562:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3550:22:0"
									},
									"returnParameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 237,
												"src": "3596:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3596:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3595:9:0"
									},
									"scope": 354,
									"src": "3538:215:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 258,
										"nodeType": "Block",
										"src": "4284:83:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 248,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 242,
																"src": "4302:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 249,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4306:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4302:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 251,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4309:28:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 247,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4294:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4294:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 253,
												"nodeType": "ExpressionStatement",
												"src": "4294:44:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 254,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 240,
														"src": "4355:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 255,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 242,
														"src": "4359:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4355:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 246,
												"id": 257,
												"nodeType": "Return",
												"src": "4348:12:0"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3759:453:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 259,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 259,
												"src": "4230:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4230:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 259,
												"src": "4241:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4241:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4229:22:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 259,
												"src": "4275:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4275:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4274:9:0"
									},
									"scope": 354,
									"src": "4217:150:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 280,
										"nodeType": "Block",
										"src": "4887:81:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 270,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 264,
																"src": "4905:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 271,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4909:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4905:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4912:26:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 269,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4897:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 275,
												"nodeType": "ExpressionStatement",
												"src": "4897:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 276,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 262,
														"src": "4956:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 277,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "4960:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4956:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 268,
												"id": 279,
												"nodeType": "Return",
												"src": "4949:12:0"
											}
										]
									},
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "4373:442:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 281,
												"src": "4833:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4833:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 281,
												"src": "4844:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4844:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4832:22:0"
									},
									"returnParameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 281,
												"src": "4878:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4878:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4877:9:0"
									},
									"scope": 354,
									"src": "4820:148:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 304,
										"nodeType": "Block",
										"src": "5527:68:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 294,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 286,
																"src": "5545:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 295,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 284,
																"src": "5550:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5545:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 297,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "5553:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 293,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5537:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5537:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 299,
												"nodeType": "ExpressionStatement",
												"src": "5537:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 300,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "5583:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 301,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 286,
														"src": "5587:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5583:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 292,
												"id": 303,
												"nodeType": "Return",
												"src": "5576:12:0"
											}
										]
									},
									"documentation": {
										"id": 282,
										"nodeType": "StructuredDocumentation",
										"src": "4974:453:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 305,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 305,
												"src": "5445:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 305,
												"src": "5456:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5456:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 305,
												"src": "5467:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 287,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5467:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5444:50:0"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 305,
												"src": "5518:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5518:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5517:9:0"
									},
									"scope": 354,
									"src": "5432:163:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 328,
										"nodeType": "Block",
										"src": "6347:67:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 318,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 310,
																"src": "6365:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 319,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6369:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6365:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 321,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "6372:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 317,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6357:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6357:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "6357:28:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 324,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "6402:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 325,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 310,
														"src": "6406:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6402:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 316,
												"id": 327,
												"nodeType": "Return",
												"src": "6395:12:0"
											}
										]
									},
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "5601:646:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryDiv}.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 329,
												"src": "6265:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6265:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 329,
												"src": "6276:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6276:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 329,
												"src": "6287:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 311,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6287:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6264:50:0"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 329,
												"src": "6338:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6338:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6337:9:0"
									},
									"scope": 354,
									"src": "6252:162:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 352,
										"nodeType": "Block",
										"src": "7155:67:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 342,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 334,
																"src": "7173:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 343,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7177:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7173:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 345,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "7180:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 341,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7165:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7165:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "ExpressionStatement",
												"src": "7165:28:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 348,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 332,
														"src": "7210:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 349,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 334,
														"src": "7214:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7210:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 340,
												"id": 351,
												"nodeType": "Return",
												"src": "7203:12:0"
											}
										]
									},
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "6420:635:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 353,
												"src": "7073:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7073:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 353,
												"src": "7084:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7084:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 353,
												"src": "7095:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 335,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7095:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7072:50:0"
									},
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 353,
												"src": "7146:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7146:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7145:9:0"
									},
									"scope": 354,
									"src": "7060:162:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 355,
							"src": "630:6594:0"
						}
					],
					"src": "33:7192:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/math/SignedSafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/math/SignedSafeMath.sol",
					"exportedSymbols": {
						"SignedSafeMath": [
							533
						]
					},
					"id": 534,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 356,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 357,
								"nodeType": "StructuredDocumentation",
								"src": "66:104:1",
								"text": " @title SignedSafeMath\n @dev Signed math operations with safety checks that revert on error."
							},
							"fullyImplemented": true,
							"id": 533,
							"linearizedBaseContracts": [
								533
							],
							"name": "SignedSafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 363,
									"mutability": "constant",
									"name": "_INT256_MIN",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 533,
									"src": "200:45:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int256",
										"typeString": "int256"
									},
									"typeName": {
										"id": 358,
										"name": "int256",
										"nodeType": "ElementaryTypeName",
										"src": "200:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_rational_minus_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
											"typeString": "int_const -578...(70 digits omitted)...9968"
										},
										"id": 362,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"id": 360,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "UnaryOperation",
											"operator": "-",
											"prefix": true,
											"src": "238:2:1",
											"subExpression": {
												"argumentTypes": null,
												"hexValue": "32",
												"id": 359,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "239:1:1",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											"typeDescriptions": {
												"typeIdentifier": "t_rational_minus_2_by_1",
												"typeString": "int_const -2"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "**",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "323535",
											"id": 361,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "242:3:1",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_255_by_1",
												"typeString": "int_const 255"
											},
											"value": "255"
										},
										"src": "238:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_minus_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
											"typeString": "int_const -578...(70 digits omitted)...9968"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 411,
										"nodeType": "Block",
										"src": "555:490:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 373,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 366,
														"src": "787:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 374,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "792:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "787:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 379,
												"nodeType": "IfStatement",
												"src": "783:45:1",
												"trueBody": {
													"id": 378,
													"nodeType": "Block",
													"src": "795:33:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 376,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "816:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 372,
															"id": 377,
															"nodeType": "Return",
															"src": "809:8:1"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "846:30:1",
															"subExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 388,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 384,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 381,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 366,
																				"src": "848:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 383,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "-",
																				"prefix": true,
																				"src": "853:2:1",
																				"subExpression": {
																					"argumentTypes": null,
																					"hexValue": "31",
																					"id": 382,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "854:1:1",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_minus_1_by_1",
																					"typeString": "int_const -1"
																				}
																			},
																			"src": "848:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 387,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 385,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 368,
																				"src": "859:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 386,
																				"name": "_INT256_MIN",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 363,
																				"src": "864:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "859:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "848:27:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 389,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "847:29:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5369676e6564536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 391,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "878:41:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a608fbdf6cc4ee9c43b141f63e234f4edb26cfb78aba3140cfd865641cb2c954",
																"typeString": "literal_string \"SignedSafeMath: multiplication overflow\""
															},
															"value": "SignedSafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a608fbdf6cc4ee9c43b141f63e234f4edb26cfb78aba3140cfd865641cb2c954",
																"typeString": "literal_string \"SignedSafeMath: multiplication overflow\""
															}
														],
														"id": 380,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "838:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "838:82:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 393,
												"nodeType": "ExpressionStatement",
												"src": "838:82:1"
											},
											{
												"assignments": [
													395
												],
												"declarations": [
													{
														"constant": false,
														"id": 395,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 411,
														"src": "931:8:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 394,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "931:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 396,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 366,
														"src": "942:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 397,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 368,
														"src": "946:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "942:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "931:16:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 401,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 395,
																	"src": "965:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 402,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 366,
																	"src": "969:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "965:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 404,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 368,
																"src": "974:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "965:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5369676e6564536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 406,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "977:41:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a608fbdf6cc4ee9c43b141f63e234f4edb26cfb78aba3140cfd865641cb2c954",
																"typeString": "literal_string \"SignedSafeMath: multiplication overflow\""
															},
															"value": "SignedSafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a608fbdf6cc4ee9c43b141f63e234f4edb26cfb78aba3140cfd865641cb2c954",
																"typeString": "literal_string \"SignedSafeMath: multiplication overflow\""
															}
														],
														"id": 400,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "957:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "957:62:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 408,
												"nodeType": "ExpressionStatement",
												"src": "957:62:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 409,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 395,
													"src": "1037:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 372,
												"id": 410,
												"nodeType": "Return",
												"src": "1030:8:1"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "252:234:1",
										"text": " @dev Returns the multiplication of two signed integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 412,
												"src": "504:8:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 365,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 412,
												"src": "514:8:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 367,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "503:20:1"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 412,
												"src": "547:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 370,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "546:8:1"
									},
									"scope": 533,
									"src": "491:554:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 451,
										"nodeType": "Block",
										"src": "1569:200:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 423,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 417,
																"src": "1587:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 424,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1592:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1587:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5369676e6564536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 426,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1595:34:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebc4d0068c2e029285c70894a725032247a74fcdc822ba305ea67dbddf7750bd",
																"typeString": "literal_string \"SignedSafeMath: division by zero\""
															},
															"value": "SignedSafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebc4d0068c2e029285c70894a725032247a74fcdc822ba305ea67dbddf7750bd",
																"typeString": "literal_string \"SignedSafeMath: division by zero\""
															}
														],
														"id": 422,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1579:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1579:51:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 428,
												"nodeType": "ExpressionStatement",
												"src": "1579:51:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1648:30:1",
															"subExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 437,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 433,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 430,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 417,
																				"src": "1650:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 432,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "-",
																				"prefix": true,
																				"src": "1655:2:1",
																				"subExpression": {
																					"argumentTypes": null,
																					"hexValue": "31",
																					"id": 431,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1656:1:1",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_minus_1_by_1",
																					"typeString": "int_const -1"
																				}
																			},
																			"src": "1650:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 436,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 434,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 415,
																				"src": "1661:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 435,
																				"name": "_INT256_MIN",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 363,
																				"src": "1666:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "1661:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1650:27:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 438,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1649:29:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5369676e6564536166654d6174683a206469766973696f6e206f766572666c6f77",
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1680:35:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7bc0f3df013376568eb9f7cb8999198097051f79bdb4d07d83447767f5224b81",
																"typeString": "literal_string \"SignedSafeMath: division overflow\""
															},
															"value": "SignedSafeMath: division overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7bc0f3df013376568eb9f7cb8999198097051f79bdb4d07d83447767f5224b81",
																"typeString": "literal_string \"SignedSafeMath: division overflow\""
															}
														],
														"id": 429,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1640:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1640:76:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 442,
												"nodeType": "ExpressionStatement",
												"src": "1640:76:1"
											},
											{
												"assignments": [
													444
												],
												"declarations": [
													{
														"constant": false,
														"id": 444,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 451,
														"src": "1727:8:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 443,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "1727:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 448,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 445,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 415,
														"src": "1738:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 446,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 417,
														"src": "1742:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "1738:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1727:16:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 449,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 444,
													"src": "1761:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 421,
												"id": 450,
												"nodeType": "Return",
												"src": "1754:8:1"
											}
										]
									},
									"documentation": {
										"id": 413,
										"nodeType": "StructuredDocumentation",
										"src": "1051:449:1",
										"text": " @dev Returns the integer division of two signed integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 452,
												"src": "1518:8:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 414,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1518:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 452,
												"src": "1528:8:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 416,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1517:20:1"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 452,
												"src": "1561:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 419,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1561:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1560:8:1"
									},
									"scope": 533,
									"src": "1505:264:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 491,
										"nodeType": "Block",
										"src": "2072:149:1",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 491,
														"src": "2082:8:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 462,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "2082:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 467,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 464,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 455,
														"src": "2093:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 465,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 457,
														"src": "2097:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "2093:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2082:16:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 475,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 471,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 469,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 457,
																				"src": "2117:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 470,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2122:1:1",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "2117:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 472,
																				"name": "c",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 463,
																				"src": "2127:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 473,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 455,
																				"src": "2132:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "2127:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "2117:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 476,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2116:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 483,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 479,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 477,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 457,
																				"src": "2139:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 478,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2143:1:1",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "2139:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 482,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 480,
																				"name": "c",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 463,
																				"src": "2148:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 481,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 455,
																				"src": "2152:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "2148:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "2139:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 484,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2138:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2116:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5369676e6564536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 486,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2156:38:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dfe37ab0612d67daeef366062296f3ebcaf7e2cc3eb392bf66a6cb5a7bed3bcd",
																"typeString": "literal_string \"SignedSafeMath: subtraction overflow\""
															},
															"value": "SignedSafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dfe37ab0612d67daeef366062296f3ebcaf7e2cc3eb392bf66a6cb5a7bed3bcd",
																"typeString": "literal_string \"SignedSafeMath: subtraction overflow\""
															}
														],
														"id": 468,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2108:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2108:87:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 488,
												"nodeType": "ExpressionStatement",
												"src": "2108:87:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 489,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 463,
													"src": "2213:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 461,
												"id": 490,
												"nodeType": "Return",
												"src": "2206:8:1"
											}
										]
									},
									"documentation": {
										"id": 453,
										"nodeType": "StructuredDocumentation",
										"src": "1775:228:1",
										"text": " @dev Returns the subtraction of two signed integers, reverting on\n overflow.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 492,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 492,
												"src": "2021:8:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 454,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "2021:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 492,
												"src": "2031:8:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 456,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "2031:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2020:20:1"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 492,
												"src": "2064:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 459,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "2064:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2063:8:1"
									},
									"scope": 533,
									"src": "2008:213:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 531,
										"nodeType": "Block",
										"src": "2518:146:1",
										"statements": [
											{
												"assignments": [
													503
												],
												"declarations": [
													{
														"constant": false,
														"id": 503,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 531,
														"src": "2528:8:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 502,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "2528:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 507,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 504,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 495,
														"src": "2539:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 505,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 497,
														"src": "2543:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "2539:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2528:16:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 515,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 511,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 509,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 497,
																				"src": "2563:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 510,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2568:1:1",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "2563:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 514,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 512,
																				"name": "c",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 503,
																				"src": "2573:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 513,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 495,
																				"src": "2578:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "2573:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "2563:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 516,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2562:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 523,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 519,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 517,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 497,
																				"src": "2585:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 518,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2589:1:1",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "2585:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 522,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 520,
																				"name": "c",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 503,
																				"src": "2594:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 521,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 495,
																				"src": "2598:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "2594:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "2585:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 524,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2584:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2562:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5369676e6564536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 526,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2602:35:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47c8d4a3974eee4fcf9925cffefc088ed6ac723b55fb65cf621edb1b7db7b8eb",
																"typeString": "literal_string \"SignedSafeMath: addition overflow\""
															},
															"value": "SignedSafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47c8d4a3974eee4fcf9925cffefc088ed6ac723b55fb65cf621edb1b7db7b8eb",
																"typeString": "literal_string \"SignedSafeMath: addition overflow\""
															}
														],
														"id": 508,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2554:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2554:84:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 528,
												"nodeType": "ExpressionStatement",
												"src": "2554:84:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 529,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 503,
													"src": "2656:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 501,
												"id": 530,
												"nodeType": "Return",
												"src": "2649:8:1"
											}
										]
									},
									"documentation": {
										"id": 493,
										"nodeType": "StructuredDocumentation",
										"src": "2227:222:1",
										"text": " @dev Returns the addition of two signed integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 532,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 532,
												"src": "2467:8:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 494,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "2467:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 532,
												"src": "2477:8:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 496,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "2477:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2466:20:1"
									},
									"returnParameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 532,
												"src": "2510:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 499,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "2510:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2509:8:1"
									},
									"scope": 533,
									"src": "2454:210:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 534,
							"src": "171:2495:1"
						}
					],
					"src": "33:2634:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							611
						]
					},
					"id": 612,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 535,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 536,
								"nodeType": "StructuredDocumentation",
								"src": "66:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 611,
							"linearizedBaseContracts": [
								611
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 537,
										"nodeType": "StructuredDocumentation",
										"src": "160:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 542,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "251:2:2"
									},
									"returnParameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 542,
												"src": "277:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "277:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "276:9:2"
									},
									"scope": 611,
									"src": "231:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "292:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 550,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 550,
												"src": "388:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "388:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "387:17:2"
									},
									"returnParameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 550,
												"src": "428:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "427:9:2"
									},
									"scope": 611,
									"src": "369:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 551,
										"nodeType": "StructuredDocumentation",
										"src": "443:209:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 560,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 560,
												"src": "675:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 552,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "675:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 560,
												"src": "694:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 554,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "694:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "674:35:2"
									},
									"returnParameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 560,
												"src": "728:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 557,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "728:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "727:6:2"
									},
									"scope": 611,
									"src": "657:77:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 561,
										"nodeType": "StructuredDocumentation",
										"src": "740:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 570,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 570,
												"src": "1028:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 562,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 570,
												"src": "1043:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1027:32:2"
									},
									"returnParameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 570,
												"src": "1083:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1083:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1082:9:2"
									},
									"scope": 611,
									"src": "1009:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 571,
										"nodeType": "StructuredDocumentation",
										"src": "1098:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 580,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 580,
												"src": "1762:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1762:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 580,
												"src": "1779:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1779:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1761:33:2"
									},
									"returnParameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 580,
												"src": "1813:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 577,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1813:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1812:6:2"
									},
									"scope": 611,
									"src": "1745:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 581,
										"nodeType": "StructuredDocumentation",
										"src": "1825:296:2",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 592,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 592,
												"src": "2148:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 582,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2148:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 592,
												"src": "2164:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 584,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2164:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 592,
												"src": "2183:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 586,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2183:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2147:51:2"
									},
									"returnParameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 592,
												"src": "2217:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 589,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2217:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2216:6:2"
									},
									"scope": 611,
									"src": "2126:97:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 593,
										"nodeType": "StructuredDocumentation",
										"src": "2229:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 601,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 595,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 601,
												"src": "2407:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 594,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2407:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 597,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 601,
												"src": "2429:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 599,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 601,
												"src": "2449:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 598,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2449:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2406:57:2"
									},
									"src": "2392:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 602,
										"nodeType": "StructuredDocumentation",
										"src": "2470:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 610,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 610,
												"src": "2638:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 603,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2638:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 606,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 610,
												"src": "2661:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2661:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 610,
												"src": "2686:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2686:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2637:63:2"
									},
									"src": "2623:78:2"
								}
							],
							"scope": 612,
							"src": "137:2566:2"
						}
					],
					"src": "33:2671:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
					"exportedSymbols": {
						"SafeERC20": [
							824
						]
					},
					"id": 825,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 613,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 614,
							"nodeType": "ImportDirective",
							"scope": 825,
							"sourceUnit": 612,
							"src": "66:22:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
							"file": "../../math/SafeMath.sol",
							"id": 615,
							"nodeType": "ImportDirective",
							"scope": 825,
							"sourceUnit": 355,
							"src": "89:33:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 616,
							"nodeType": "ImportDirective",
							"scope": 825,
							"sourceUnit": 1121,
							"src": "123:33:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 617,
								"nodeType": "StructuredDocumentation",
								"src": "158:457:3",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 824,
							"linearizedBaseContracts": [
								824
							],
							"name": "SafeERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 620,
									"libraryName": {
										"contractScope": null,
										"id": 618,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 354,
										"src": "646:8:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$354",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "640:27:3",
									"typeName": {
										"id": 619,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "659:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 623,
									"libraryName": {
										"contractScope": null,
										"id": 621,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1120,
										"src": "678:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$1120",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "672:26:3",
									"typeName": {
										"id": 622,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "690:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 644,
										"nodeType": "Block",
										"src": "776:103:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 633,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 625,
															"src": "806:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$611",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 636,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 625,
																			"src": "836:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$611",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 637,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 560,
																		"src": "836:14:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "836:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 639,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 627,
																	"src": "861:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 640,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 629,
																	"src": "865:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 634,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "813:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 635,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "813:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 641,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "813:58:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$611",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 632,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 823,
														"src": "786:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$611_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "786:86:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 643,
												"nodeType": "ExpressionStatement",
												"src": "786:86:3"
											}
										]
									},
									"documentation": null,
									"id": 645,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 645,
												"src": "726:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$611",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 624,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 611,
													"src": "726:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$611",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 645,
												"src": "740:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 626,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "740:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 645,
												"src": "752:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 628,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "752:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "725:41:3"
									},
									"returnParameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "776:0:3"
									},
									"scope": 824,
									"src": "704:175:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 669,
										"nodeType": "Block",
										"src": "975:113:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 657,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "1005:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$611",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 660,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 647,
																			"src": "1035:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$611",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 661,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 592,
																		"src": "1035:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 662,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1035:27:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 663,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 649,
																	"src": "1064:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 664,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 651,
																	"src": "1070:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 665,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 653,
																	"src": "1074:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 658,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "1012:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 659,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1012:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 666,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1012:68:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$611",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 656,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 823,
														"src": "985:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$611_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "985:96:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 668,
												"nodeType": "ExpressionStatement",
												"src": "985:96:3"
											}
										]
									},
									"documentation": null,
									"id": 670,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 670,
												"src": "911:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$611",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 646,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 611,
													"src": "911:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$611",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 670,
												"src": "925:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "925:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 670,
												"src": "939:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "939:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 670,
												"src": "951:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "951:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "910:55:3"
									},
									"returnParameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "975:0:3"
									},
									"scope": 824,
									"src": "885:203:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 712,
										"nodeType": "Block",
										"src": "1424:537:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 696,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 683,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 681,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 677,
																			"src": "1713:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 682,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1722:1:3",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1713:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 684,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1712:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 694,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 689,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": -28,
																							"src": "1753:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$824",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$824",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 688,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1745:7:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 687,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1745:7:3",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					},
																					"id": 690,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1745:13:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 691,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 675,
																					"src": "1760:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 685,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 673,
																					"src": "1729:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$611",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 686,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 570,
																				"src": "1729:15:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 692,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1729:39:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 693,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1772:1:3",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1729:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 695,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1728:46:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1712:62:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 697,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1788:56:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 680,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1704:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1704:150:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 699,
												"nodeType": "ExpressionStatement",
												"src": "1704:150:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 701,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 673,
															"src": "1884:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$611",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 704,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 673,
																			"src": "1914:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$611",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 705,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 580,
																		"src": "1914:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 706,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1914:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 707,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 675,
																	"src": "1938:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 708,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 677,
																	"src": "1947:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 702,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "1891:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 703,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1891:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 709,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1891:62:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$611",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 700,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 823,
														"src": "1864:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$611_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1864:90:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 711,
												"nodeType": "ExpressionStatement",
												"src": "1864:90:3"
											}
										]
									},
									"documentation": {
										"id": 671,
										"nodeType": "StructuredDocumentation",
										"src": "1094:249:3",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 713,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 713,
												"src": "1369:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$611",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 672,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 611,
													"src": "1369:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$611",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 713,
												"src": "1383:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1383:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 713,
												"src": "1400:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 676,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1400:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1368:46:3"
									},
									"returnParameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1424:0:3"
									},
									"scope": 824,
									"src": "1348:613:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 748,
										"nodeType": "Block",
										"src": "2053:197:3",
										"statements": [
											{
												"assignments": [
													723
												],
												"declarations": [
													{
														"constant": false,
														"id": 723,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 748,
														"src": "2063:20:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 722,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2063:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 735,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 733,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 719,
															"src": "2130:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 728,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2110:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$824",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$824",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2102:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 726,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2102:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 729,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2102:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 730,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 717,
																	"src": "2117:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 724,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 715,
																	"src": "2086:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$611",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 725,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 570,
																"src": "2086:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 731,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2086:39:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 732,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 181,
														"src": "2086:43:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2086:50:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2063:73:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 737,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 715,
															"src": "2166:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$611",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 740,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 715,
																			"src": "2196:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$611",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 741,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 580,
																		"src": "2196:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 742,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2196:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 743,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 717,
																	"src": "2220:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 744,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 723,
																	"src": "2229:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 738,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "2173:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 739,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2173:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 745,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2173:69:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$611",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 736,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 823,
														"src": "2146:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$611_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2146:97:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 747,
												"nodeType": "ExpressionStatement",
												"src": "2146:97:3"
											}
										]
									},
									"documentation": null,
									"id": 749,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 749,
												"src": "1998:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$611",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 714,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 611,
													"src": "1998:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$611",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 749,
												"src": "2012:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 716,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2012:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 749,
												"src": "2029:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2029:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1997:46:3"
									},
									"returnParameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2053:0:3"
									},
									"scope": 824,
									"src": "1967:283:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 785,
										"nodeType": "Block",
										"src": "2342:242:3",
										"statements": [
											{
												"assignments": [
													759
												],
												"declarations": [
													{
														"constant": false,
														"id": 759,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 785,
														"src": "2352:20:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 758,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2352:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 772,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 769,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "2419:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 770,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2426:43:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															},
															"value": "SafeERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 764,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2399:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$824",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$824",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 763,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2391:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 762,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2391:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 765,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2391:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 766,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 753,
																	"src": "2406:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 760,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 751,
																	"src": "2375:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$611",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 761,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 570,
																"src": "2375:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 767,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2375:39:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 768,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 305,
														"src": "2375:43:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2375:95:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2352:118:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 774,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 751,
															"src": "2500:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$611",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 777,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 751,
																			"src": "2530:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$611",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 778,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 580,
																		"src": "2530:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 779,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2530:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 780,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 753,
																	"src": "2554:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 781,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 759,
																	"src": "2563:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 775,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "2507:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2507:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 782,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2507:69:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$611",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 773,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 823,
														"src": "2480:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$611_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2480:97:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 784,
												"nodeType": "ExpressionStatement",
												"src": "2480:97:3"
											}
										]
									},
									"documentation": null,
									"id": 786,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 786,
												"src": "2287:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$611",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 750,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 611,
													"src": "2287:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$611",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 786,
												"src": "2301:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2301:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 786,
												"src": "2318:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 754,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2318:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2286:46:3"
									},
									"returnParameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2342:0:3"
									},
									"scope": 824,
									"src": "2256:328:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 822,
										"nodeType": "Block",
										"src": "3037:681:3",
										"statements": [
											{
												"assignments": [
													795
												],
												"declarations": [
													{
														"constant": false,
														"id": 795,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 822,
														"src": "3386:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 794,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3386:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 804,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 801,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "3440:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 802,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3446:34:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 798,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 789,
																	"src": "3420:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$611",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$611",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 797,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3412:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 796,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3412:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 799,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3412:14:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 800,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 915,
														"src": "3412:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3412:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3386:95:3"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 805,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "3495:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 806,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "3495:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 807,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3515:1:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3495:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 821,
												"nodeType": "IfStatement",
												"src": "3491:221:3",
												"trueBody": {
													"id": 820,
													"nodeType": "Block",
													"src": "3518:194:3",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 812,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 795,
																				"src": "3635:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"components": [
																					{
																						"argumentTypes": null,
																						"id": 814,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3648:4:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 813,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3648:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					}
																				],
																				"id": 815,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3647:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 810,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -1,
																				"src": "3624:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 811,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "3624:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 816,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3624:30:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 817,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3656:44:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 809,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "3616:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 818,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3616:85:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 819,
															"nodeType": "ExpressionStatement",
															"src": "3616:85:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 787,
										"nodeType": "StructuredDocumentation",
										"src": "2590:372:3",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 823,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 823,
												"src": "2996:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$611",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 788,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 611,
													"src": "2996:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$611",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 823,
												"src": "3010:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 790,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3010:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2995:33:3"
									},
									"returnParameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3037:0:3"
									},
									"scope": 824,
									"src": "2967:751:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 825,
							"src": "616:3104:3"
						}
					],
					"src": "33:3688:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1120
						]
					},
					"id": 1121,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 826,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 827,
								"nodeType": "StructuredDocumentation",
								"src": "66:67:4",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1120,
							"linearizedBaseContracts": [
								1120
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 843,
										"nodeType": "Block",
										"src": "792:347:4",
										"statements": [
											{
												"assignments": [
													836
												],
												"declarations": [
													{
														"constant": false,
														"id": 836,
														"mutability": "mutable",
														"name": "size",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 843,
														"src": "989:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 835,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "989:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 837,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "989:12:4"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1076:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1078:28:4",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1098:7:4"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1086:11:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1086:20:4"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1078:4:4"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 830,
														"isOffset": false,
														"isSlot": false,
														"src": "1098:7:4",
														"valueSize": 1
													},
													{
														"declaration": 836,
														"isOffset": false,
														"isSlot": false,
														"src": "1078:4:4",
														"valueSize": 1
													}
												],
												"id": 838,
												"nodeType": "InlineAssembly",
												"src": "1067:41:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 839,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 836,
														"src": "1124:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 840,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1131:1:4",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1124:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 834,
												"id": 842,
												"nodeType": "Return",
												"src": "1117:15:4"
											}
										]
									},
									"documentation": {
										"id": 828,
										"nodeType": "StructuredDocumentation",
										"src": "156:565:4",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 844,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 844,
												"src": "746:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 829,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "746:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "745:17:4"
									},
									"returnParameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 844,
												"src": "786:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 832,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "786:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "785:6:4"
									},
									"scope": 1120,
									"src": "726:413:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 877,
										"nodeType": "Block",
										"src": "2127:320:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 859,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 855,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2153:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1120",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1120",
																				"typeString": "library Address"
																			}
																		],
																		"id": 854,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2145:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 853,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2145:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 856,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2145:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 857,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2145:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 858,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 849,
																"src": "2170:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2145:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 860,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2178:31:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 852,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2137:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2137:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 862,
												"nodeType": "ExpressionStatement",
												"src": "2137:73:4"
											},
											{
												"assignments": [
													864,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 864,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 877,
														"src": "2299:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 863,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2299:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 871,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "",
															"id": 869,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2349:2:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 865,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 847,
																"src": "2317:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 866,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2317:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 868,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 867,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 849,
																"src": "2340:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2317:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2317:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2298:54:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 873,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 864,
															"src": "2370:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 874,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2379:60:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 872,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2362:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2362:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 876,
												"nodeType": "ExpressionStatement",
												"src": "2362:78:4"
											}
										]
									},
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1145:906:4",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 878,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 878,
												"src": "2075:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2075:15:4",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 878,
												"src": "2102:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2102:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2074:43:4"
									},
									"returnParameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2127:0:4"
									},
									"scope": 1120,
									"src": "2056:391:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 894,
										"nodeType": "Block",
										"src": "3277:82:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 889,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "3305:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 890,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 883,
															"src": "3313:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 891,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3319:32:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 888,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															895,
															915
														],
														"referencedDeclaration": 915,
														"src": "3292:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3292:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 887,
												"id": 893,
												"nodeType": "Return",
												"src": "3285:67:4"
											}
										]
									},
									"documentation": {
										"id": 879,
										"nodeType": "StructuredDocumentation",
										"src": "2453:730:4",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 895,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 895,
												"src": "3210:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 895,
												"src": "3226:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 882,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3226:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3209:35:4"
									},
									"returnParameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 886,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 895,
												"src": "3263:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 885,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3263:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3262:14:4"
									},
									"scope": 1120,
									"src": "3188:171:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "3698:76:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 908,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 898,
															"src": "3737:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 909,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 900,
															"src": "3745:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 910,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3751:1:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"argumentTypes": null,
															"id": 911,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 902,
															"src": "3754:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 907,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															935,
															985
														],
														"referencedDeclaration": 985,
														"src": "3715:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3715:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 906,
												"id": 913,
												"nodeType": "Return",
												"src": "3708:59:4"
											}
										]
									},
									"documentation": {
										"id": 896,
										"nodeType": "StructuredDocumentation",
										"src": "3365:211:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 915,
												"src": "3603:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 897,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3603:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 915,
												"src": "3619:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 899,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3619:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 915,
												"src": "3638:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 901,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3638:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3602:63:4"
									},
									"returnParameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 915,
												"src": "3684:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 904,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3684:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3683:14:4"
									},
									"scope": 1120,
									"src": "3581:193:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 934,
										"nodeType": "Block",
										"src": "4249:111:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 928,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "4288:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 929,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "4296:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 930,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 922,
															"src": "4302:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 931,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4309:43:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 927,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															935,
															985
														],
														"referencedDeclaration": 985,
														"src": "4266:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4266:87:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 926,
												"id": 933,
												"nodeType": "Return",
												"src": "4259:94:4"
											}
										]
									},
									"documentation": {
										"id": 916,
										"nodeType": "StructuredDocumentation",
										"src": "3780:351:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 935,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 935,
												"src": "4167:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 917,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4167:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 935,
												"src": "4183:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 919,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4183:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 935,
												"src": "4202:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 921,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4202:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4166:50:4"
									},
									"returnParameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 935,
												"src": "4235:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 924,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4235:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4234:14:4"
									},
									"scope": 1120,
									"src": "4136:224:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 984,
										"nodeType": "Block",
										"src": "4749:382:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 956,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 952,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "4775:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1120",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1120",
																				"typeString": "library Address"
																			}
																		],
																		"id": 951,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4767:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 950,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4767:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 953,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4767:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 954,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4767:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 955,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 942,
																"src": "4792:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4767:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 957,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4799:40:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 949,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4759:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4759:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 959,
												"nodeType": "ExpressionStatement",
												"src": "4759:81:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 962,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 938,
																	"src": "4869:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 961,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 844,
																"src": "4858:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 963,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4858:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 964,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4878:31:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 960,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4850:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4850:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 966,
												"nodeType": "ExpressionStatement",
												"src": "4850:60:4"
											},
											{
												"assignments": [
													968,
													970
												],
												"declarations": [
													{
														"constant": false,
														"id": 968,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 984,
														"src": "4981:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 967,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4981:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 970,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 984,
														"src": "4995:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 969,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4995:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 977,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 975,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 940,
															"src": "5050:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 971,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 938,
																"src": "5022:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 972,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5022:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 974,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 973,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 942,
																"src": "5042:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5022:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5022:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4980:75:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 979,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 968,
															"src": "5090:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 980,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 970,
															"src": "5099:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 981,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 944,
															"src": "5111:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 978,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1119,
														"src": "5072:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5072:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 948,
												"id": 983,
												"nodeType": "Return",
												"src": "5065:59:4"
											}
										]
									},
									"documentation": {
										"id": 936,
										"nodeType": "StructuredDocumentation",
										"src": "4366:237:4",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 985,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 985,
												"src": "4639:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 937,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4639:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 985,
												"src": "4655:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 939,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4655:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 985,
												"src": "4674:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4674:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 985,
												"src": "4689:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 943,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4689:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4638:78:4"
									},
									"returnParameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 985,
												"src": "4735:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 946,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4735:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4734:14:4"
									},
									"scope": 1120,
									"src": "4608:523:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1001,
										"nodeType": "Block",
										"src": "5408:97:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 996,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 988,
															"src": "5444:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 997,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 990,
															"src": "5452:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 998,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5458:39:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 995,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1002,
															1037
														],
														"referencedDeclaration": 1037,
														"src": "5425:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5425:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 994,
												"id": 1000,
												"nodeType": "Return",
												"src": "5418:80:4"
											}
										]
									},
									"documentation": {
										"id": 986,
										"nodeType": "StructuredDocumentation",
										"src": "5137:166:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1002,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1002,
												"src": "5336:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 987,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5336:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1002,
												"src": "5352:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 989,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5352:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5335:35:4"
									},
									"returnParameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1002,
												"src": "5394:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 992,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5394:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5393:14:4"
									},
									"scope": 1120,
									"src": "5308:197:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1036,
										"nodeType": "Block",
										"src": "5817:288:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1016,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1005,
																	"src": "5846:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1015,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 844,
																"src": "5835:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1017,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5835:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5855:38:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 1014,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5827:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5827:67:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1020,
												"nodeType": "ExpressionStatement",
												"src": "5827:67:4"
											},
											{
												"assignments": [
													1022,
													1024
												],
												"declarations": [
													{
														"constant": false,
														"id": 1022,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1036,
														"src": "5965:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1021,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5965:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1024,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1036,
														"src": "5979:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1023,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5979:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1029,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1027,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1007,
															"src": "6024:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1025,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1005,
															"src": "6006:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1026,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "6006:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6006:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5964:65:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1031,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1022,
															"src": "6064:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 1032,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1024,
															"src": "6073:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1033,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1009,
															"src": "6085:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1030,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1119,
														"src": "6046:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6046:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1013,
												"id": 1035,
												"nodeType": "Return",
												"src": "6039:59:4"
											}
										]
									},
									"documentation": {
										"id": 1003,
										"nodeType": "StructuredDocumentation",
										"src": "5511:173:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1037,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1037,
												"src": "5717:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1004,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5717:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1037,
												"src": "5733:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1006,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5733:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1037,
												"src": "5752:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1008,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5752:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5716:63:4"
									},
									"returnParameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1037,
												"src": "5803:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1011,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5803:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5802:14:4"
									},
									"scope": 1120,
									"src": "5689:416:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1053,
										"nodeType": "Block",
										"src": "6381:101:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1048,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1040,
															"src": "6419:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1049,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1042,
															"src": "6427:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1050,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6433:41:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1047,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1054,
															1089
														],
														"referencedDeclaration": 1089,
														"src": "6398:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6398:77:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1046,
												"id": 1052,
												"nodeType": "Return",
												"src": "6391:84:4"
											}
										]
									},
									"documentation": {
										"id": 1038,
										"nodeType": "StructuredDocumentation",
										"src": "6111:168:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1054,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1054,
												"src": "6314:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1039,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1054,
												"src": "6330:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1041,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6330:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6313:35:4"
									},
									"returnParameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1054,
												"src": "6367:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1044,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6367:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6366:14:4"
									},
									"scope": 1120,
									"src": "6284:198:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1088,
										"nodeType": "Block",
										"src": "6793:292:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1068,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1057,
																	"src": "6822:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1067,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 844,
																"src": "6811:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1069,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6811:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1070,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6831:40:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 1066,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6803:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6803:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1072,
												"nodeType": "ExpressionStatement",
												"src": "6803:69:4"
											},
											{
												"assignments": [
													1074,
													1076
												],
												"declarations": [
													{
														"constant": false,
														"id": 1074,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1088,
														"src": "6943:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1073,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6943:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1076,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1088,
														"src": "6957:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1075,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6957:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1081,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1079,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1059,
															"src": "7004:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1077,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1057,
															"src": "6984:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1078,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "6984:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6984:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6942:67:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1083,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1074,
															"src": "7044:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 1084,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1076,
															"src": "7053:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1085,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "7065:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1082,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1119,
														"src": "7026:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7026:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1065,
												"id": 1087,
												"nodeType": "Return",
												"src": "7019:59:4"
											}
										]
									},
									"documentation": {
										"id": 1055,
										"nodeType": "StructuredDocumentation",
										"src": "6488:175:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1089,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1089,
												"src": "6698:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1056,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6698:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1089,
												"src": "6714:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1058,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6714:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1089,
												"src": "6733:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1060,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6733:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6697:63:4"
									},
									"returnParameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1089,
												"src": "6779:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1063,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6779:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6778:14:4"
									},
									"scope": 1120,
									"src": "6668:417:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1118,
										"nodeType": "Block",
										"src": "7220:596:4",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 1100,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1091,
													"src": "7234:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1116,
													"nodeType": "Block",
													"src": "7291:519:4",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1107,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1104,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1093,
																		"src": "7375:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1105,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "7375:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1106,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7395:1:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7375:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1114,
																"nodeType": "Block",
																"src": "7747:53:4",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1111,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1095,
																					"src": "7772:12:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1110,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-19,
																					-19
																				],
																				"referencedDeclaration": -19,
																				"src": "7765:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1112,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7765:20:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1113,
																		"nodeType": "ExpressionStatement",
																		"src": "7765:20:4"
																	}
																]
															},
															"id": 1115,
															"nodeType": "IfStatement",
															"src": "7371:429:4",
															"trueBody": {
																"id": 1109,
																"nodeType": "Block",
																"src": "7398:343:4",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7582:145:4",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7604:40:4",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7633:10:4"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7627:5:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7627:17:4"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7608:15:4",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7676:2:4",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7680:10:4"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7672:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7672:19:4"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7693:15:4"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7665:6:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7665:44:4"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7665:44:4"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 1093,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7633:10:4",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1093,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7680:10:4",
																				"valueSize": 1
																			}
																		],
																		"id": 1108,
																		"nodeType": "InlineAssembly",
																		"src": "7573:154:4"
																	}
																]
															}
														}
													]
												},
												"id": 1117,
												"nodeType": "IfStatement",
												"src": "7230:580:4",
												"trueBody": {
													"id": 1103,
													"nodeType": "Block",
													"src": "7243:42:4",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1101,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1093,
																"src": "7264:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1099,
															"id": 1102,
															"nodeType": "Return",
															"src": "7257:17:4"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 1119,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_verifyCallResult",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "success",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1119,
												"src": "7118:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1090,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7118:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "returndata",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1119,
												"src": "7132:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1092,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7132:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1119,
												"src": "7157:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1094,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7157:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7117:67:4"
									},
									"returnParameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1119,
												"src": "7206:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1097,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7206:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7205:14:4"
									},
									"scope": 1120,
									"src": "7091:725:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1121,
							"src": "134:7684:4"
						}
					],
					"src": "33:7786:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							1160
						]
					},
					"id": 1161,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1122,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1123,
								"nodeType": "StructuredDocumentation",
								"src": "66:750:5",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 1160,
							"linearizedBaseContracts": [
								1160
							],
							"name": "ReentrancyGuard",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1126,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1160,
									"src": "1605:41:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1124,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1605:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "31",
										"id": 1125,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1645:1:5",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1129,
									"mutability": "constant",
									"name": "_ENTERED",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1160,
									"src": "1652:37:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1127,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1652:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "32",
										"id": 1128,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1688:1:5",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1131,
									"mutability": "mutable",
									"name": "_status",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1160,
									"src": "1696:23:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1130,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1696:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1138,
										"nodeType": "Block",
										"src": "1750:39:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1134,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1131,
														"src": "1760:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1135,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1126,
														"src": "1770:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1760:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1137,
												"nodeType": "ExpressionStatement",
												"src": "1760:22:5"
											}
										]
									},
									"documentation": null,
									"id": 1139,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1738:2:5"
									},
									"returnParameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1750:0:5"
									},
									"scope": 1160,
									"src": "1726:63:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1158,
										"nodeType": "Block",
										"src": "2188:421:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1143,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1131,
																"src": "2277:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1144,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1129,
																"src": "2288:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2277:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 1146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2298:33:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 1142,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2269:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2269:63:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1148,
												"nodeType": "ExpressionStatement",
												"src": "2269:63:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1149,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1131,
														"src": "2407:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1150,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "2417:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2407:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1152,
												"nodeType": "ExpressionStatement",
												"src": "2407:18:5"
											},
											{
												"id": 1153,
												"nodeType": "PlaceholderStatement",
												"src": "2436:1:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1154,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1131,
														"src": "2580:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1155,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1126,
														"src": "2590:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2580:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1157,
												"nodeType": "ExpressionStatement",
												"src": "2580:22:5"
											}
										]
									},
									"documentation": {
										"id": 1140,
										"nodeType": "StructuredDocumentation",
										"src": "1795:364:5",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and make it call a\n `private` function that does the actual work."
									},
									"id": 1159,
									"name": "nonReentrant",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2185:2:5"
									},
									"src": "2164:445:5",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1161,
							"src": "817:1794:5"
						}
					],
					"src": "33:2579:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/SafeCast.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/SafeCast.sol",
					"exportedSymbols": {
						"SafeCast": [
							1473
						]
					},
					"id": 1474,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1162,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1163,
								"nodeType": "StructuredDocumentation",
								"src": "67:709:6",
								"text": " @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always.\n Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\n all math on `uint256` and `int256` and then downcasting."
							},
							"fullyImplemented": true,
							"id": 1473,
							"linearizedBaseContracts": [
								1473
							],
							"name": "SafeCast",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1185,
										"nodeType": "Block",
										"src": "1152:115:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1176,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1172,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1166,
																"src": "1170:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																	"typeString": "int_const 3402...(31 digits omitted)...1456"
																},
																"id": 1175,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"hexValue": "32",
																	"id": 1173,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1178:1:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "313238",
																	"id": 1174,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1181:3:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "1178:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																	"typeString": "int_const 3402...(31 digits omitted)...1456"
																}
															},
															"src": "1170:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e203132382062697473",
															"id": 1177,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1186:42:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 128 bits\""
															},
															"value": "SafeCast: value doesn't fit in 128 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 128 bits\""
															}
														],
														"id": 1171,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1162:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1162:67:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1179,
												"nodeType": "ExpressionStatement",
												"src": "1162:67:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1182,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1166,
															"src": "1254:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1181,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1246:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint128_$",
															"typeString": "type(uint128)"
														},
														"typeName": {
															"id": 1180,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "1246:7:6",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 1183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1246:14:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"functionReturnParameters": 1170,
												"id": 1184,
												"nodeType": "Return",
												"src": "1239:21:6"
											}
										]
									},
									"documentation": {
										"id": 1164,
										"nodeType": "StructuredDocumentation",
										"src": "801:280:6",
										"text": " @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"
									},
									"id": 1186,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint128",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1186,
												"src": "1105:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1105:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1104:15:6"
									},
									"returnParameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1186,
												"src": "1143:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1168,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1143:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1142:9:6"
									},
									"scope": 1473,
									"src": "1086:181:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1208,
										"nodeType": "Block",
										"src": "1618:112:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1195,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1189,
																"src": "1636:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_rational_18446744073709551616_by_1",
																	"typeString": "int_const 18446744073709551616"
																},
																"id": 1198,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"hexValue": "32",
																	"id": 1196,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1644:1:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3634",
																	"id": 1197,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1647:2:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "1644:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18446744073709551616_by_1",
																	"typeString": "int_const 18446744073709551616"
																}
															},
															"src": "1636:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e2036342062697473",
															"id": 1200,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1651:41:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 64 bits\""
															},
															"value": "SafeCast: value doesn't fit in 64 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 64 bits\""
															}
														],
														"id": 1194,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1628:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1628:65:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1202,
												"nodeType": "ExpressionStatement",
												"src": "1628:65:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1205,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1189,
															"src": "1717:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1204,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1710:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint64_$",
															"typeString": "type(uint64)"
														},
														"typeName": {
															"id": 1203,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "1710:6:6",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 1206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1710:13:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 1193,
												"id": 1207,
												"nodeType": "Return",
												"src": "1703:20:6"
											}
										]
									},
									"documentation": {
										"id": 1187,
										"nodeType": "StructuredDocumentation",
										"src": "1273:276:6",
										"text": " @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"
									},
									"id": 1209,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint64",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1209,
												"src": "1572:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1571:15:6"
									},
									"returnParameters": {
										"id": 1193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1209,
												"src": "1610:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1191,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1610:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1609:8:6"
									},
									"scope": 1473,
									"src": "1554:176:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1231,
										"nodeType": "Block",
										"src": "2081:112:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1218,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1212,
																"src": "2099:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																},
																"id": 1221,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"hexValue": "32",
																	"id": 1219,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2107:1:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3332",
																	"id": 1220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2110:2:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "2107:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																}
															},
															"src": "2099:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e2033322062697473",
															"id": 1223,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2114:41:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 32 bits\""
															},
															"value": "SafeCast: value doesn't fit in 32 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 32 bits\""
															}
														],
														"id": 1217,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2091:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2091:65:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1225,
												"nodeType": "ExpressionStatement",
												"src": "2091:65:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1228,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1212,
															"src": "2180:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1227,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2173:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint32_$",
															"typeString": "type(uint32)"
														},
														"typeName": {
															"id": 1226,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "2173:6:6",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 1229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2173:13:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 1216,
												"id": 1230,
												"nodeType": "Return",
												"src": "2166:20:6"
											}
										]
									},
									"documentation": {
										"id": 1210,
										"nodeType": "StructuredDocumentation",
										"src": "1736:276:6",
										"text": " @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"
									},
									"id": 1232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint32",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1232,
												"src": "2035:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2035:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2034:15:6"
									},
									"returnParameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1215,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1232,
												"src": "2073:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1214,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2073:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2072:8:6"
									},
									"scope": 1473,
									"src": "2017:176:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1254,
										"nodeType": "Block",
										"src": "2544:112:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1241,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1235,
																"src": "2562:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_rational_65536_by_1",
																	"typeString": "int_const 65536"
																},
																"id": 1244,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"hexValue": "32",
																	"id": 1242,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2570:1:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3136",
																	"id": 1243,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2573:2:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "2570:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_65536_by_1",
																	"typeString": "int_const 65536"
																}
															},
															"src": "2562:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e2031362062697473",
															"id": 1246,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2577:41:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 16 bits\""
															},
															"value": "SafeCast: value doesn't fit in 16 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 16 bits\""
															}
														],
														"id": 1240,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2554:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2554:65:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1248,
												"nodeType": "ExpressionStatement",
												"src": "2554:65:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1251,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1235,
															"src": "2643:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1250,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2636:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint16_$",
															"typeString": "type(uint16)"
														},
														"typeName": {
															"id": 1249,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "2636:6:6",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 1252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2636:13:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"functionReturnParameters": 1239,
												"id": 1253,
												"nodeType": "Return",
												"src": "2629:20:6"
											}
										]
									},
									"documentation": {
										"id": 1233,
										"nodeType": "StructuredDocumentation",
										"src": "2199:276:6",
										"text": " @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"
									},
									"id": 1255,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint16",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1255,
												"src": "2498:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2498:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2497:15:6"
									},
									"returnParameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1255,
												"src": "2536:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1237,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2536:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2535:8:6"
									},
									"scope": 1473,
									"src": "2480:176:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1277,
										"nodeType": "Block",
										"src": "3002:109:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1264,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1258,
																"src": "3020:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_rational_256_by_1",
																	"typeString": "int_const 256"
																},
																"id": 1267,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"hexValue": "32",
																	"id": 1265,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3028:1:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "38",
																	"id": 1266,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3031:1:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "3028:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_256_by_1",
																	"typeString": "int_const 256"
																}
															},
															"src": "3020:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e20382062697473",
															"id": 1269,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3034:40:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 8 bits\""
															},
															"value": "SafeCast: value doesn't fit in 8 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 8 bits\""
															}
														],
														"id": 1263,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3012:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3012:63:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1271,
												"nodeType": "ExpressionStatement",
												"src": "3012:63:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1274,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1258,
															"src": "3098:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1273,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3092:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint8_$",
															"typeString": "type(uint8)"
														},
														"typeName": {
															"id": 1272,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "3092:5:6",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 1275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3092:12:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 1262,
												"id": 1276,
												"nodeType": "Return",
												"src": "3085:19:6"
											}
										]
									},
									"documentation": {
										"id": 1256,
										"nodeType": "StructuredDocumentation",
										"src": "2662:273:6",
										"text": " @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits."
									},
									"id": 1278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint8",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1278,
												"src": "2957:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2957:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2956:15:6"
									},
									"returnParameters": {
										"id": 1262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1278,
												"src": "2995:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1260,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2995:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2994:7:6"
									},
									"scope": 1473,
									"src": "2940:171:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1298,
										"nodeType": "Block",
										"src": "3347:103:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 1289,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1287,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1281,
																"src": "3365:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1288,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3374:1:6",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3365:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "53616665436173743a2076616c7565206d75737420626520706f736974697665",
															"id": 1290,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3377:34:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_74e6d3a4204092bea305532ded31d3763fc378e46be3884a93ceff08a0761807",
																"typeString": "literal_string \"SafeCast: value must be positive\""
															},
															"value": "SafeCast: value must be positive"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_74e6d3a4204092bea305532ded31d3763fc378e46be3884a93ceff08a0761807",
																"typeString": "literal_string \"SafeCast: value must be positive\""
															}
														],
														"id": 1286,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3357:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3357:55:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1292,
												"nodeType": "ExpressionStatement",
												"src": "3357:55:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1295,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1281,
															"src": "3437:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 1294,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3429:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 1293,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3429:7:6",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 1296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3429:14:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1285,
												"id": 1297,
												"nodeType": "Return",
												"src": "3422:21:6"
											}
										]
									},
									"documentation": {
										"id": 1279,
										"nodeType": "StructuredDocumentation",
										"src": "3117:160:6",
										"text": " @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."
									},
									"id": 1299,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint256",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1281,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1299,
												"src": "3301:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1280,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3301:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3300:14:6"
									},
									"returnParameters": {
										"id": 1285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1284,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1299,
												"src": "3338:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3338:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3337:9:6"
									},
									"scope": 1473,
									"src": "3282:168:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1328,
										"nodeType": "Block",
										"src": "3874:134:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1313,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1308,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1302,
																	"src": "3892:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_rational_minus_170141183460469231731687303715884105728_by_1",
																		"typeString": "int_const -170...(32 digits omitted)...5728"
																	},
																	"id": 1312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 1310,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "3901:2:6",
																		"subExpression": {
																			"argumentTypes": null,
																			"hexValue": "32",
																			"id": 1309,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3902:1:6",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_minus_2_by_1",
																			"typeString": "int_const -2"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "313237",
																		"id": 1311,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3905:3:6",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_127_by_1",
																			"typeString": "int_const 127"
																		},
																		"value": "127"
																	},
																	"src": "3901:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_minus_170141183460469231731687303715884105728_by_1",
																		"typeString": "int_const -170...(32 digits omitted)...5728"
																	}
																},
																"src": "3892:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1318,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1314,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1302,
																	"src": "3912:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_rational_170141183460469231731687303715884105728_by_1",
																		"typeString": "int_const 1701...(31 digits omitted)...5728"
																	},
																	"id": 1317,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 1315,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3920:1:6",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "313237",
																		"id": 1316,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3923:3:6",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_127_by_1",
																			"typeString": "int_const 127"
																		},
																		"value": "127"
																	},
																	"src": "3920:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_170141183460469231731687303715884105728_by_1",
																		"typeString": "int_const 1701...(31 digits omitted)...5728"
																	}
																},
																"src": "3912:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3892:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e203132382062697473",
															"id": 1320,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3928:42:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 128 bits\""
															},
															"value": "SafeCast: value doesn't fit in 128 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 128 bits\""
															}
														],
														"id": 1307,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3884:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3884:87:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1322,
												"nodeType": "ExpressionStatement",
												"src": "3884:87:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1325,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1302,
															"src": "3995:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 1324,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3988:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int128_$",
															"typeString": "type(int128)"
														},
														"typeName": {
															"id": 1323,
															"name": "int128",
															"nodeType": "ElementaryTypeName",
															"src": "3988:6:6",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 1326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3988:13:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"functionReturnParameters": 1306,
												"id": 1327,
												"nodeType": "Return",
												"src": "3981:20:6"
											}
										]
									},
									"documentation": {
										"id": 1300,
										"nodeType": "StructuredDocumentation",
										"src": "3456:350:6",
										"text": " @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits\n _Available since v3.1._"
									},
									"id": 1329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt128",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1302,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1329,
												"src": "3829:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1301,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3829:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3828:14:6"
									},
									"returnParameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1305,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1329,
												"src": "3866:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 1304,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "3866:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3865:8:6"
									},
									"scope": 1473,
									"src": "3811:197:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1358,
										"nodeType": "Block",
										"src": "4425:130:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1343,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1338,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1332,
																	"src": "4443:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_rational_minus_9223372036854775808_by_1",
																		"typeString": "int_const -9223372036854775808"
																	},
																	"id": 1342,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 1340,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "4452:2:6",
																		"subExpression": {
																			"argumentTypes": null,
																			"hexValue": "32",
																			"id": 1339,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4453:1:6",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_minus_2_by_1",
																			"typeString": "int_const -2"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "3633",
																		"id": 1341,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4456:2:6",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_63_by_1",
																			"typeString": "int_const 63"
																		},
																		"value": "63"
																	},
																	"src": "4452:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_minus_9223372036854775808_by_1",
																		"typeString": "int_const -9223372036854775808"
																	}
																},
																"src": "4443:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1348,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1344,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1332,
																	"src": "4462:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_rational_9223372036854775808_by_1",
																		"typeString": "int_const 9223372036854775808"
																	},
																	"id": 1347,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 1345,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4470:1:6",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "3633",
																		"id": 1346,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4473:2:6",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_63_by_1",
																			"typeString": "int_const 63"
																		},
																		"value": "63"
																	},
																	"src": "4470:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_9223372036854775808_by_1",
																		"typeString": "int_const 9223372036854775808"
																	}
																},
																"src": "4462:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4443:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e2036342062697473",
															"id": 1350,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4477:41:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 64 bits\""
															},
															"value": "SafeCast: value doesn't fit in 64 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 64 bits\""
															}
														],
														"id": 1337,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4435:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4435:84:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1352,
												"nodeType": "ExpressionStatement",
												"src": "4435:84:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1355,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1332,
															"src": "4542:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 1354,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4536:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int64_$",
															"typeString": "type(int64)"
														},
														"typeName": {
															"id": 1353,
															"name": "int64",
															"nodeType": "ElementaryTypeName",
															"src": "4536:5:6",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 1356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4536:12:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"functionReturnParameters": 1336,
												"id": 1357,
												"nodeType": "Return",
												"src": "4529:19:6"
											}
										]
									},
									"documentation": {
										"id": 1330,
										"nodeType": "StructuredDocumentation",
										"src": "4014:345:6",
										"text": " @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits\n _Available since v3.1._"
									},
									"id": 1359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt64",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1359,
												"src": "4381:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1331,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4381:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4380:14:6"
									},
									"returnParameters": {
										"id": 1336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1359,
												"src": "4418:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 1334,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "4418:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4417:7:6"
									},
									"scope": 1473,
									"src": "4364:191:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1388,
										"nodeType": "Block",
										"src": "4972:130:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1379,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1373,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1368,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1362,
																	"src": "4990:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_rational_minus_2147483648_by_1",
																		"typeString": "int_const -2147483648"
																	},
																	"id": 1372,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 1370,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "4999:2:6",
																		"subExpression": {
																			"argumentTypes": null,
																			"hexValue": "32",
																			"id": 1369,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5000:1:6",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_minus_2_by_1",
																			"typeString": "int_const -2"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "3331",
																		"id": 1371,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5003:2:6",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_31_by_1",
																			"typeString": "int_const 31"
																		},
																		"value": "31"
																	},
																	"src": "4999:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_minus_2147483648_by_1",
																		"typeString": "int_const -2147483648"
																	}
																},
																"src": "4990:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1378,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1374,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1362,
																	"src": "5009:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_rational_2147483648_by_1",
																		"typeString": "int_const 2147483648"
																	},
																	"id": 1377,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 1375,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5017:1:6",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "3331",
																		"id": 1376,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5020:2:6",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_31_by_1",
																			"typeString": "int_const 31"
																		},
																		"value": "31"
																	},
																	"src": "5017:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2147483648_by_1",
																		"typeString": "int_const 2147483648"
																	}
																},
																"src": "5009:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4990:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e2033322062697473",
															"id": 1380,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5024:41:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 32 bits\""
															},
															"value": "SafeCast: value doesn't fit in 32 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 32 bits\""
															}
														],
														"id": 1367,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4982:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4982:84:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1382,
												"nodeType": "ExpressionStatement",
												"src": "4982:84:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1385,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1362,
															"src": "5089:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 1384,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5083:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int32_$",
															"typeString": "type(int32)"
														},
														"typeName": {
															"id": 1383,
															"name": "int32",
															"nodeType": "ElementaryTypeName",
															"src": "5083:5:6",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 1386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5083:12:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int32",
														"typeString": "int32"
													}
												},
												"functionReturnParameters": 1366,
												"id": 1387,
												"nodeType": "Return",
												"src": "5076:19:6"
											}
										]
									},
									"documentation": {
										"id": 1360,
										"nodeType": "StructuredDocumentation",
										"src": "4561:345:6",
										"text": " @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits\n _Available since v3.1._"
									},
									"id": 1389,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt32",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1389,
												"src": "4928:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1361,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4928:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4927:14:6"
									},
									"returnParameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1389,
												"src": "4965:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int32",
													"typeString": "int32"
												},
												"typeName": {
													"id": 1364,
													"name": "int32",
													"nodeType": "ElementaryTypeName",
													"src": "4965:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int32",
														"typeString": "int32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4964:7:6"
									},
									"scope": 1473,
									"src": "4911:191:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1418,
										"nodeType": "Block",
										"src": "5519:130:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1392,
																	"src": "5537:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_rational_minus_32768_by_1",
																		"typeString": "int_const -32768"
																	},
																	"id": 1402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 1400,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "5546:2:6",
																		"subExpression": {
																			"argumentTypes": null,
																			"hexValue": "32",
																			"id": 1399,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5547:1:6",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_minus_2_by_1",
																			"typeString": "int_const -2"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "3135",
																		"id": 1401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5550:2:6",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_15_by_1",
																			"typeString": "int_const 15"
																		},
																		"value": "15"
																	},
																	"src": "5546:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_minus_32768_by_1",
																		"typeString": "int_const -32768"
																	}
																},
																"src": "5537:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1408,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1404,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1392,
																	"src": "5556:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_rational_32768_by_1",
																		"typeString": "int_const 32768"
																	},
																	"id": 1407,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 1405,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5564:1:6",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "3135",
																		"id": 1406,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5567:2:6",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_15_by_1",
																			"typeString": "int_const 15"
																		},
																		"value": "15"
																	},
																	"src": "5564:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32768_by_1",
																		"typeString": "int_const 32768"
																	}
																},
																"src": "5556:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5537:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e2031362062697473",
															"id": 1410,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5571:41:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 16 bits\""
															},
															"value": "SafeCast: value doesn't fit in 16 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 16 bits\""
															}
														],
														"id": 1397,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5529:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:84:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1412,
												"nodeType": "ExpressionStatement",
												"src": "5529:84:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1415,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1392,
															"src": "5636:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 1414,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5630:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int16_$",
															"typeString": "type(int16)"
														},
														"typeName": {
															"id": 1413,
															"name": "int16",
															"nodeType": "ElementaryTypeName",
															"src": "5630:5:6",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 1416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5630:12:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"functionReturnParameters": 1396,
												"id": 1417,
												"nodeType": "Return",
												"src": "5623:19:6"
											}
										]
									},
									"documentation": {
										"id": 1390,
										"nodeType": "StructuredDocumentation",
										"src": "5108:345:6",
										"text": " @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits\n _Available since v3.1._"
									},
									"id": 1419,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt16",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1392,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1419,
												"src": "5475:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1391,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "5475:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5474:14:6"
									},
									"returnParameters": {
										"id": 1396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1395,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1419,
												"src": "5512:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int16",
													"typeString": "int16"
												},
												"typeName": {
													"id": 1394,
													"name": "int16",
													"nodeType": "ElementaryTypeName",
													"src": "5512:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5511:7:6"
									},
									"scope": 1473,
									"src": "5458:191:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1448,
										"nodeType": "Block",
										"src": "6060:126:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1433,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1428,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1422,
																	"src": "6078:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_rational_minus_128_by_1",
																		"typeString": "int_const -128"
																	},
																	"id": 1432,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 1430,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "6087:2:6",
																		"subExpression": {
																			"argumentTypes": null,
																			"hexValue": "32",
																			"id": 1429,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6088:1:6",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_minus_2_by_1",
																			"typeString": "int_const -2"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "37",
																		"id": 1431,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6091:1:6",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_7_by_1",
																			"typeString": "int_const 7"
																		},
																		"value": "7"
																	},
																	"src": "6087:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_minus_128_by_1",
																		"typeString": "int_const -128"
																	}
																},
																"src": "6078:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1438,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1434,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1422,
																	"src": "6096:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"id": 1437,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 1435,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6104:1:6",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "37",
																		"id": 1436,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6107:1:6",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_7_by_1",
																			"typeString": "int_const 7"
																		},
																		"value": "7"
																	},
																	"src": "6104:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	}
																},
																"src": "6096:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "6078:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e20382062697473",
															"id": 1440,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6110:40:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 8 bits\""
															},
															"value": "SafeCast: value doesn't fit in 8 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 8 bits\""
															}
														],
														"id": 1427,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6070:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6070:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1442,
												"nodeType": "ExpressionStatement",
												"src": "6070:81:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1445,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1422,
															"src": "6173:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 1444,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6168:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int8_$",
															"typeString": "type(int8)"
														},
														"typeName": {
															"id": 1443,
															"name": "int8",
															"nodeType": "ElementaryTypeName",
															"src": "6168:4:6",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 1446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6168:11:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int8",
														"typeString": "int8"
													}
												},
												"functionReturnParameters": 1426,
												"id": 1447,
												"nodeType": "Return",
												"src": "6161:18:6"
											}
										]
									},
									"documentation": {
										"id": 1420,
										"nodeType": "StructuredDocumentation",
										"src": "5655:341:6",
										"text": " @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits.\n _Available since v3.1._"
									},
									"id": 1449,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt8",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1449,
												"src": "6017:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1421,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "6017:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6016:14:6"
									},
									"returnParameters": {
										"id": 1426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1425,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1449,
												"src": "6054:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int8",
													"typeString": "int8"
												},
												"typeName": {
													"id": 1424,
													"name": "int8",
													"nodeType": "ElementaryTypeName",
													"src": "6054:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int8",
														"typeString": "int8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6053:6:6"
									},
									"scope": 1473,
									"src": "6001:185:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1471,
										"nodeType": "Block",
										"src": "6426:114:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1458,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1452,
																"src": "6444:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
																	"typeString": "int_const 5789...(69 digits omitted)...9968"
																},
																"id": 1461,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"hexValue": "32",
																	"id": 1459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6452:1:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "323535",
																	"id": 1460,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6455:3:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_255_by_1",
																		"typeString": "int_const 255"
																	},
																	"value": "255"
																},
																"src": "6452:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
																	"typeString": "int_const 5789...(69 digits omitted)...9968"
																}
															},
															"src": "6444:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e20616e20696e74323536",
															"id": 1463,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6460:42:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d70dcf21692b3c91b4c5fbb89ed57f464aa42efbe5b0ea96c4acb7c080144227",
																"typeString": "literal_string \"SafeCast: value doesn't fit in an int256\""
															},
															"value": "SafeCast: value doesn't fit in an int256"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d70dcf21692b3c91b4c5fbb89ed57f464aa42efbe5b0ea96c4acb7c080144227",
																"typeString": "literal_string \"SafeCast: value doesn't fit in an int256\""
															}
														],
														"id": 1457,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6436:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6436:67:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1465,
												"nodeType": "ExpressionStatement",
												"src": "6436:67:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1468,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1452,
															"src": "6527:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1467,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6520:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int256_$",
															"typeString": "type(int256)"
														},
														"typeName": {
															"id": 1466,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "6520:6:6",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 1469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6520:13:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1456,
												"id": 1470,
												"nodeType": "Return",
												"src": "6513:20:6"
											}
										]
									},
									"documentation": {
										"id": 1450,
										"nodeType": "StructuredDocumentation",
										"src": "6192:165:6",
										"text": " @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."
									},
									"id": 1472,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt256",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1472,
												"src": "6380:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6380:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6379:15:6"
									},
									"returnParameters": {
										"id": 1456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1455,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1472,
												"src": "6418:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1454,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "6418:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6417:8:6"
									},
									"scope": 1473,
									"src": "6362:178:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1474,
							"src": "777:5765:6"
						}
					],
					"src": "33:6510:6"
				},
				"id": 6
			},
			"contracts/interfaces/IController.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IController.sol",
					"exportedSymbols": {
						"IController": [
							1523
						]
					},
					"id": 1524,
					"license": "Apache License",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1475,
							"literals": [
								"solidity",
								"0.6",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "654:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 1523,
							"linearizedBaseContracts": [
								1523
							],
							"name": "IController",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"functionSelector": "d580ded4",
									"id": 1480,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addSet",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "_setToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1480,
												"src": "723:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "723:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "722:19:7"
									},
									"returnParameters": {
										"id": 1479,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "750:0:7"
									},
									"scope": 1523,
									"src": "707:44:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "46904840",
									"id": 1485,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeRecipient",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "777:2:7"
									},
									"returnParameters": {
										"id": 1484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1483,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1485,
												"src": "802:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "802:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "801:9:7"
									},
									"scope": 1523,
									"src": "756:55:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "792aa04f",
									"id": 1494,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getModuleFee",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1487,
												"mutability": "mutable",
												"name": "_module",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1494,
												"src": "838:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "838:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1489,
												"mutability": "mutable",
												"name": "_feeType",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1494,
												"src": "855:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "855:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "837:35:7"
									},
									"returnParameters": {
										"id": 1493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1492,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1494,
												"src": "895:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "895:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "894:9:7"
									},
									"scope": 1523,
									"src": "816:88:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "42f6e389",
									"id": 1501,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isModule",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1496,
												"mutability": "mutable",
												"name": "_module",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1501,
												"src": "927:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "927:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "926:17:7"
									},
									"returnParameters": {
										"id": 1500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1499,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1501,
												"src": "966:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1498,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "966:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "965:6:7"
									},
									"scope": 1523,
									"src": "909:63:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "74ebe3ec",
									"id": 1508,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isSet",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1503,
												"mutability": "mutable",
												"name": "_setToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1508,
												"src": "992:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "992:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "991:19:7"
									},
									"returnParameters": {
										"id": 1507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1508,
												"src": "1033:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1505,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1033:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1032:6:7"
									},
									"scope": 1523,
									"src": "977:62:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "13bc6d4b",
									"id": 1515,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isSystemContract",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1510,
												"mutability": "mutable",
												"name": "_contractAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1515,
												"src": "1070:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1070:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1069:26:7"
									},
									"returnParameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1515,
												"src": "1119:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1512,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1119:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1118:6:7"
									},
									"scope": 1523,
									"src": "1044:81:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "e765ced6",
									"id": 1522,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "resourceId",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1517,
												"mutability": "mutable",
												"name": "_id",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1522,
												"src": "1150:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1516,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1150:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1149:13:7"
									},
									"returnParameters": {
										"id": 1521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1520,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1522,
												"src": "1185:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1184:9:7"
									},
									"scope": 1523,
									"src": "1130:64:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1524,
							"src": "679:517:7"
						}
					],
					"src": "654:542:7"
				},
				"id": 7
			},
			"contracts/interfaces/IIntegrationRegistry.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IIntegrationRegistry.sol",
					"exportedSymbols": {
						"IIntegrationRegistry": [
							1562
						]
					},
					"id": 1563,
					"license": "Apache License",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1525,
							"literals": [
								"solidity",
								"0.6",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "654:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 1562,
							"linearizedBaseContracts": [
								1562
							],
							"name": "IIntegrationRegistry",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"functionSelector": "a30945cb",
									"id": 1534,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addIntegration",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1527,
												"mutability": "mutable",
												"name": "_module",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1534,
												"src": "740:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "740:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1529,
												"mutability": "mutable",
												"name": "_id",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1534,
												"src": "757:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1528,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "757:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1531,
												"mutability": "mutable",
												"name": "_wrapper",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1534,
												"src": "776:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "776:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "739:54:8"
									},
									"returnParameters": {
										"id": 1533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "802:0:8"
									},
									"scope": 1562,
									"src": "716:87:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "a19ba6dc",
									"id": 1543,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getIntegrationAdapter",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1536,
												"mutability": "mutable",
												"name": "_module",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1543,
												"src": "839:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1535,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "839:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1538,
												"mutability": "mutable",
												"name": "_id",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1543,
												"src": "856:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1537,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "838:36:8"
									},
									"returnParameters": {
										"id": 1542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1541,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1543,
												"src": "897:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "897:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "896:9:8"
									},
									"scope": 1562,
									"src": "808:98:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "e6d642c5",
									"id": 1552,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getIntegrationAdapterWithHash",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1545,
												"mutability": "mutable",
												"name": "_module",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1552,
												"src": "950:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "950:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1547,
												"mutability": "mutable",
												"name": "_id",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1552,
												"src": "967:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1546,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "967:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "949:30:8"
									},
									"returnParameters": {
										"id": 1551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1550,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1552,
												"src": "1002:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1001:9:8"
									},
									"scope": 1562,
									"src": "911:100:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "639a3978",
									"id": 1561,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isValidIntegration",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "_module",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1561,
												"src": "1044:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1044:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1556,
												"mutability": "mutable",
												"name": "_id",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1561,
												"src": "1061:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1555,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1043:36:8"
									},
									"returnParameters": {
										"id": 1560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1559,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1561,
												"src": "1102:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1558,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1102:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1101:6:8"
									},
									"scope": 1562,
									"src": "1016:92:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1563,
							"src": "679:431:8"
						}
					],
					"src": "654:456:8"
				},
				"id": 8
			},
			"contracts/interfaces/IManagerIssuanceHook.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IManagerIssuanceHook.sol",
					"exportedSymbols": {
						"IManagerIssuanceHook": [
							1589
						]
					},
					"id": 1590,
					"license": "Apache License",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1564,
							"literals": [
								"solidity",
								"0.6",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "654:23:9"
						},
						{
							"absolutePath": "contracts/interfaces/ISetToken.sol",
							"file": "./ISetToken.sol",
							"id": 1566,
							"nodeType": "ImportDirective",
							"scope": 1590,
							"sourceUnit": 1868,
							"src": "679:44:9",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 1565,
										"name": "ISetToken",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "688:9:9",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 1589,
							"linearizedBaseContracts": [
								1589
							],
							"name": "IManagerIssuanceHook",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"functionSelector": "a0458083",
									"id": 1577,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "invokePreIssueHook",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1568,
												"mutability": "mutable",
												"name": "_setToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1577,
												"src": "790:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISetToken_$1867",
													"typeString": "contract ISetToken"
												},
												"typeName": {
													"contractScope": null,
													"id": 1567,
													"name": "ISetToken",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1867,
													"src": "790:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISetToken_$1867",
														"typeString": "contract ISetToken"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1570,
												"mutability": "mutable",
												"name": "_issueQuantity",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1577,
												"src": "811:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "811:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1572,
												"mutability": "mutable",
												"name": "_sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1577,
												"src": "835:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "835:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1577,
												"src": "852:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "852:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "789:75:9"
									},
									"returnParameters": {
										"id": 1576,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "873:0:9"
									},
									"scope": 1589,
									"src": "762:112:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "9b19c2bf",
									"id": 1588,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "invokePreRedeemHook",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1579,
												"mutability": "mutable",
												"name": "_setToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1588,
												"src": "908:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISetToken_$1867",
													"typeString": "contract ISetToken"
												},
												"typeName": {
													"contractScope": null,
													"id": 1578,
													"name": "ISetToken",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1867,
													"src": "908:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISetToken_$1867",
														"typeString": "contract ISetToken"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1581,
												"mutability": "mutable",
												"name": "_redeemQuantity",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1588,
												"src": "929:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1580,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "929:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "_sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1588,
												"src": "954:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1582,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "954:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1585,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1588,
												"src": "971:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1584,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "907:76:9"
									},
									"returnParameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "992:0:9"
									},
									"scope": 1589,
									"src": "879:114:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1590,
							"src": "725:270:9"
						}
					],
					"src": "654:341:9"
				},
				"id": 9
			},
			"contracts/interfaces/IModule.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IModule.sol",
					"exportedSymbols": {
						"IModule": [
							1597
						]
					},
					"id": 1598,
					"license": "Apache License",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1591,
							"literals": [
								"solidity",
								"0.6",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "654:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1592,
								"nodeType": "StructuredDocumentation",
								"src": "680:95:10",
								"text": " @title IModule\n @author Set Protocol\n Interface for interacting with Modules."
							},
							"fullyImplemented": false,
							"id": 1597,
							"linearizedBaseContracts": [
								1597
							],
							"name": "IModule",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 1593,
										"nodeType": "StructuredDocumentation",
										"src": "800:192:10",
										"text": " Called by a SetToken to notify that this module was removed from the Set token. Any logic can be included\n in case checks need to be made or state needs to be cleared."
									},
									"functionSelector": "847ef08d",
									"id": 1596,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeModule",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1594,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1018:2:10"
									},
									"returnParameters": {
										"id": 1595,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1029:0:10"
									},
									"scope": 1597,
									"src": "997:33:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1598,
							"src": "776:256:10"
						}
					],
					"src": "654:378:10"
				},
				"id": 10
			},
			"contracts/interfaces/IPriceOracle.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IPriceOracle.sol",
					"exportedSymbols": {
						"IPriceOracle": [
							1615
						]
					},
					"id": 1616,
					"license": "Apache License",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1599,
							"literals": [
								"solidity",
								"0.6",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "654:23:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1600,
								"nodeType": "StructuredDocumentation",
								"src": "679:103:11",
								"text": " @title IPriceOracle\n @author Set Protocol\n Interface for interacting with PriceOracle"
							},
							"fullyImplemented": false,
							"id": 1615,
							"linearizedBaseContracts": [
								1615
							],
							"name": "IPriceOracle",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"functionSelector": "ac41865a",
									"id": 1609,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPrice",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1602,
												"mutability": "mutable",
												"name": "_assetOne",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1609,
												"src": "878:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1604,
												"mutability": "mutable",
												"name": "_assetTwo",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1609,
												"src": "897:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1603,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "897:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "877:38:11"
									},
									"returnParameters": {
										"id": 1608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1607,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1609,
												"src": "939:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "939:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "938:9:11"
									},
									"scope": 1615,
									"src": "860:88:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "34283354",
									"id": 1614,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "masterQuoteAsset",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1610,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "978:2:11"
									},
									"returnParameters": {
										"id": 1613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1612,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1614,
												"src": "1004:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1004:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1003:9:11"
									},
									"scope": 1615,
									"src": "953:60:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1616,
							"src": "783:232:11"
						}
					],
					"src": "654:361:11"
				},
				"id": 11
			},
			"contracts/interfaces/ISetToken.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/ISetToken.sol",
					"exportedSymbols": {
						"ISetToken": [
							1867
						]
					},
					"id": 1868,
					"license": "Apache License",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1617,
							"literals": [
								"solidity",
								"0.6",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "654:23:12"
						},
						{
							"id": 1618,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "678:35:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1620,
							"nodeType": "ImportDirective",
							"scope": 1868,
							"sourceUnit": 612,
							"src": "715:72:12",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 1619,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "724:6:12",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1622,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 611,
										"src": "910:6:12",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$611",
											"typeString": "contract IERC20"
										}
									},
									"id": 1623,
									"nodeType": "InheritanceSpecifier",
									"src": "910:6:12"
								}
							],
							"contractDependencies": [
								611
							],
							"contractKind": "interface",
							"documentation": {
								"id": 1621,
								"nodeType": "StructuredDocumentation",
								"src": "789:97:12",
								"text": " @title ISetToken\n @author Set Protocol\n Interface for operating with SetTokens."
							},
							"fullyImplemented": false,
							"id": 1867,
							"linearizedBaseContracts": [
								1867,
								611
							],
							"name": "ISetToken",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ISetToken.ModuleState",
									"id": 1627,
									"members": [
										{
											"id": 1624,
											"name": "NONE",
											"nodeType": "EnumValue",
											"src": "994:4:12"
										},
										{
											"id": 1625,
											"name": "PENDING",
											"nodeType": "EnumValue",
											"src": "1008:7:12"
										},
										{
											"id": 1626,
											"name": "INITIALIZED",
											"nodeType": "EnumValue",
											"src": "1025:11:12"
										}
									],
									"name": "ModuleState",
									"nodeType": "EnumDefinition",
									"src": "967:75:12"
								},
								{
									"canonicalName": "ISetToken.Position",
									"id": 1638,
									"members": [
										{
											"constant": false,
											"id": 1629,
											"mutability": "mutable",
											"name": "component",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1638,
											"src": "1567:17:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1628,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1567:7:12",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1631,
											"mutability": "mutable",
											"name": "module",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1638,
											"src": "1594:14:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1630,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:12",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1633,
											"mutability": "mutable",
											"name": "unit",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1638,
											"src": "1618:11:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											},
											"typeName": {
												"id": 1632,
												"name": "int256",
												"nodeType": "ElementaryTypeName",
												"src": "1618:6:12",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1635,
											"mutability": "mutable",
											"name": "positionState",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1638,
											"src": "1639:19:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1634,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "1639:5:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1637,
											"mutability": "mutable",
											"name": "data",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1638,
											"src": "1668:10:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1636,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1668:5:12",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Position",
									"nodeType": "StructDefinition",
									"scope": 1867,
									"src": "1541:144:12",
									"visibility": "public"
								},
								{
									"canonicalName": "ISetToken.ComponentPosition",
									"id": 1648,
									"members": [
										{
											"constant": false,
											"id": 1640,
											"mutability": "mutable",
											"name": "virtualUnit",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1648,
											"src": "2614:18:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											},
											"typeName": {
												"id": 1639,
												"name": "int256",
												"nodeType": "ElementaryTypeName",
												"src": "2614:6:12",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1643,
											"mutability": "mutable",
											"name": "externalPositionModules",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1648,
											"src": "2640:33:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											},
											"typeName": {
												"baseType": {
													"id": 1641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2640:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1642,
												"length": null,
												"nodeType": "ArrayTypeName",
												"src": "2640:9:12",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1647,
											"mutability": "mutable",
											"name": "externalPositions",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1648,
											"src": "2681:54:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ExternalPosition_$1653_storage_$",
												"typeString": "mapping(address => struct ISetToken.ExternalPosition)"
											},
											"typeName": {
												"id": 1646,
												"keyType": {
													"id": 1644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2689:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2681:36:12",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ExternalPosition_$1653_storage_$",
													"typeString": "mapping(address => struct ISetToken.ExternalPosition)"
												},
												"valueType": {
													"contractScope": null,
													"id": 1645,
													"name": "ExternalPosition",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1653,
													"src": "2700:16:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExternalPosition_$1653_storage_ptr",
														"typeString": "struct ISetToken.ExternalPosition"
													}
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "ComponentPosition",
									"nodeType": "StructDefinition",
									"scope": 1867,
									"src": "2581:161:12",
									"visibility": "public"
								},
								{
									"canonicalName": "ISetToken.ExternalPosition",
									"id": 1653,
									"members": [
										{
											"constant": false,
											"id": 1650,
											"mutability": "mutable",
											"name": "virtualUnit",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1653,
											"src": "3054:18:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											},
											"typeName": {
												"id": 1649,
												"name": "int256",
												"nodeType": "ElementaryTypeName",
												"src": "3054:6:12",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1652,
											"mutability": "mutable",
											"name": "data",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1653,
											"src": "3080:10:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1651,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "3080:5:12",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "ExternalPosition",
									"nodeType": "StructDefinition",
									"scope": 1867,
									"src": "3022:75:12",
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "4e353270",
									"id": 1658,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addComponent",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1655,
												"mutability": "mutable",
												"name": "_component",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1658,
												"src": "3177:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1654,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3177:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3176:20:12"
									},
									"returnParameters": {
										"id": 1657,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3205:0:12"
									},
									"scope": 1867,
									"src": "3155:51:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "6f86c897",
									"id": 1663,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeComponent",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1660,
												"mutability": "mutable",
												"name": "_component",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1663,
												"src": "3236:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1659,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3236:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3235:20:12"
									},
									"returnParameters": {
										"id": 1662,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3264:0:12"
									},
									"scope": 1867,
									"src": "3211:54:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "2ba57d17",
									"id": 1670,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "editDefaultPositionUnit",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1665,
												"mutability": "mutable",
												"name": "_component",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1670,
												"src": "3303:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1664,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1667,
												"mutability": "mutable",
												"name": "_realUnit",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1670,
												"src": "3323:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1666,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3323:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3302:38:12"
									},
									"returnParameters": {
										"id": 1669,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3349:0:12"
									},
									"scope": 1867,
									"src": "3270:80:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "ea0ee559",
									"id": 1677,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addExternalPositionModule",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1672,
												"mutability": "mutable",
												"name": "_component",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1677,
												"src": "3390:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1671,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3390:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1674,
												"mutability": "mutable",
												"name": "_positionModule",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1677,
												"src": "3410:23:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3410:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3389:45:12"
									},
									"returnParameters": {
										"id": 1676,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3443:0:12"
									},
									"scope": 1867,
									"src": "3355:89:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "acf3f077",
									"id": 1684,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeExternalPositionModule",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1679,
												"mutability": "mutable",
												"name": "_component",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1684,
												"src": "3487:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3487:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1681,
												"mutability": "mutable",
												"name": "_positionModule",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1684,
												"src": "3507:23:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3507:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3486:45:12"
									},
									"returnParameters": {
										"id": 1683,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3540:0:12"
									},
									"scope": 1867,
									"src": "3449:92:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "63a90fc1",
									"id": 1693,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "editExternalPositionUnit",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1686,
												"mutability": "mutable",
												"name": "_component",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1693,
												"src": "3580:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3580:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1688,
												"mutability": "mutable",
												"name": "_positionModule",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1693,
												"src": "3600:23:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1687,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3600:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1690,
												"mutability": "mutable",
												"name": "_realUnit",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1693,
												"src": "3625:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1689,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3625:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3579:63:12"
									},
									"returnParameters": {
										"id": 1692,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3651:0:12"
									},
									"scope": 1867,
									"src": "3546:106:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "26898fe1",
									"id": 1702,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "editExternalPositionData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1695,
												"mutability": "mutable",
												"name": "_component",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1702,
												"src": "3691:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3691:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1697,
												"mutability": "mutable",
												"name": "_positionModule",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1702,
												"src": "3711:23:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1696,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3711:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1699,
												"mutability": "mutable",
												"name": "_data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1702,
												"src": "3736:20:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1698,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3736:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3690:67:12"
									},
									"returnParameters": {
										"id": 1701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3766:0:12"
									},
									"scope": 1867,
									"src": "3657:110:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "8f6f0332",
									"id": 1713,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "invoke",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1704,
												"mutability": "mutable",
												"name": "_target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1713,
												"src": "3789:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1703,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3789:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1706,
												"mutability": "mutable",
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1713,
												"src": "3806:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1705,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3806:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1708,
												"mutability": "mutable",
												"name": "_data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1713,
												"src": "3822:20:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1707,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3822:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3788:55:12"
									},
									"returnParameters": {
										"id": 1712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1711,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1713,
												"src": "3861:12:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1710,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3861:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3860:14:12"
									},
									"scope": 1867,
									"src": "3773:102:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "c2de0e9d",
									"id": 1718,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "editPositionMultiplier",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1715,
												"mutability": "mutable",
												"name": "_newMultiplier",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1718,
												"src": "3913:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1714,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3913:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3912:23:12"
									},
									"returnParameters": {
										"id": 1717,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3944:0:12"
									},
									"scope": 1867,
									"src": "3881:64:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "40c10f19",
									"id": 1725,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1720,
												"mutability": "mutable",
												"name": "_account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1725,
												"src": "3965:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3965:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1722,
												"mutability": "mutable",
												"name": "_quantity",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1725,
												"src": "3983:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1721,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3983:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3964:37:12"
									},
									"returnParameters": {
										"id": 1724,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4010:0:12"
									},
									"scope": 1867,
									"src": "3951:60:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "9dc29fac",
									"id": 1732,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1727,
												"mutability": "mutable",
												"name": "_account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1732,
												"src": "4030:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4030:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1729,
												"mutability": "mutable",
												"name": "_quantity",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1732,
												"src": "4048:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4048:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4029:37:12"
									},
									"returnParameters": {
										"id": 1731,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4075:0:12"
									},
									"scope": 1867,
									"src": "4016:60:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "f83d08ba",
									"id": 1735,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "lock",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1733,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4095:2:12"
									},
									"returnParameters": {
										"id": 1734,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4106:0:12"
									},
									"scope": 1867,
									"src": "4082:25:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "a69df4b5",
									"id": 1738,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "unlock",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1736,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4127:2:12"
									},
									"returnParameters": {
										"id": 1737,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4138:0:12"
									},
									"scope": 1867,
									"src": "4112:27:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "1ed86f19",
									"id": 1743,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addModule",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1740,
												"mutability": "mutable",
												"name": "_module",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1743,
												"src": "4164:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1739,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4164:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4163:17:12"
									},
									"returnParameters": {
										"id": 1742,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4189:0:12"
									},
									"scope": 1867,
									"src": "4145:45:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "a0632461",
									"id": 1748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeModule",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1745,
												"mutability": "mutable",
												"name": "_module",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1748,
												"src": "4217:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1744,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4217:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4216:17:12"
									},
									"returnParameters": {
										"id": 1747,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4242:0:12"
									},
									"scope": 1867,
									"src": "4195:48:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "0ffe0f1e",
									"id": 1751,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initializeModule",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1749,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4273:2:12"
									},
									"returnParameters": {
										"id": 1750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4284:0:12"
									},
									"scope": 1867,
									"src": "4248:37:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "d0ebdbe7",
									"id": 1756,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setManager",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1753,
												"mutability": "mutable",
												"name": "_manager",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1756,
												"src": "4311:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4311:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4310:18:12"
									},
									"returnParameters": {
										"id": 1755,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4337:0:12"
									},
									"scope": 1867,
									"src": "4291:47:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "481c6a75",
									"id": 1761,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "manager",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1757,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4360:2:12"
									},
									"returnParameters": {
										"id": 1760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1759,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1761,
												"src": "4386:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1758,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4386:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4385:9:12"
									},
									"scope": 1867,
									"src": "4344:51:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "35bc4e52",
									"id": 1768,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "moduleStates",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1763,
												"mutability": "mutable",
												"name": "_module",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1768,
												"src": "4422:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4422:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4421:17:12"
									},
									"returnParameters": {
										"id": 1767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1766,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1768,
												"src": "4462:11:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_ModuleState_$1627",
													"typeString": "enum ISetToken.ModuleState"
												},
												"typeName": {
													"contractScope": null,
													"id": 1765,
													"name": "ModuleState",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1627,
													"src": "4462:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_ModuleState_$1627",
														"typeString": "enum ISetToken.ModuleState"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4461:13:12"
									},
									"scope": 1867,
									"src": "4400:75:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "b2494df3",
									"id": 1774,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getModules",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1769,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4499:2:12"
									},
									"returnParameters": {
										"id": 1773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1772,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1774,
												"src": "4525:16:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1770,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4525:7:12",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1771,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "4525:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4524:18:12"
									},
									"scope": 1867,
									"src": "4480:63:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "66cb8d2f",
									"id": 1781,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getDefaultPositionRealUnit",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1776,
												"mutability": "mutable",
												"name": "_component",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1781,
												"src": "4589:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1775,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4589:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4588:20:12"
									},
									"returnParameters": {
										"id": 1780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1779,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1781,
												"src": "4631:6:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1778,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4631:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4630:8:12"
									},
									"scope": 1867,
									"src": "4553:86:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "22ebeba4",
									"id": 1790,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getExternalPositionRealUnit",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1783,
												"mutability": "mutable",
												"name": "_component",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1790,
												"src": "4681:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1782,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4681:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1785,
												"mutability": "mutable",
												"name": "_positionModule",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1790,
												"src": "4701:23:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4701:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4680:45:12"
									},
									"returnParameters": {
										"id": 1789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1788,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1790,
												"src": "4748:6:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1787,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4748:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4747:8:12"
									},
									"scope": 1867,
									"src": "4644:112:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "99d50d5d",
									"id": 1796,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getComponents",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1791,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4783:2:12"
									},
									"returnParameters": {
										"id": 1795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1794,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1796,
												"src": "4808:16:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1792,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4808:7:12",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1793,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "4808:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4807:18:12"
									},
									"scope": 1867,
									"src": "4761:65:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "a7bdad03",
									"id": 1804,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getExternalPositionModules",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1798,
												"mutability": "mutable",
												"name": "_component",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1804,
												"src": "4867:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1797,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4867:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4866:20:12"
									},
									"returnParameters": {
										"id": 1803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1802,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1804,
												"src": "4909:16:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1800,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4909:7:12",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1801,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "4909:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4908:18:12"
									},
									"scope": 1867,
									"src": "4831:96:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "8ae458da",
									"id": 1813,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getExternalPositionData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1806,
												"mutability": "mutable",
												"name": "_component",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1813,
												"src": "4965:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1805,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4965:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1808,
												"mutability": "mutable",
												"name": "_positionModule",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1813,
												"src": "4985:23:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1807,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4985:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4964:45:12"
									},
									"returnParameters": {
										"id": 1812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1811,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1813,
												"src": "5032:12:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1810,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5032:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5031:14:12"
									},
									"scope": 1867,
									"src": "4932:114:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "7d966593",
									"id": 1822,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isExternalPositionModule",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1815,
												"mutability": "mutable",
												"name": "_component",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1822,
												"src": "5085:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1814,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5085:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1817,
												"mutability": "mutable",
												"name": "_module",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1822,
												"src": "5105:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1816,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5105:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5084:37:12"
									},
									"returnParameters": {
										"id": 1821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1820,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1822,
												"src": "5144:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1819,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5144:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5143:6:12"
									},
									"scope": 1867,
									"src": "5051:99:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "df5e9b29",
									"id": 1829,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isComponent",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1824,
												"mutability": "mutable",
												"name": "_component",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1829,
												"src": "5176:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1823,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5176:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5175:20:12"
									},
									"returnParameters": {
										"id": 1828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1827,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1829,
												"src": "5218:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1826,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5218:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5217:6:12"
									},
									"scope": 1867,
									"src": "5155:69:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "5230c396",
									"id": 1834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "positionMultiplier",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1830,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5261:2:12"
									},
									"returnParameters": {
										"id": 1833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1832,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1834,
												"src": "5287:6:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1831,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "5287:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5286:8:12"
									},
									"scope": 1867,
									"src": "5234:61:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "80275860",
									"id": 1840,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPositions",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1835,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5321:2:12"
									},
									"returnParameters": {
										"id": 1839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1838,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1840,
												"src": "5347:17:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Position_$1638_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct ISetToken.Position[]"
												},
												"typeName": {
													"baseType": {
														"contractScope": null,
														"id": 1836,
														"name": "Position",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 1638,
														"src": "5347:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Position_$1638_storage_ptr",
															"typeString": "struct ISetToken.Position"
														}
													},
													"id": 1837,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "5347:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Position_$1638_storage_$dyn_storage_ptr",
														"typeString": "struct ISetToken.Position[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5346:19:12"
									},
									"scope": 1867,
									"src": "5300:66:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "eaf993e1",
									"id": 1847,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalComponentRealUnits",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1842,
												"mutability": "mutable",
												"name": "_component",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1847,
												"src": "5407:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1841,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5407:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5406:20:12"
									},
									"returnParameters": {
										"id": 1846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1845,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1847,
												"src": "5449:6:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1844,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "5449:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5448:8:12"
									},
									"scope": 1867,
									"src": "5371:86:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "d7f1b27c",
									"id": 1854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isInitializedModule",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1849,
												"mutability": "mutable",
												"name": "_module",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1854,
												"src": "5492:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5492:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5491:17:12"
									},
									"returnParameters": {
										"id": 1853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1852,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1854,
												"src": "5531:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1851,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5531:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5530:6:12"
									},
									"scope": 1867,
									"src": "5463:74:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "53bae5f7",
									"id": 1861,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isPendingModule",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1856,
												"mutability": "mutable",
												"name": "_module",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1861,
												"src": "5567:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1855,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5567:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5566:17:12"
									},
									"returnParameters": {
										"id": 1860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1859,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1861,
												"src": "5606:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1858,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5606:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5605:6:12"
									},
									"scope": 1867,
									"src": "5542:70:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "a4e2d634",
									"id": 1866,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isLocked",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1862,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5634:2:12"
									},
									"returnParameters": {
										"id": 1865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1864,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1866,
												"src": "5660:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1863,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5660:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5659:6:12"
									},
									"scope": 1867,
									"src": "5617:49:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1868,
							"src": "887:4781:12"
						}
					],
					"src": "654:5014:12"
				},
				"id": 12
			},
			"contracts/interfaces/ISetValuer.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/ISetValuer.sol",
					"exportedSymbols": {
						"ISetValuer": [
							1881
						]
					},
					"id": 1882,
					"license": "Apache License",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1869,
							"literals": [
								"solidity",
								"0.6",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "654:23:13"
						},
						{
							"absolutePath": "contracts/interfaces/ISetToken.sol",
							"file": "./ISetToken.sol",
							"id": 1871,
							"nodeType": "ImportDirective",
							"scope": 1882,
							"sourceUnit": 1868,
							"src": "679:44:13",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 1870,
										"name": "ISetToken",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "688:9:13",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 1881,
							"linearizedBaseContracts": [
								1881
							],
							"name": "ISetValuer",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"functionSelector": "6101c540",
									"id": 1880,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "calculateSetTokenValuation",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1873,
												"mutability": "mutable",
												"name": "_setToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1880,
												"src": "788:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISetToken_$1867",
													"typeString": "contract ISetToken"
												},
												"typeName": {
													"contractScope": null,
													"id": 1872,
													"name": "ISetToken",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1867,
													"src": "788:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISetToken_$1867",
														"typeString": "contract ISetToken"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1875,
												"mutability": "mutable",
												"name": "_quoteAsset",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1880,
												"src": "809:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1874,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "809:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "787:42:13"
									},
									"returnParameters": {
										"id": 1879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1878,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1880,
												"src": "853:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1877,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "853:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "852:9:13"
									},
									"scope": 1881,
									"src": "752:110:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1882,
							"src": "725:139:13"
						}
					],
					"src": "654:210:13"
				},
				"id": 13
			},
			"contracts/lib/AddressArrayUtils.sol": {
				"ast": {
					"absolutePath": "contracts/lib/AddressArrayUtils.sol",
					"exportedSymbols": {
						"AddressArrayUtils": [
							2433
						]
					},
					"id": 2434,
					"license": "Apache License",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1883,
							"literals": [
								"solidity",
								"0.6",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "656:23:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1884,
								"nodeType": "StructuredDocumentation",
								"src": "681:176:14",
								"text": " @title AddressArrayUtils\n @author Set Protocol\n Utility functions to handle Address Arrays\n CHANGELOG:\n - 4/21/21: Added validatePairsWithArray methods"
							},
							"fullyImplemented": true,
							"id": 2433,
							"linearizedBaseContracts": [
								2433
							],
							"name": "AddressArrayUtils",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1933,
										"nodeType": "Block",
										"src": "1225:213:14",
										"statements": [
											{
												"assignments": [
													1898
												],
												"declarations": [
													{
														"constant": false,
														"id": 1898,
														"mutability": "mutable",
														"name": "length",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1933,
														"src": "1235:14:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1897,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1235:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1901,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1899,
														"name": "A",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1888,
														"src": "1252:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"id": 1900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "1252:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1235:25:14"
											},
											{
												"body": {
													"id": 1923,
													"nodeType": "Block",
													"src": "1307:88:14",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1916,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1912,
																		"name": "A",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1888,
																		"src": "1325:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		}
																	},
																	"id": 1914,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1913,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1903,
																		"src": "1327:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1325:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1915,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1890,
																	"src": "1333:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1325:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 1922,
															"nodeType": "IfStatement",
															"src": "1321:64:14",
															"trueBody": {
																"id": 1921,
																"nodeType": "Block",
																"src": "1336:49:14",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"components": [
																				{
																					"argumentTypes": null,
																					"id": 1917,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1903,
																					"src": "1362:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"hexValue": "74727565",
																					"id": 1918,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "bool",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1365:4:14",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"value": "true"
																				}
																			],
																			"id": 1919,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "1361:9:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_uint256_$_t_bool_$",
																				"typeString": "tuple(uint256,bool)"
																			}
																		},
																		"functionReturnParameters": 1896,
																		"id": 1920,
																		"nodeType": "Return",
																		"src": "1354:16:14"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1906,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1903,
														"src": "1290:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1907,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1898,
														"src": "1294:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1290:10:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1924,
												"initializationExpression": {
													"assignments": [
														1903
													],
													"declarations": [
														{
															"constant": false,
															"id": 1903,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 1924,
															"src": "1275:9:14",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1902,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1275:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 1905,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1904,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1287:1:14",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1275:13:14"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 1910,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1302:3:14",
														"subExpression": {
															"argumentTypes": null,
															"id": 1909,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1903,
															"src": "1302:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1911,
													"nodeType": "ExpressionStatement",
													"src": "1302:3:14"
												},
												"nodeType": "ForStatement",
												"src": "1270:125:14"
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1928,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "-",
																	"prefix": true,
																	"src": "1420:2:14",
																	"subExpression": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 1927,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1421:1:14",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_minus_1_by_1",
																		"typeString": "int_const -1"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_minus_1_by_1",
																		"typeString": "int_const -1"
																	}
																],
																"id": 1926,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1412:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1925,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1412:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1929,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1412:11:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "66616c7365",
															"id": 1930,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1425:5:14",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"id": 1931,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1411:20:14",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_bool_$",
														"typeString": "tuple(uint256,bool)"
													}
												},
												"functionReturnParameters": 1896,
												"id": 1932,
												"nodeType": "Return",
												"src": "1404:27:14"
											}
										]
									},
									"documentation": {
										"id": 1885,
										"nodeType": "StructuredDocumentation",
										"src": "891:243:14",
										"text": " Finds the index of the first occurrence of the given element.\n @param A The input array to search\n @param a The value to find\n @return Returns (index and isIn) for the first occurrence starting from index 0"
									},
									"id": 1934,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "indexOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1888,
												"mutability": "mutable",
												"name": "A",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1934,
												"src": "1156:18:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1886,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1156:7:14",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1887,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "1156:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1890,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1934,
												"src": "1176:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1889,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1176:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1155:31:14"
									},
									"returnParameters": {
										"id": 1896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1893,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1934,
												"src": "1210:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1210:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1895,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1934,
												"src": "1219:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1894,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1219:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1209:15:14"
									},
									"scope": 2433,
									"src": "1139:299:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1954,
										"nodeType": "Block",
										"src": "1766:67:14",
										"statements": [
											{
												"assignments": [
													null,
													1946
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 1946,
														"mutability": "mutable",
														"name": "isIn",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1954,
														"src": "1779:9:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1945,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1779:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1951,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1948,
															"name": "A",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1938,
															"src": "1800:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1949,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1940,
															"src": "1803:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1947,
														"name": "indexOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1934,
														"src": "1792:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$returns$_t_uint256_$_t_bool_$",
															"typeString": "function (address[] memory,address) pure returns (uint256,bool)"
														}
													},
													"id": 1950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1792:13:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_bool_$",
														"typeString": "tuple(uint256,bool)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1776:29:14"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1952,
													"name": "isIn",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1946,
													"src": "1822:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1944,
												"id": 1953,
												"nodeType": "Return",
												"src": "1815:11:14"
											}
										]
									},
									"documentation": {
										"id": 1935,
										"nodeType": "StructuredDocumentation",
										"src": "1444:239:14",
										"text": " Returns true if the value is present in the list. Uses indexOf internally.\n @param A The input array to search\n @param a The value to find\n @return Returns isIn for the first occurrence starting from index 0"
									},
									"id": 1955,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1938,
												"mutability": "mutable",
												"name": "A",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1955,
												"src": "1706:18:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1936,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1706:7:14",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1937,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "1706:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1940,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1955,
												"src": "1726:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1939,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1726:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1705:31:14"
									},
									"returnParameters": {
										"id": 1944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1943,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1955,
												"src": "1760:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1942,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1760:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1759:6:14"
									},
									"scope": 2433,
									"src": "1688:145:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2019,
										"nodeType": "Block",
										"src": "2108:335:14",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1968,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1965,
																	"name": "A",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1959,
																	"src": "2126:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 1966,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2126:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1967,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2137:1:14",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2126:12:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4120697320656d707479",
															"id": 1969,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2140:12:14",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fa9449c1699019b40bd3bb617487eec1c7f4b5666a5ff262398a74a2679cdf88",
																"typeString": "literal_string \"A is empty\""
															},
															"value": "A is empty"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fa9449c1699019b40bd3bb617487eec1c7f4b5666a5ff262398a74a2679cdf88",
																"typeString": "literal_string \"A is empty\""
															}
														],
														"id": 1964,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2118:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2118:35:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1971,
												"nodeType": "ExpressionStatement",
												"src": "2118:35:14"
											},
											{
												"body": {
													"id": 2015,
													"nodeType": "Block",
													"src": "2207:208:14",
													"statements": [
														{
															"assignments": [
																1986
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1986,
																	"mutability": "mutable",
																	"name": "current",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 2015,
																	"src": "2221:15:14",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1985,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2221:7:14",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1990,
															"initialValue": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1987,
																	"name": "A",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1959,
																	"src": "2239:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 1989,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1988,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1973,
																	"src": "2241:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2239:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2221:22:14"
														},
														{
															"body": {
																"id": 2013,
																"nodeType": "Block",
																"src": "2300:105:14",
																"statements": [
																	{
																		"condition": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"id": 2008,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 2004,
																				"name": "current",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1986,
																				"src": "2322:7:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 2005,
																					"name": "A",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1959,
																					"src": "2333:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																						"typeString": "address[] memory"
																					}
																				},
																				"id": 2007,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 2006,
																					"name": "j",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1992,
																					"src": "2335:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "2333:4:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "2322:15:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": null,
																		"id": 2012,
																		"nodeType": "IfStatement",
																		"src": "2318:73:14",
																		"trueBody": {
																			"id": 2011,
																			"nodeType": "Block",
																			"src": "2339:52:14",
																			"statements": [
																				{
																					"expression": {
																						"argumentTypes": null,
																						"hexValue": "74727565",
																						"id": 2009,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "bool",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "2368:4:14",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						},
																						"value": "true"
																					},
																					"functionReturnParameters": 1963,
																					"id": 2010,
																					"nodeType": "Return",
																					"src": "2361:11:14"
																				}
																			]
																		}
																	}
																]
															},
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2000,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1997,
																	"name": "j",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1992,
																	"src": "2281:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1998,
																		"name": "A",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1959,
																		"src": "2285:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		}
																	},
																	"id": 1999,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2285:8:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2281:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2014,
															"initializationExpression": {
																"assignments": [
																	1992
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1992,
																		"mutability": "mutable",
																		"name": "j",
																		"nodeType": "VariableDeclaration",
																		"overrides": null,
																		"scope": 2014,
																		"src": "2262:9:14",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1991,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "2262:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"value": null,
																		"visibility": "internal"
																	}
																],
																"id": 1996,
																"initialValue": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1995,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 1993,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1973,
																		"src": "2274:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 1994,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2278:1:14",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "2274:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "2262:17:14"
															},
															"loopExpression": {
																"expression": {
																	"argumentTypes": null,
																	"id": 2002,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "2295:3:14",
																	"subExpression": {
																		"argumentTypes": null,
																		"id": 2001,
																		"name": "j",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1992,
																		"src": "2295:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2003,
																"nodeType": "ExpressionStatement",
																"src": "2295:3:14"
															},
															"nodeType": "ForStatement",
															"src": "2257:148:14"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1976,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1973,
														"src": "2184:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1980,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1977,
																"name": "A",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1959,
																"src": "2188:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 1978,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2188:8:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "31",
															"id": 1979,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2199:1:14",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2188:12:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2184:16:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2016,
												"initializationExpression": {
													"assignments": [
														1973
													],
													"declarations": [
														{
															"constant": false,
															"id": 1973,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 2016,
															"src": "2169:9:14",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1972,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2169:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 1975,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1974,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2181:1:14",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2169:13:14"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 1983,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2202:3:14",
														"subExpression": {
															"argumentTypes": null,
															"id": 1982,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1973,
															"src": "2202:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1984,
													"nodeType": "ExpressionStatement",
													"src": "2202:3:14"
												},
												"nodeType": "ForStatement",
												"src": "2164:251:14"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "66616c7365",
													"id": 2017,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2431:5:14",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"functionReturnParameters": 1963,
												"id": 2018,
												"nodeType": "Return",
												"src": "2424:12:14"
											}
										]
									},
									"documentation": {
										"id": 1956,
										"nodeType": "StructuredDocumentation",
										"src": "1839:194:14",
										"text": " Returns true if there are 2 elements that are the same in an array\n @param A The input array to search\n @return Returns boolean for the first occurrence of a duplicate"
									},
									"id": 2020,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasDuplicate",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1959,
												"mutability": "mutable",
												"name": "A",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2020,
												"src": "2060:18:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1957,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2060:7:14",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1958,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "2060:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2059:20:14"
									},
									"returnParameters": {
										"id": 1963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1962,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2020,
												"src": "2102:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1961,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2102:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2101:6:14"
									},
									"scope": 2433,
									"src": "2038:405:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2062,
										"nodeType": "Block",
										"src": "2719:227:14",
										"statements": [
											{
												"assignments": [
													2033,
													2035
												],
												"declarations": [
													{
														"constant": false,
														"id": 2033,
														"mutability": "mutable",
														"name": "index",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2062,
														"src": "2730:13:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2032,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2730:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2035,
														"mutability": "mutable",
														"name": "isIn",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2062,
														"src": "2745:9:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2034,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2745:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2040,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2037,
															"name": "A",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2024,
															"src": "2766:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 2038,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2026,
															"src": "2769:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2036,
														"name": "indexOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1934,
														"src": "2758:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$returns$_t_uint256_$_t_bool_$",
															"typeString": "function (address[] memory,address) pure returns (uint256,bool)"
														}
													},
													"id": 2039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2758:13:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_bool_$",
														"typeString": "tuple(uint256,bool)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2729:42:14"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 2042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2785:5:14",
													"subExpression": {
														"argumentTypes": null,
														"id": 2041,
														"name": "isIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2035,
														"src": "2786:4:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2060,
													"nodeType": "Block",
													"src": "2854:86:14",
													"statements": [
														{
															"assignments": [
																2052,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2052,
																	"mutability": "mutable",
																	"name": "_A",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 2060,
																	"src": "2869:19:14",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[]"
																	},
																	"typeName": {
																		"baseType": {
																			"id": 2050,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2869:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 2051,
																		"length": null,
																		"nodeType": "ArrayTypeName",
																		"src": "2869:9:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																			"typeString": "address[]"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																},
																null
															],
															"id": 2057,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 2054,
																		"name": "A",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2024,
																		"src": "2897:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 2055,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2033,
																		"src": "2900:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2053,
																	"name": "pop",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2207,
																	"src": "2893:3:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$",
																		"typeString": "function (address[] memory,uint256) pure returns (address[] memory,address)"
																	}
																},
																"id": 2056,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2893:13:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$",
																	"typeString": "tuple(address[] memory,address)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2868:38:14"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 2058,
																"name": "_A",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2052,
																"src": "2927:2:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"functionReturnParameters": 2031,
															"id": 2059,
															"nodeType": "Return",
															"src": "2920:9:14"
														}
													]
												},
												"id": 2061,
												"nodeType": "IfStatement",
												"src": "2781:159:14",
												"trueBody": {
													"id": 2047,
													"nodeType": "Block",
													"src": "2792:56:14",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "41646472657373206e6f7420696e2061727261792e",
																		"id": 2044,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2813:23:14",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_0f2c1067edb64e6b25fe06aa72f64d4e3e800b5e83261c53addffa32922ef7dc",
																			"typeString": "literal_string \"Address not in array.\""
																		},
																		"value": "Address not in array."
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_0f2c1067edb64e6b25fe06aa72f64d4e3e800b5e83261c53addffa32922ef7dc",
																			"typeString": "literal_string \"Address not in array.\""
																		}
																	],
																	"id": 2043,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-19,
																		-19
																	],
																	"referencedDeclaration": -19,
																	"src": "2806:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 2045,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2806:31:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2046,
															"nodeType": "ExpressionStatement",
															"src": "2806:31:14"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2021,
										"nodeType": "StructuredDocumentation",
										"src": "2449:149:14",
										"text": " @param A The input array to search\n @param a The address to remove\n @return Returns the array with the object removed."
									},
									"id": 2063,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2024,
												"mutability": "mutable",
												"name": "A",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2063,
												"src": "2619:18:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2022,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2619:7:14",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2023,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "2619:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2026,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2063,
												"src": "2639:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2025,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2639:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2618:31:14"
									},
									"returnParameters": {
										"id": 2031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2030,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2063,
												"src": "2697:16:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2028,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2697:7:14",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2029,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "2697:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2696:18:14"
									},
									"scope": 2433,
									"src": "2603:343:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2115,
										"nodeType": "Block",
										"src": "3124:368:14",
										"statements": [
											{
												"assignments": [
													2073,
													2075
												],
												"declarations": [
													{
														"constant": false,
														"id": 2073,
														"mutability": "mutable",
														"name": "index",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2115,
														"src": "3135:13:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2072,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3135:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2075,
														"mutability": "mutable",
														"name": "isIn",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2115,
														"src": "3150:9:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2074,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3150:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2080,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2077,
															"name": "A",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2067,
															"src": "3171:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[] storage pointer"
															}
														},
														{
															"argumentTypes": null,
															"id": 2078,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2069,
															"src": "3174:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[] storage pointer"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2076,
														"name": "indexOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1934,
														"src": "3163:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$returns$_t_uint256_$_t_bool_$",
															"typeString": "function (address[] memory,address) pure returns (uint256,bool)"
														}
													},
													"id": 2079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3163:13:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_bool_$",
														"typeString": "tuple(uint256,bool)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3134:42:14"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 2082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3190:5:14",
													"subExpression": {
														"argumentTypes": null,
														"id": 2081,
														"name": "isIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2075,
														"src": "3191:4:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2113,
													"nodeType": "Block",
													"src": "3259:227:14",
													"statements": [
														{
															"assignments": [
																2089
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2089,
																	"mutability": "mutable",
																	"name": "lastIndex",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 2113,
																	"src": "3273:17:14",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2088,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3273:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 2094,
															"initialValue": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2093,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 2090,
																		"name": "A",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2067,
																		"src": "3293:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																			"typeString": "address[] storage pointer"
																		}
																	},
																	"id": 2091,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "3293:8:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 2092,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3304:1:14",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3293:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3273:32:14"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2097,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 2095,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2073,
																	"src": "3407:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 2096,
																	"name": "lastIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2089,
																	"src": "3416:9:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3407:18:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 2107,
															"nodeType": "IfStatement",
															"src": "3403:52:14",
															"trueBody": {
																"id": 2106,
																"nodeType": "Block",
																"src": "3427:28:14",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 2104,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 2098,
																					"name": "A",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2067,
																					"src": "3429:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																						"typeString": "address[] storage pointer"
																					}
																				},
																				"id": 2100,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 2099,
																					"name": "index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2073,
																					"src": "3431:5:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3429:8:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 2101,
																					"name": "A",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2067,
																					"src": "3440:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																						"typeString": "address[] storage pointer"
																					}
																				},
																				"id": 2103,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 2102,
																					"name": "lastIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2089,
																					"src": "3442:9:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "3440:12:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "3429:23:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 2105,
																		"nodeType": "ExpressionStatement",
																		"src": "3429:23:14"
																	}
																]
															}
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"argumentTypes": null,
																		"id": 2108,
																		"name": "A",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2067,
																		"src": "3468:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																			"typeString": "address[] storage pointer"
																		}
																	},
																	"id": 2110,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "pop",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "3468:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypop_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 2111,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3468:7:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2112,
															"nodeType": "ExpressionStatement",
															"src": "3468:7:14"
														}
													]
												},
												"id": 2114,
												"nodeType": "IfStatement",
												"src": "3186:300:14",
												"trueBody": {
													"id": 2087,
													"nodeType": "Block",
													"src": "3197:56:14",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "41646472657373206e6f7420696e2061727261792e",
																		"id": 2084,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3218:23:14",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_0f2c1067edb64e6b25fe06aa72f64d4e3e800b5e83261c53addffa32922ef7dc",
																			"typeString": "literal_string \"Address not in array.\""
																		},
																		"value": "Address not in array."
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_0f2c1067edb64e6b25fe06aa72f64d4e3e800b5e83261c53addffa32922ef7dc",
																			"typeString": "literal_string \"Address not in array.\""
																		}
																	],
																	"id": 2083,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-19,
																		-19
																	],
																	"referencedDeclaration": -19,
																	"src": "3211:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 2085,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3211:31:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2086,
															"nodeType": "ExpressionStatement",
															"src": "3211:31:14"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2064,
										"nodeType": "StructuredDocumentation",
										"src": "2952:91:14",
										"text": " @param A The input array to search\n @param a The address to remove"
									},
									"id": 2116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "removeStorage",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2067,
												"mutability": "mutable",
												"name": "A",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2116,
												"src": "3071:19:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2065,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3071:7:14",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2066,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "3071:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2069,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2116,
												"src": "3092:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2068,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3092:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3070:32:14"
									},
									"returnParameters": {
										"id": 2071,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3124:0:14"
									},
									"scope": 2433,
									"src": "3048:444:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2206,
										"nodeType": "Block",
										"src": "3818:410:14",
										"statements": [
											{
												"assignments": [
													2131
												],
												"declarations": [
													{
														"constant": false,
														"id": 2131,
														"mutability": "mutable",
														"name": "length",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2206,
														"src": "3828:14:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2130,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3828:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2134,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 2132,
														"name": "A",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2120,
														"src": "3845:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"id": 2133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "3845:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3828:25:14"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2136,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2122,
																"src": "3871:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 2137,
																	"name": "A",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2120,
																	"src": "3879:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 2138,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3879:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3871:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "496e646578206d757374206265203c2041206c656e677468",
															"id": 2140,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3889:26:14",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_11467192a127447240670f700d4e8898a4ed4640417dd4fd347f8ffa914ab45f",
																"typeString": "literal_string \"Index must be < A length\""
															},
															"value": "Index must be < A length"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_11467192a127447240670f700d4e8898a4ed4640417dd4fd347f8ffa914ab45f",
																"typeString": "literal_string \"Index must be < A length\""
															}
														],
														"id": 2135,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3863:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:53:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2142,
												"nodeType": "ExpressionStatement",
												"src": "3863:53:14"
											},
											{
												"assignments": [
													2147
												],
												"declarations": [
													{
														"constant": false,
														"id": 2147,
														"mutability": "mutable",
														"name": "newAddresses",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2206,
														"src": "3926:29:14",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 2145,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3926:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2146,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "3926:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2155,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2151,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2131,
																"src": "3972:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "31",
																"id": 2152,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3981:1:14",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "3972:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2150,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "3958:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (address[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 2148,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3962:7:14",
																"stateMutability": "nonpayable",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2149,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "3962:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														}
													},
													"id": 2154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3958:25:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3926:57:14"
											},
											{
												"body": {
													"id": 2174,
													"nodeType": "Block",
													"src": "4029:47:14",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 2172,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 2166,
																		"name": "newAddresses",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2147,
																		"src": "4043:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		}
																	},
																	"id": 2168,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 2167,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2157,
																		"src": "4056:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4043:15:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 2169,
																		"name": "A",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2120,
																		"src": "4061:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		}
																	},
																	"id": 2171,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 2170,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2157,
																		"src": "4063:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4061:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4043:22:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2173,
															"nodeType": "ExpressionStatement",
															"src": "4043:22:14"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2160,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2157,
														"src": "4013:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 2161,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2122,
														"src": "4017:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4013:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2175,
												"initializationExpression": {
													"assignments": [
														2157
													],
													"declarations": [
														{
															"constant": false,
															"id": 2157,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 2175,
															"src": "3998:9:14",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2156,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3998:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 2159,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 2158,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4010:1:14",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3998:13:14"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 2164,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4024:3:14",
														"subExpression": {
															"argumentTypes": null,
															"id": 2163,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2157,
															"src": "4024:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2165,
													"nodeType": "ExpressionStatement",
													"src": "4024:3:14"
												},
												"nodeType": "ForStatement",
												"src": "3993:83:14"
											},
											{
												"body": {
													"id": 2198,
													"nodeType": "Block",
													"src": "4130:51:14",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 2196,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 2188,
																		"name": "newAddresses",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2147,
																		"src": "4144:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		}
																	},
																	"id": 2192,
																	"indexExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2191,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 2189,
																			"name": "j",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2177,
																			"src": "4157:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "31",
																			"id": 2190,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4161:1:14",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "4157:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4144:19:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 2193,
																		"name": "A",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2120,
																		"src": "4166:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		}
																	},
																	"id": 2195,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 2194,
																		"name": "j",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2177,
																		"src": "4168:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4166:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4144:26:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2197,
															"nodeType": "ExpressionStatement",
															"src": "4144:26:14"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2182,
														"name": "j",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2177,
														"src": "4113:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 2183,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2131,
														"src": "4117:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4113:10:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2199,
												"initializationExpression": {
													"assignments": [
														2177
													],
													"declarations": [
														{
															"constant": false,
															"id": 2177,
															"mutability": "mutable",
															"name": "j",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 2199,
															"src": "4090:9:14",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2176,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4090:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 2181,
													"initialValue": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2180,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 2178,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2122,
															"src": "4102:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "31",
															"id": 2179,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4110:1:14",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4102:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4090:21:14"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 2186,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4125:3:14",
														"subExpression": {
															"argumentTypes": null,
															"id": 2185,
															"name": "j",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2177,
															"src": "4125:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2187,
													"nodeType": "ExpressionStatement",
													"src": "4125:3:14"
												},
												"nodeType": "ForStatement",
												"src": "4085:96:14"
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"id": 2200,
															"name": "newAddresses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2147,
															"src": "4198:12:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 2201,
																"name": "A",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2120,
																"src": "4212:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 2203,
															"indexExpression": {
																"argumentTypes": null,
																"id": 2202,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2122,
																"src": "4214:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4212:8:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"id": 2204,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "4197:24:14",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$",
														"typeString": "tuple(address[] memory,address)"
													}
												},
												"functionReturnParameters": 2129,
												"id": 2205,
												"nodeType": "Return",
												"src": "4190:31:14"
											}
										]
									},
									"documentation": {
										"id": 2117,
										"nodeType": "StructuredDocumentation",
										"src": "3498:189:14",
										"text": " Removes specified index from array\n @param A The input array to search\n @param index The index to remove\n @return Returns the new array and the removed entry"
									},
									"id": 2207,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pop",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2120,
												"mutability": "mutable",
												"name": "A",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2207,
												"src": "3705:18:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2118,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3705:7:14",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2119,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "3705:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2122,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2207,
												"src": "3725:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3725:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3704:35:14"
									},
									"returnParameters": {
										"id": 2129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2126,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2207,
												"src": "3787:16:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2124,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3787:7:14",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2125,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "3787:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2128,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2207,
												"src": "3805:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3786:27:14"
									},
									"scope": 2433,
									"src": "3692:536:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2287,
										"nodeType": "Block",
										"src": "4500:380:14",
										"statements": [
											{
												"assignments": [
													2221
												],
												"declarations": [
													{
														"constant": false,
														"id": 2221,
														"mutability": "mutable",
														"name": "aLength",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2287,
														"src": "4510:15:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2220,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4510:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2224,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 2222,
														"name": "A",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2211,
														"src": "4528:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"id": 2223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "4528:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4510:26:14"
											},
											{
												"assignments": [
													2226
												],
												"declarations": [
													{
														"constant": false,
														"id": 2226,
														"mutability": "mutable",
														"name": "bLength",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2287,
														"src": "4546:15:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2225,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4546:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2229,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 2227,
														"name": "B",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2214,
														"src": "4564:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"id": 2228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "4564:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4546:26:14"
											},
											{
												"assignments": [
													2234
												],
												"declarations": [
													{
														"constant": false,
														"id": 2234,
														"mutability": "mutable",
														"name": "newAddresses",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2287,
														"src": "4582:29:14",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 2232,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4582:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2233,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "4582:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2242,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2240,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2238,
																"name": "aLength",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2221,
																"src": "4628:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2239,
																"name": "bLength",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2226,
																"src": "4638:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4628:17:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2237,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "4614:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (address[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 2235,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4618:7:14",
																"stateMutability": "nonpayable",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2236,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "4618:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														}
													},
													"id": 2241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4614:32:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4582:64:14"
											},
											{
												"body": {
													"id": 2261,
													"nodeType": "Block",
													"src": "4694:47:14",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 2259,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 2253,
																		"name": "newAddresses",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2234,
																		"src": "4708:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		}
																	},
																	"id": 2255,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 2254,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2244,
																		"src": "4721:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4708:15:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 2256,
																		"name": "A",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2211,
																		"src": "4726:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		}
																	},
																	"id": 2258,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 2257,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2244,
																		"src": "4728:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4726:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4708:22:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2260,
															"nodeType": "ExpressionStatement",
															"src": "4708:22:14"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2247,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2244,
														"src": "4676:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 2248,
														"name": "aLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2221,
														"src": "4680:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4676:11:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2262,
												"initializationExpression": {
													"assignments": [
														2244
													],
													"declarations": [
														{
															"constant": false,
															"id": 2244,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 2262,
															"src": "4661:9:14",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2243,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4661:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 2246,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 2245,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4673:1:14",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4661:13:14"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 2251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4689:3:14",
														"subExpression": {
															"argumentTypes": null,
															"id": 2250,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2244,
															"src": "4689:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2252,
													"nodeType": "ExpressionStatement",
													"src": "4689:3:14"
												},
												"nodeType": "ForStatement",
												"src": "4656:85:14"
											},
											{
												"body": {
													"id": 2283,
													"nodeType": "Block",
													"src": "4788:57:14",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 2281,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 2273,
																		"name": "newAddresses",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2234,
																		"src": "4802:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		}
																	},
																	"id": 2277,
																	"indexExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2276,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 2274,
																			"name": "aLength",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2221,
																			"src": "4815:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 2275,
																			"name": "j",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2264,
																			"src": "4825:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4815:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4802:25:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 2278,
																		"name": "B",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2214,
																		"src": "4830:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		}
																	},
																	"id": 2280,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 2279,
																		"name": "j",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2264,
																		"src": "4832:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4830:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4802:32:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2282,
															"nodeType": "ExpressionStatement",
															"src": "4802:32:14"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2267,
														"name": "j",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2264,
														"src": "4770:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 2268,
														"name": "bLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2226,
														"src": "4774:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4770:11:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2284,
												"initializationExpression": {
													"assignments": [
														2264
													],
													"declarations": [
														{
															"constant": false,
															"id": 2264,
															"mutability": "mutable",
															"name": "j",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 2284,
															"src": "4755:9:14",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2263,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4755:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 2266,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 2265,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4767:1:14",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4755:13:14"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 2271,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4783:3:14",
														"subExpression": {
															"argumentTypes": null,
															"id": 2270,
															"name": "j",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2264,
															"src": "4783:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2272,
													"nodeType": "ExpressionStatement",
													"src": "4783:3:14"
												},
												"nodeType": "ForStatement",
												"src": "4750:95:14"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2285,
													"name": "newAddresses",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2234,
													"src": "4861:12:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"functionReturnParameters": 2219,
												"id": 2286,
												"nodeType": "Return",
												"src": "4854:19:14"
											}
										]
									},
									"documentation": {
										"id": 2208,
										"nodeType": "StructuredDocumentation",
										"src": "4234:164:14",
										"text": " Returns the combination of the two arrays\n @param A The first array\n @param B The second array\n @return Returns A extended by B"
									},
									"id": 2288,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "extend",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2211,
												"mutability": "mutable",
												"name": "A",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2288,
												"src": "4419:18:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2209,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4419:7:14",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2210,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "4419:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2214,
												"mutability": "mutable",
												"name": "B",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2288,
												"src": "4439:18:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2212,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4439:7:14",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2213,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "4439:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4418:40:14"
									},
									"returnParameters": {
										"id": 2219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2218,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2288,
												"src": "4482:16:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2216,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4482:7:14",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2217,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "4482:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4481:18:14"
									},
									"scope": 2433,
									"src": "4403:477:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2311,
										"nodeType": "Block",
										"src": "5211:112:14",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2303,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 2299,
																	"name": "A",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2292,
																	"src": "5229:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 2300,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "5229:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 2301,
																	"name": "B",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2295,
																	"src": "5241:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 2302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "5241:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5229:20:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4172726179206c656e677468206d69736d61746368",
															"id": 2304,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5251:23:14",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_179ae693e0c70d403e6d1a2bebe6454a8d095a8abd12c6f3f032c5018f3e2aea",
																"typeString": "literal_string \"Array length mismatch\""
															},
															"value": "Array length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_179ae693e0c70d403e6d1a2bebe6454a8d095a8abd12c6f3f032c5018f3e2aea",
																"typeString": "literal_string \"Array length mismatch\""
															}
														],
														"id": 2298,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5221:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5221:54:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2306,
												"nodeType": "ExpressionStatement",
												"src": "5221:54:14"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2308,
															"name": "A",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2292,
															"src": "5314:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														],
														"id": 2307,
														"name": "_validateLengthAndUniqueness",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2432,
														"src": "5285:28:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address[] memory) pure"
														}
													},
													"id": 2309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5285:31:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2310,
												"nodeType": "ExpressionStatement",
												"src": "5285:31:14"
											}
										]
									},
									"documentation": {
										"id": 2289,
										"nodeType": "StructuredDocumentation",
										"src": "4886:237:14",
										"text": " Validate that address and uint array lengths match. Validate address array is not empty\n and contains no duplicate elements.\n @param A         Array of addresses\n @param B         Array of uint"
									},
									"id": 2312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "validatePairsWithArray",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2292,
												"mutability": "mutable",
												"name": "A",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2312,
												"src": "5160:18:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2290,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "5160:7:14",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2291,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "5160:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2295,
												"mutability": "mutable",
												"name": "B",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2312,
												"src": "5180:15:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2293,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "5180:4:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2294,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "5180:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5159:37:14"
									},
									"returnParameters": {
										"id": 2297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5211:0:14"
									},
									"scope": 2433,
									"src": "5128:195:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2335,
										"nodeType": "Block",
										"src": "5654:112:14",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 2323,
																	"name": "A",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2316,
																	"src": "5672:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 2324,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "5672:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 2325,
																	"name": "B",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2319,
																	"src": "5684:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
																		"typeString": "bool[] memory"
																	}
																},
																"id": 2326,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "5684:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5672:20:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4172726179206c656e677468206d69736d61746368",
															"id": 2328,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5694:23:14",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_179ae693e0c70d403e6d1a2bebe6454a8d095a8abd12c6f3f032c5018f3e2aea",
																"typeString": "literal_string \"Array length mismatch\""
															},
															"value": "Array length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_179ae693e0c70d403e6d1a2bebe6454a8d095a8abd12c6f3f032c5018f3e2aea",
																"typeString": "literal_string \"Array length mismatch\""
															}
														],
														"id": 2322,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5664:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5664:54:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2330,
												"nodeType": "ExpressionStatement",
												"src": "5664:54:14"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2332,
															"name": "A",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2316,
															"src": "5757:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														],
														"id": 2331,
														"name": "_validateLengthAndUniqueness",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2432,
														"src": "5728:28:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address[] memory) pure"
														}
													},
													"id": 2333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5728:31:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2334,
												"nodeType": "ExpressionStatement",
												"src": "5728:31:14"
											}
										]
									},
									"documentation": {
										"id": 2313,
										"nodeType": "StructuredDocumentation",
										"src": "5329:237:14",
										"text": " Validate that address and bool array lengths match. Validate address array is not empty\n and contains no duplicate elements.\n @param A         Array of addresses\n @param B         Array of bool"
									},
									"id": 2336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "validatePairsWithArray",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2316,
												"mutability": "mutable",
												"name": "A",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2336,
												"src": "5603:18:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2314,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "5603:7:14",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2315,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "5603:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2319,
												"mutability": "mutable",
												"name": "B",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2336,
												"src": "5623:15:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
													"typeString": "bool[]"
												},
												"typeName": {
													"baseType": {
														"id": 2317,
														"name": "bool",
														"nodeType": "ElementaryTypeName",
														"src": "5623:4:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 2318,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "5623:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
														"typeString": "bool[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5602:37:14"
									},
									"returnParameters": {
										"id": 2321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5654:0:14"
									},
									"scope": 2433,
									"src": "5571:195:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2359,
										"nodeType": "Block",
										"src": "6104:112:14",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 2347,
																	"name": "A",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2340,
																	"src": "6122:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 2348,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "6122:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 2349,
																	"name": "B",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2343,
																	"src": "6134:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																		"typeString": "string memory[] memory"
																	}
																},
																"id": 2350,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "6134:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6122:20:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4172726179206c656e677468206d69736d61746368",
															"id": 2352,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6144:23:14",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_179ae693e0c70d403e6d1a2bebe6454a8d095a8abd12c6f3f032c5018f3e2aea",
																"typeString": "literal_string \"Array length mismatch\""
															},
															"value": "Array length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_179ae693e0c70d403e6d1a2bebe6454a8d095a8abd12c6f3f032c5018f3e2aea",
																"typeString": "literal_string \"Array length mismatch\""
															}
														],
														"id": 2346,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6114:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6114:54:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2354,
												"nodeType": "ExpressionStatement",
												"src": "6114:54:14"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2356,
															"name": "A",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2340,
															"src": "6207:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														],
														"id": 2355,
														"name": "_validateLengthAndUniqueness",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2432,
														"src": "6178:28:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address[] memory) pure"
														}
													},
													"id": 2357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6178:31:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2358,
												"nodeType": "ExpressionStatement",
												"src": "6178:31:14"
											}
										]
									},
									"documentation": {
										"id": 2337,
										"nodeType": "StructuredDocumentation",
										"src": "5772:242:14",
										"text": " Validate that address and string array lengths match. Validate address array is not empty\n and contains no duplicate elements.\n @param A         Array of addresses\n @param B         Array of strings"
									},
									"id": 2360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "validatePairsWithArray",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2340,
												"mutability": "mutable",
												"name": "A",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2360,
												"src": "6051:18:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2338,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "6051:7:14",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2339,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "6051:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2343,
												"mutability": "mutable",
												"name": "B",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2360,
												"src": "6071:17:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 2341,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "6071:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 2342,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "6071:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6050:39:14"
									},
									"returnParameters": {
										"id": 2345,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6104:0:14"
									},
									"scope": 2433,
									"src": "6019:197:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2383,
										"nodeType": "Block",
										"src": "6549:112:14",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 2371,
																	"name": "A",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2364,
																	"src": "6567:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 2372,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "6567:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 2373,
																	"name": "B",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2367,
																	"src": "6579:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 2374,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "6579:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6567:20:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4172726179206c656e677468206d69736d61746368",
															"id": 2376,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6589:23:14",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_179ae693e0c70d403e6d1a2bebe6454a8d095a8abd12c6f3f032c5018f3e2aea",
																"typeString": "literal_string \"Array length mismatch\""
															},
															"value": "Array length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_179ae693e0c70d403e6d1a2bebe6454a8d095a8abd12c6f3f032c5018f3e2aea",
																"typeString": "literal_string \"Array length mismatch\""
															}
														],
														"id": 2370,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6559:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6559:54:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2378,
												"nodeType": "ExpressionStatement",
												"src": "6559:54:14"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2380,
															"name": "A",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2364,
															"src": "6652:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														],
														"id": 2379,
														"name": "_validateLengthAndUniqueness",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2432,
														"src": "6623:28:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address[] memory) pure"
														}
													},
													"id": 2381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6623:31:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2382,
												"nodeType": "ExpressionStatement",
												"src": "6623:31:14"
											}
										]
									},
									"documentation": {
										"id": 2361,
										"nodeType": "StructuredDocumentation",
										"src": "6222:236:14",
										"text": " Validate that address array lengths match, and calling address array are not empty\n and contain no duplicate elements.\n @param A         Array of addresses\n @param B         Array of addresses"
									},
									"id": 2384,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "validatePairsWithArray",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2364,
												"mutability": "mutable",
												"name": "A",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2384,
												"src": "6495:18:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2362,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "6495:7:14",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2363,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "6495:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2367,
												"mutability": "mutable",
												"name": "B",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2384,
												"src": "6515:18:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2365,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "6515:7:14",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2366,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "6515:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6494:40:14"
									},
									"returnParameters": {
										"id": 2369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6549:0:14"
									},
									"scope": 2433,
									"src": "6463:198:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2407,
										"nodeType": "Block",
										"src": "6995:112:14",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2399,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 2395,
																	"name": "A",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2388,
																	"src": "7013:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 2396,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "7013:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 2397,
																	"name": "B",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2391,
																	"src": "7025:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
																		"typeString": "bytes memory[] memory"
																	}
																},
																"id": 2398,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "7025:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7013:20:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4172726179206c656e677468206d69736d61746368",
															"id": 2400,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7035:23:14",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_179ae693e0c70d403e6d1a2bebe6454a8d095a8abd12c6f3f032c5018f3e2aea",
																"typeString": "literal_string \"Array length mismatch\""
															},
															"value": "Array length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_179ae693e0c70d403e6d1a2bebe6454a8d095a8abd12c6f3f032c5018f3e2aea",
																"typeString": "literal_string \"Array length mismatch\""
															}
														],
														"id": 2394,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7005:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7005:54:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2402,
												"nodeType": "ExpressionStatement",
												"src": "7005:54:14"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2404,
															"name": "A",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2388,
															"src": "7098:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														],
														"id": 2403,
														"name": "_validateLengthAndUniqueness",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2432,
														"src": "7069:28:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address[] memory) pure"
														}
													},
													"id": 2405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7069:31:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2406,
												"nodeType": "ExpressionStatement",
												"src": "7069:31:14"
											}
										]
									},
									"documentation": {
										"id": 2385,
										"nodeType": "StructuredDocumentation",
										"src": "6667:239:14",
										"text": " Validate that address and bytes array lengths match. Validate address array is not empty\n and contains no duplicate elements.\n @param A         Array of addresses\n @param B         Array of bytes"
									},
									"id": 2408,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "validatePairsWithArray",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2388,
												"mutability": "mutable",
												"name": "A",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2408,
												"src": "6943:18:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2386,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "6943:7:14",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2387,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "6943:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2391,
												"mutability": "mutable",
												"name": "B",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2408,
												"src": "6963:16:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 2389,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "6963:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 2390,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "6963:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6942:38:14"
									},
									"returnParameters": {
										"id": 2393,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6995:0:14"
									},
									"scope": 2433,
									"src": "6911:196:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2431,
										"nodeType": "Block",
										"src": "7331:131:14",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 2416,
																	"name": "A",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2412,
																	"src": "7349:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 2417,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "7349:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 2418,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7360:1:14",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7349:12:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4172726179206c656e677468206d757374206265203e2030",
															"id": 2420,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7363:26:14",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ce1a95a66dbde85152ac6d096af3aea9f97a1574fab347ad734f5b94575ee303",
																"typeString": "literal_string \"Array length must be > 0\""
															},
															"value": "Array length must be > 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ce1a95a66dbde85152ac6d096af3aea9f97a1574fab347ad734f5b94575ee303",
																"typeString": "literal_string \"Array length must be > 0\""
															}
														],
														"id": 2415,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7341:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7341:49:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2422,
												"nodeType": "ExpressionStatement",
												"src": "7341:49:14"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2427,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "7408:16:14",
															"subExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 2425,
																		"name": "A",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2412,
																		"src": "7422:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		}
																	],
																	"id": 2424,
																	"name": "hasDuplicate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2020,
																	"src": "7409:12:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_bool_$",
																		"typeString": "function (address[] memory) pure returns (bool)"
																	}
																},
																"id": 2426,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7409:15:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "43616e6e6f74206475706c696361746520616464726573736573",
															"id": 2428,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7426:28:14",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6a08c9762053aea21deb94e64f88964620e1bdd6f1a6f46b1196f6bb70797f03",
																"typeString": "literal_string \"Cannot duplicate addresses\""
															},
															"value": "Cannot duplicate addresses"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6a08c9762053aea21deb94e64f88964620e1bdd6f1a6f46b1196f6bb70797f03",
																"typeString": "literal_string \"Cannot duplicate addresses\""
															}
														],
														"id": 2423,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7400:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7400:55:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2430,
												"nodeType": "ExpressionStatement",
												"src": "7400:55:14"
											}
										]
									},
									"documentation": {
										"id": 2409,
										"nodeType": "StructuredDocumentation",
										"src": "7113:141:14",
										"text": " Validate address array is not empty and contains no duplicate elements.\n @param A          Array of addresses"
									},
									"id": 2432,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_validateLengthAndUniqueness",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2412,
												"mutability": "mutable",
												"name": "A",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2432,
												"src": "7297:18:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2410,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "7297:7:14",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2411,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "7297:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7296:20:14"
									},
									"returnParameters": {
										"id": 2414,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7331:0:14"
									},
									"scope": 2433,
									"src": "7259:203:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2434,
							"src": "858:6606:14"
						}
					],
					"src": "656:6809:14"
				},
				"id": 14
			},
			"contracts/lib/ExplicitERC20.sol": {
				"ast": {
					"absolutePath": "contracts/lib/ExplicitERC20.sol",
					"exportedSymbols": {
						"ExplicitERC20": [
							2497
						]
					},
					"id": 2498,
					"license": "Apache License",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2435,
							"literals": [
								"solidity",
								"0.6",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "655:23:15"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 2437,
							"nodeType": "ImportDirective",
							"scope": 2498,
							"sourceUnit": 612,
							"src": "680:72:15",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 2436,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "689:6:15",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
							"id": 2439,
							"nodeType": "ImportDirective",
							"scope": 2498,
							"sourceUnit": 825,
							"src": "753:78:15",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 2438,
										"name": "SafeERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "762:9:15",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/math/SafeMath.sol",
							"id": 2441,
							"nodeType": "ImportDirective",
							"scope": 2498,
							"sourceUnit": 355,
							"src": "832:69:15",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 2440,
										"name": "SafeMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "841:8:15",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2442,
								"nodeType": "StructuredDocumentation",
								"src": "903:151:15",
								"text": " @title ExplicitERC20\n @author Set Protocol\n Utility functions for ERC20 transfers that require the explicit amount to be transferred."
							},
							"fullyImplemented": true,
							"id": 2497,
							"linearizedBaseContracts": [
								2497
							],
							"name": "ExplicitERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 2445,
									"libraryName": {
										"contractScope": null,
										"id": 2443,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 354,
										"src": "1089:8:15",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$354",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1083:27:15",
									"typeName": {
										"id": 2444,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1102:7:15",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"body": {
										"id": 2495,
										"nodeType": "Block",
										"src": "1725:598:15",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2457,
														"name": "_quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2454,
														"src": "1812:9:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 2458,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1824:1:15",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1812:13:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 2494,
												"nodeType": "IfStatement",
												"src": "1808:509:15",
												"trueBody": {
													"id": 2493,
													"nodeType": "Block",
													"src": "1827:490:15",
													"statements": [
														{
															"assignments": [
																2461
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2461,
																	"mutability": "mutable",
																	"name": "existingBalance",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 2493,
																	"src": "1841:23:15",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2460,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1841:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 2466,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 2464,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2452,
																		"src": "1884:3:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 2462,
																		"name": "_token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2448,
																		"src": "1867:6:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$611",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 2463,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 550,
																	"src": "1867:16:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 2465,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1867:21:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1841:47:15"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 2470,
																		"name": "_token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2448,
																		"src": "1947:6:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$611",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 2471,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2450,
																		"src": "1971:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 2472,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2452,
																		"src": "1994:3:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 2473,
																		"name": "_quantity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2454,
																		"src": "2015:9:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$611",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 2467,
																		"name": "SafeERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 824,
																		"src": "1903:9:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeERC20_$824_$",
																			"typeString": "type(library SafeERC20)"
																		}
																	},
																	"id": 2469,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 670,
																	"src": "1903:26:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$611_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 2474,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1903:135:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2475,
															"nodeType": "ExpressionStatement",
															"src": "1903:135:15"
														},
														{
															"assignments": [
																2477
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2477,
																	"mutability": "mutable",
																	"name": "newBalance",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 2493,
																	"src": "2053:18:15",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2476,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2053:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 2482,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 2480,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2452,
																		"src": "2091:3:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 2478,
																		"name": "_token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2448,
																		"src": "2074:6:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$611",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 2479,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 550,
																	"src": "2074:16:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 2481,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2074:21:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2053:42:15"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 2484,
																			"name": "newBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2477,
																			"src": "2199:10:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 2487,
																					"name": "_quantity",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2454,
																					"src": "2233:9:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 2485,
																					"name": "existingBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2461,
																					"src": "2213:15:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2486,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "add",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 181,
																				"src": "2213:19:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2488,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2213:30:15",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2199:44:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "496e76616c696420706f7374207472616e736665722062616c616e6365",
																		"id": 2490,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2261:31:15",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_ac78309364b1a33d95624b1c52c12b823cc69355af51b2cfc6df68579dcc2f15",
																			"typeString": "literal_string \"Invalid post transfer balance\""
																		},
																		"value": "Invalid post transfer balance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_ac78309364b1a33d95624b1c52c12b823cc69355af51b2cfc6df68579dcc2f15",
																			"typeString": "literal_string \"Invalid post transfer balance\""
																		}
																	],
																	"id": 2483,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "2174:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2491,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2174:132:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2492,
															"nodeType": "ExpressionStatement",
															"src": "2174:132:15"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2446,
										"nodeType": "StructuredDocumentation",
										"src": "1116:461:15",
										"text": " When given allowance, transfers a token from the \"_from\" to the \"_to\" of quantity \"_quantity\".\n Ensures that the recipient has received the correct quantity (ie no fees taken on transfer)\n @param _token           ERC20 token to approve\n @param _from            The account to transfer tokens from\n @param _to              The account to transfer tokens to\n @param _quantity        The quantity to transfer"
									},
									"id": 2496,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2448,
												"mutability": "mutable",
												"name": "_token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2496,
												"src": "1613:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$611",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 2447,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 611,
													"src": "1613:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$611",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2450,
												"mutability": "mutable",
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2496,
												"src": "1636:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1636:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2452,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2496,
												"src": "1659:11:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1659:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2454,
												"mutability": "mutable",
												"name": "_quantity",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2496,
												"src": "1680:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1680:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1603:100:15"
									},
									"returnParameters": {
										"id": 2456,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1725:0:15"
									},
									"scope": 2497,
									"src": "1582:741:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2498,
							"src": "1055:1270:15"
						}
					],
					"src": "655:1671:15"
				},
				"id": 15
			},
			"contracts/lib/Invoke.sol": {
				"ast": {
					"absolutePath": "contracts/lib/Invoke.sol",
					"exportedSymbols": {
						"Invoke": [
							2689
						]
					},
					"id": 2690,
					"license": "Apache License",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2499,
							"literals": [
								"solidity",
								"0.6",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "655:23:16"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 2501,
							"nodeType": "ImportDirective",
							"scope": 2690,
							"sourceUnit": 612,
							"src": "680:72:16",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 2500,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "689:6:16",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/math/SafeMath.sol",
							"id": 2503,
							"nodeType": "ImportDirective",
							"scope": 2690,
							"sourceUnit": 355,
							"src": "753:69:16",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 2502,
										"name": "SafeMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "762:8:16",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/ISetToken.sol",
							"file": "../interfaces/ISetToken.sol",
							"id": 2505,
							"nodeType": "ImportDirective",
							"scope": 2690,
							"sourceUnit": 1868,
							"src": "824:56:16",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 2504,
										"name": "ISetToken",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "833:9:16",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2506,
								"nodeType": "StructuredDocumentation",
								"src": "883:147:16",
								"text": " @title Invoke\n @author Set Protocol\n A collection of common utility functions for interacting with the SetToken's invoke function"
							},
							"fullyImplemented": true,
							"id": 2689,
							"linearizedBaseContracts": [
								2689
							],
							"name": "Invoke",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 2509,
									"libraryName": {
										"contractScope": null,
										"id": 2507,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 354,
										"src": "1058:8:16",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$354",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1052:27:16",
									"typeName": {
										"id": 2508,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1071:7:16",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"body": {
										"id": 2538,
										"nodeType": "Block",
										"src": "1652:160:16",
										"statements": [
											{
												"assignments": [
													2522
												],
												"declarations": [
													{
														"constant": false,
														"id": 2522,
														"mutability": "mutable",
														"name": "callData",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2538,
														"src": "1662:21:16",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2521,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1662:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2529,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "617070726f766528616464726573732c75696e7432353629",
															"id": 2525,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1710:26:16",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_095ea7b334ae44009aa867bfb386f5c3b4b443ac6f0ee573fa91c4608fbadfba",
																"typeString": "literal_string \"approve(address,uint256)\""
															},
															"value": "approve(address,uint256)"
														},
														{
															"argumentTypes": null,
															"id": 2526,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2516,
															"src": "1738:8:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2527,
															"name": "_quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2518,
															"src": "1748:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_095ea7b334ae44009aa867bfb386f5c3b4b443ac6f0ee573fa91c4608fbadfba",
																"typeString": "literal_string \"approve(address,uint256)\""
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 2523,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -1,
															"src": "1686:3:16",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 2524,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "encodeWithSignature",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1686:23:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (string memory) pure returns (bytes memory)"
														}
													},
													"id": 2528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1686:72:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1662:96:16"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2533,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2514,
															"src": "1785:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 2534,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1793:1:16",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"argumentTypes": null,
															"id": 2535,
															"name": "callData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2522,
															"src": "1796:8:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 2530,
															"name": "_setToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2512,
															"src": "1768:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISetToken_$1867",
																"typeString": "contract ISetToken"
															}
														},
														"id": 2532,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "invoke",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1713,
														"src": "1768:16:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,uint256,bytes memory) external returns (bytes memory)"
														}
													},
													"id": 2536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1768:37:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"id": 2537,
												"nodeType": "ExpressionStatement",
												"src": "1768:37:16"
											}
										]
									},
									"documentation": {
										"id": 2510,
										"nodeType": "StructuredDocumentation",
										"src": "1131:360:16",
										"text": " Instructs the SetToken to set approvals of the ERC20 token to a spender.\n @param _setToken        SetToken instance to invoke\n @param _token           ERC20 token to approve\n @param _spender         The account allowed to spend the SetToken's balance\n @param _quantity        The quantity of allowance to allow"
									},
									"id": 2539,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "invokeApprove",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2512,
												"mutability": "mutable",
												"name": "_setToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2539,
												"src": "1528:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISetToken_$1867",
													"typeString": "contract ISetToken"
												},
												"typeName": {
													"contractScope": null,
													"id": 2511,
													"name": "ISetToken",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1867,
													"src": "1528:9:16",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISetToken_$1867",
														"typeString": "contract ISetToken"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2514,
												"mutability": "mutable",
												"name": "_token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2539,
												"src": "1557:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2516,
												"mutability": "mutable",
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2539,
												"src": "1581:16:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2518,
												"mutability": "mutable",
												"name": "_quantity",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2539,
												"src": "1607:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1607:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1518:112:16"
									},
									"returnParameters": {
										"id": 2520,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:0:16"
									},
									"scope": 2689,
									"src": "1496:316:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2573,
										"nodeType": "Block",
										"src": "2290:203:16",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2551,
														"name": "_quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2548,
														"src": "2304:9:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 2552,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2316:1:16",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2304:13:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 2572,
												"nodeType": "IfStatement",
												"src": "2300:187:16",
												"trueBody": {
													"id": 2571,
													"nodeType": "Block",
													"src": "2319:168:16",
													"statements": [
														{
															"assignments": [
																2555
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2555,
																	"mutability": "mutable",
																	"name": "callData",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 2571,
																	"src": "2333:21:16",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 2554,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2333:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 2562,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "7472616e7366657228616464726573732c75696e7432353629",
																		"id": 2558,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2381:27:16",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_a9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b",
																			"typeString": "literal_string \"transfer(address,uint256)\""
																		},
																		"value": "transfer(address,uint256)"
																	},
																	{
																		"argumentTypes": null,
																		"id": 2559,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2546,
																		"src": "2410:3:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 2560,
																		"name": "_quantity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2548,
																		"src": "2415:9:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_a9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b",
																			"typeString": "literal_string \"transfer(address,uint256)\""
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 2556,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -1,
																		"src": "2357:3:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 2557,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encodeWithSignature",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2357:23:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (string memory) pure returns (bytes memory)"
																	}
																},
																"id": 2561,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2357:68:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2333:92:16"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 2566,
																		"name": "_token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2544,
																		"src": "2456:6:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 2567,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2464:1:16",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"argumentTypes": null,
																		"id": 2568,
																		"name": "callData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2555,
																		"src": "2467:8:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 2563,
																		"name": "_setToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2542,
																		"src": "2439:9:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ISetToken_$1867",
																			"typeString": "contract ISetToken"
																		}
																	},
																	"id": 2565,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "invoke",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1713,
																	"src": "2439:16:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,uint256,bytes memory) external returns (bytes memory)"
																	}
																},
																"id": 2569,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:37:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2570,
															"nodeType": "ExpressionStatement",
															"src": "2439:37:16"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2540,
										"nodeType": "StructuredDocumentation",
										"src": "1818:315:16",
										"text": " Instructs the SetToken to transfer the ERC20 token to a recipient.\n @param _setToken        SetToken instance to invoke\n @param _token           ERC20 token to transfer\n @param _to              The recipient account\n @param _quantity        The quantity to transfer"
									},
									"id": 2574,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "invokeTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2542,
												"mutability": "mutable",
												"name": "_setToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2574,
												"src": "2171:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISetToken_$1867",
													"typeString": "contract ISetToken"
												},
												"typeName": {
													"contractScope": null,
													"id": 2541,
													"name": "ISetToken",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1867,
													"src": "2171:9:16",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISetToken_$1867",
														"typeString": "contract ISetToken"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2544,
												"mutability": "mutable",
												"name": "_token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2574,
												"src": "2200:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2200:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2546,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2574,
												"src": "2224:11:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2224:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2548,
												"mutability": "mutable",
												"name": "_quantity",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2574,
												"src": "2245:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2245:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2161:107:16"
									},
									"returnParameters": {
										"id": 2550,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2290:0:16"
									},
									"scope": 2689,
									"src": "2138:355:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2634,
										"nodeType": "Block",
										"src": "3071:622:16",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2586,
														"name": "_quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2583,
														"src": "3085:9:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 2587,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3097:1:16",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3085:13:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 2633,
												"nodeType": "IfStatement",
												"src": "3081:606:16",
												"trueBody": {
													"id": 2632,
													"nodeType": "Block",
													"src": "3100:587:16",
													"statements": [
														{
															"assignments": [
																2590
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2590,
																	"mutability": "mutable",
																	"name": "existingBalance",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 2632,
																	"src": "3180:23:16",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2589,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3180:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 2600,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 2597,
																				"name": "_setToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2577,
																				"src": "3239:9:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_ISetToken_$1867",
																					"typeString": "contract ISetToken"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_ISetToken_$1867",
																					"typeString": "contract ISetToken"
																				}
																			],
																			"id": 2596,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3231:7:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2595,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3231:7:16",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 2598,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3231:18:16",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 2592,
																				"name": "_token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2579,
																				"src": "3213:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2591,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 611,
																			"src": "3206:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$611_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 2593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3206:14:16",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$611",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 2594,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 550,
																	"src": "3206:24:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 2599,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3206:44:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3180:70:16"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 2604,
																		"name": "_setToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2577,
																		"src": "3287:9:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ISetToken_$1867",
																			"typeString": "contract ISetToken"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 2605,
																		"name": "_token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2579,
																		"src": "3298:6:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 2606,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2581,
																		"src": "3306:3:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 2607,
																		"name": "_quantity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2583,
																		"src": "3311:9:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_ISetToken_$1867",
																			"typeString": "contract ISetToken"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 2601,
																		"name": "Invoke",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2689,
																		"src": "3265:6:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Invoke_$2689_$",
																			"typeString": "type(library Invoke)"
																		}
																	},
																	"id": 2603,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "invokeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2574,
																	"src": "3265:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ISetToken_$1867_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract ISetToken,address,address,uint256)"
																	}
																},
																"id": 2608,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3265:56:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2609,
															"nodeType": "ExpressionStatement",
															"src": "3265:56:16"
														},
														{
															"assignments": [
																2611
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2611,
																	"mutability": "mutable",
																	"name": "newBalance",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 2632,
																	"src": "3401:18:16",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2610,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3401:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 2621,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 2618,
																				"name": "_setToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2577,
																				"src": "3455:9:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_ISetToken_$1867",
																					"typeString": "contract ISetToken"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_ISetToken_$1867",
																					"typeString": "contract ISetToken"
																				}
																			],
																			"id": 2617,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3447:7:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2616,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3447:7:16",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 2619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3447:18:16",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 2613,
																				"name": "_token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2579,
																				"src": "3429:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2612,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 611,
																			"src": "3422:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$611_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 2614,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3422:14:16",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$611",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 2615,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 550,
																	"src": "3422:24:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 2620,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3422:44:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3401:65:16"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2628,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 2623,
																			"name": "newBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2611,
																			"src": "3569:10:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 2626,
																					"name": "_quantity",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2583,
																					"src": "3603:9:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 2624,
																					"name": "existingBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2590,
																					"src": "3583:15:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2625,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 203,
																				"src": "3583:19:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2627,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3583:30:16",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3569:44:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "496e76616c696420706f7374207472616e736665722062616c616e6365",
																		"id": 2629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3631:31:16",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_ac78309364b1a33d95624b1c52c12b823cc69355af51b2cfc6df68579dcc2f15",
																			"typeString": "literal_string \"Invalid post transfer balance\""
																		},
																		"value": "Invalid post transfer balance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_ac78309364b1a33d95624b1c52c12b823cc69355af51b2cfc6df68579dcc2f15",
																			"typeString": "literal_string \"Invalid post transfer balance\""
																		}
																	],
																	"id": 2622,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "3544:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2630,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3544:132:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2631,
															"nodeType": "ExpressionStatement",
															"src": "3544:132:16"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2575,
										"nodeType": "StructuredDocumentation",
										"src": "2499:409:16",
										"text": " Instructs the SetToken to transfer the ERC20 token to a recipient.\n The new SetToken balance must equal the existing balance less the quantity transferred\n @param _setToken        SetToken instance to invoke\n @param _token           ERC20 token to transfer\n @param _to              The recipient account\n @param _quantity        The quantity to transfer"
									},
									"id": 2635,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "strictInvokeTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2577,
												"mutability": "mutable",
												"name": "_setToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2635,
												"src": "2952:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISetToken_$1867",
													"typeString": "contract ISetToken"
												},
												"typeName": {
													"contractScope": null,
													"id": 2576,
													"name": "ISetToken",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1867,
													"src": "2952:9:16",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISetToken_$1867",
														"typeString": "contract ISetToken"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2579,
												"mutability": "mutable",
												"name": "_token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2635,
												"src": "2981:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2981:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2581,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2635,
												"src": "3005:11:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3005:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2583,
												"mutability": "mutable",
												"name": "_quantity",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2635,
												"src": "3026:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3026:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2942:107:16"
									},
									"returnParameters": {
										"id": 2585,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3071:0:16"
									},
									"scope": 2689,
									"src": "2913:780:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2661,
										"nodeType": "Block",
										"src": "4037:142:16",
										"statements": [
											{
												"assignments": [
													2646
												],
												"declarations": [
													{
														"constant": false,
														"id": 2646,
														"mutability": "mutable",
														"name": "callData",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2661,
														"src": "4047:21:16",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2645,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4047:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2652,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "77697468647261772875696e7432353629",
															"id": 2649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4095:19:16",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2e1a7d4d13322e7b96f9a57413e1525c250fb7a9021cf91d1540d5b69f16a49f",
																"typeString": "literal_string \"withdraw(uint256)\""
															},
															"value": "withdraw(uint256)"
														},
														{
															"argumentTypes": null,
															"id": 2650,
															"name": "_quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2642,
															"src": "4116:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_2e1a7d4d13322e7b96f9a57413e1525c250fb7a9021cf91d1540d5b69f16a49f",
																"typeString": "literal_string \"withdraw(uint256)\""
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 2647,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -1,
															"src": "4071:3:16",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 2648,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "encodeWithSignature",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "4071:23:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (string memory) pure returns (bytes memory)"
														}
													},
													"id": 2651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4071:55:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4047:79:16"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2656,
															"name": "_weth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2640,
															"src": "4153:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 2657,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4160:1:16",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"argumentTypes": null,
															"id": 2658,
															"name": "callData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2646,
															"src": "4163:8:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 2653,
															"name": "_setToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2638,
															"src": "4136:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISetToken_$1867",
																"typeString": "contract ISetToken"
															}
														},
														"id": 2655,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "invoke",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1713,
														"src": "4136:16:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,uint256,bytes memory) external returns (bytes memory)"
														}
													},
													"id": 2659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4136:36:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"id": 2660,
												"nodeType": "ExpressionStatement",
												"src": "4136:36:16"
											}
										]
									},
									"documentation": {
										"id": 2636,
										"nodeType": "StructuredDocumentation",
										"src": "3699:243:16",
										"text": " Instructs the SetToken to unwrap the passed quantity of WETH\n @param _setToken        SetToken instance to invoke\n @param _weth            WETH address\n @param _quantity        The quantity to unwrap"
									},
									"id": 2662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "invokeUnwrapWETH",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2638,
												"mutability": "mutable",
												"name": "_setToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2662,
												"src": "3973:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISetToken_$1867",
													"typeString": "contract ISetToken"
												},
												"typeName": {
													"contractScope": null,
													"id": 2637,
													"name": "ISetToken",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1867,
													"src": "3973:9:16",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISetToken_$1867",
														"typeString": "contract ISetToken"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2640,
												"mutability": "mutable",
												"name": "_weth",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2662,
												"src": "3994:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2639,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3994:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2642,
												"mutability": "mutable",
												"name": "_quantity",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2662,
												"src": "4009:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2641,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4009:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3972:55:16"
									},
									"returnParameters": {
										"id": 2644,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4037:0:16"
									},
									"scope": 2689,
									"src": "3947:232:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2687,
										"nodeType": "Block",
										"src": "4518:131:16",
										"statements": [
											{
												"assignments": [
													2673
												],
												"declarations": [
													{
														"constant": false,
														"id": 2673,
														"mutability": "mutable",
														"name": "callData",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2687,
														"src": "4528:21:16",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2672,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4528:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2678,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "6465706f7369742829",
															"id": 2676,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4576:11:16",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d0e30db03f2e24c6531d8ae2f6c09d8e7a6ad7f7e87a81cb75dfda61c9d83286",
																"typeString": "literal_string \"deposit()\""
															},
															"value": "deposit()"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_d0e30db03f2e24c6531d8ae2f6c09d8e7a6ad7f7e87a81cb75dfda61c9d83286",
																"typeString": "literal_string \"deposit()\""
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 2674,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -1,
															"src": "4552:3:16",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 2675,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "encodeWithSignature",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "4552:23:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (string memory) pure returns (bytes memory)"
														}
													},
													"id": 2677,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4552:36:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4528:60:16"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2682,
															"name": "_weth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2667,
															"src": "4615:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2683,
															"name": "_quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2669,
															"src": "4622:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 2684,
															"name": "callData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2673,
															"src": "4633:8:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 2679,
															"name": "_setToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2665,
															"src": "4598:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISetToken_$1867",
																"typeString": "contract ISetToken"
															}
														},
														"id": 2681,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "invoke",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1713,
														"src": "4598:16:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,uint256,bytes memory) external returns (bytes memory)"
														}
													},
													"id": 2685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4598:44:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"id": 2686,
												"nodeType": "ExpressionStatement",
												"src": "4598:44:16"
											}
										]
									},
									"documentation": {
										"id": 2663,
										"nodeType": "StructuredDocumentation",
										"src": "4185:240:16",
										"text": " Instructs the SetToken to wrap the passed quantity of ETH\n @param _setToken        SetToken instance to invoke\n @param _weth            WETH address\n @param _quantity        The quantity to unwrap"
									},
									"id": 2688,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "invokeWrapWETH",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2665,
												"mutability": "mutable",
												"name": "_setToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2688,
												"src": "4454:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISetToken_$1867",
													"typeString": "contract ISetToken"
												},
												"typeName": {
													"contractScope": null,
													"id": 2664,
													"name": "ISetToken",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1867,
													"src": "4454:9:16",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISetToken_$1867",
														"typeString": "contract ISetToken"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2667,
												"mutability": "mutable",
												"name": "_weth",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2688,
												"src": "4475:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2666,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4475:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2669,
												"mutability": "mutable",
												"name": "_quantity",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2688,
												"src": "4490:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4490:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4453:55:16"
									},
									"returnParameters": {
										"id": 2671,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4518:0:16"
									},
									"scope": 2689,
									"src": "4430:219:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2690,
							"src": "1031:3620:16"
						}
					],
					"src": "655:3996:16"
				},
				"id": 16
			},
			"contracts/lib/ModuleBase.sol": {
				"ast": {
					"absolutePath": "contracts/lib/ModuleBase.sol",
					"exportedSymbols": {
						"ModuleBase": [
							3128
						]
					},
					"id": 3129,
					"license": "Apache License",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2691,
							"literals": [
								"solidity",
								"0.6",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "655:23:17"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 2693,
							"nodeType": "ImportDirective",
							"scope": 3129,
							"sourceUnit": 612,
							"src": "680:72:17",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 2692,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "689:6:17",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/lib/AddressArrayUtils.sol",
							"file": "./AddressArrayUtils.sol",
							"id": 2695,
							"nodeType": "ImportDirective",
							"scope": 3129,
							"sourceUnit": 2434,
							"src": "754:60:17",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 2694,
										"name": "AddressArrayUtils",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "763:17:17",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/lib/ExplicitERC20.sol",
							"file": "./ExplicitERC20.sol",
							"id": 2697,
							"nodeType": "ImportDirective",
							"scope": 3129,
							"sourceUnit": 2498,
							"src": "815:52:17",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 2696,
										"name": "ExplicitERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "824:13:17",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IController.sol",
							"file": "../interfaces/IController.sol",
							"id": 2699,
							"nodeType": "ImportDirective",
							"scope": 3129,
							"sourceUnit": 1524,
							"src": "868:60:17",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 2698,
										"name": "IController",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "877:11:17",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IModule.sol",
							"file": "../interfaces/IModule.sol",
							"id": 2701,
							"nodeType": "ImportDirective",
							"scope": 3129,
							"sourceUnit": 1598,
							"src": "929:52:17",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 2700,
										"name": "IModule",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "938:7:17",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/ISetToken.sol",
							"file": "../interfaces/ISetToken.sol",
							"id": 2703,
							"nodeType": "ImportDirective",
							"scope": 3129,
							"sourceUnit": 1868,
							"src": "982:56:17",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 2702,
										"name": "ISetToken",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "991:9:17",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/lib/Invoke.sol",
							"file": "./Invoke.sol",
							"id": 2705,
							"nodeType": "ImportDirective",
							"scope": 3129,
							"sourceUnit": 2690,
							"src": "1039:38:17",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 2704,
										"name": "Invoke",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "1048:6:17",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/lib/Position.sol",
							"file": "./Position.sol",
							"id": 2707,
							"nodeType": "ImportDirective",
							"scope": 3129,
							"sourceUnit": 3612,
							"src": "1078:42:17",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 2706,
										"name": "Position",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "1087:8:17",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/lib/PreciseUnitMath.sol",
							"file": "./PreciseUnitMath.sol",
							"id": 2709,
							"nodeType": "ImportDirective",
							"scope": 3129,
							"sourceUnit": 4121,
							"src": "1121:56:17",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 2708,
										"name": "PreciseUnitMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "1130:15:17",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/lib/ResourceIdentifier.sol",
							"file": "./ResourceIdentifier.sol",
							"id": 2711,
							"nodeType": "ImportDirective",
							"scope": 3129,
							"sourceUnit": 4190,
							"src": "1178:62:17",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 2710,
										"name": "ResourceIdentifier",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "1187:18:17",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/SafeCast.sol",
							"file": "@openzeppelin/contracts/utils/SafeCast.sol",
							"id": 2713,
							"nodeType": "ImportDirective",
							"scope": 3129,
							"sourceUnit": 1474,
							"src": "1241:70:17",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 2712,
										"name": "SafeCast",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "1250:8:17",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/math/SafeMath.sol",
							"id": 2715,
							"nodeType": "ImportDirective",
							"scope": 3129,
							"sourceUnit": 355,
							"src": "1312:69:17",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 2714,
										"name": "SafeMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "1321:8:17",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/math/SignedSafeMath.sol",
							"file": "@openzeppelin/contracts/math/SignedSafeMath.sol",
							"id": 2717,
							"nodeType": "ImportDirective",
							"scope": 3129,
							"sourceUnit": 534,
							"src": "1382:81:17",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 2716,
										"name": "SignedSafeMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "1391:14:17",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 2719,
										"name": "IModule",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1597,
										"src": "1729:7:17",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IModule_$1597",
											"typeString": "contract IModule"
										}
									},
									"id": 2720,
									"nodeType": "InheritanceSpecifier",
									"src": "1729:7:17"
								}
							],
							"contractDependencies": [
								1597
							],
							"contractKind": "contract",
							"documentation": {
								"id": 2718,
								"nodeType": "StructuredDocumentation",
								"src": "1465:231:17",
								"text": " @title ModuleBase\n @author Set Protocol\n Abstract class that houses common Module-related state and functions.\n CHANGELOG:\n - 4/21/21: Delegated modifier logic to internal helpers to reduce contract size"
							},
							"fullyImplemented": false,
							"id": 3128,
							"linearizedBaseContracts": [
								3128,
								1597
							],
							"name": "ModuleBase",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 2724,
									"libraryName": {
										"contractScope": null,
										"id": 2721,
										"name": "AddressArrayUtils",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2433,
										"src": "1749:17:17",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_AddressArrayUtils_$2433",
											"typeString": "library AddressArrayUtils"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1743:38:17",
									"typeName": {
										"baseType": {
											"id": 2722,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1771:7:17",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 2723,
										"length": null,
										"nodeType": "ArrayTypeName",
										"src": "1771:9:17",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									}
								},
								{
									"id": 2727,
									"libraryName": {
										"contractScope": null,
										"id": 2725,
										"name": "Invoke",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2689,
										"src": "1792:6:17",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Invoke_$2689",
											"typeString": "library Invoke"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1786:27:17",
									"typeName": {
										"contractScope": null,
										"id": 2726,
										"name": "ISetToken",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1867,
										"src": "1803:9:17",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ISetToken_$1867",
											"typeString": "contract ISetToken"
										}
									}
								},
								{
									"id": 2730,
									"libraryName": {
										"contractScope": null,
										"id": 2728,
										"name": "Position",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 3611,
										"src": "1824:8:17",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Position_$3611",
											"typeString": "library Position"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1818:29:17",
									"typeName": {
										"contractScope": null,
										"id": 2729,
										"name": "ISetToken",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1867,
										"src": "1837:9:17",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ISetToken_$1867",
											"typeString": "contract ISetToken"
										}
									}
								},
								{
									"id": 2733,
									"libraryName": {
										"contractScope": null,
										"id": 2731,
										"name": "PreciseUnitMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 4120,
										"src": "1858:15:17",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_PreciseUnitMath_$4120",
											"typeString": "library PreciseUnitMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1852:34:17",
									"typeName": {
										"id": 2732,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1878:7:17",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 2736,
									"libraryName": {
										"contractScope": null,
										"id": 2734,
										"name": "ResourceIdentifier",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 4189,
										"src": "1897:18:17",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ResourceIdentifier_$4189",
											"typeString": "library ResourceIdentifier"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1891:41:17",
									"typeName": {
										"contractScope": null,
										"id": 2735,
										"name": "IController",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1523,
										"src": "1920:11:17",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IController_$1523",
											"typeString": "contract IController"
										}
									}
								},
								{
									"id": 2739,
									"libraryName": {
										"contractScope": null,
										"id": 2737,
										"name": "SafeCast",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1473,
										"src": "1943:8:17",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeCast_$1473",
											"typeString": "library SafeCast"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1937:26:17",
									"typeName": {
										"id": 2738,
										"name": "int256",
										"nodeType": "ElementaryTypeName",
										"src": "1956:6:17",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									}
								},
								{
									"id": 2742,
									"libraryName": {
										"contractScope": null,
										"id": 2740,
										"name": "SafeCast",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1473,
										"src": "1974:8:17",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeCast_$1473",
											"typeString": "library SafeCast"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1968:27:17",
									"typeName": {
										"id": 2741,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1987:7:17",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 2745,
									"libraryName": {
										"contractScope": null,
										"id": 2743,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 354,
										"src": "2006:8:17",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$354",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "2000:27:17",
									"typeName": {
										"id": 2744,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2019:7:17",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 2748,
									"libraryName": {
										"contractScope": null,
										"id": 2746,
										"name": "SignedSafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 533,
										"src": "2038:14:17",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SignedSafeMath_$533",
											"typeString": "library SignedSafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "2032:32:17",
									"typeName": {
										"id": 2747,
										"name": "int256",
										"nodeType": "ElementaryTypeName",
										"src": "2057:6:17",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "f77c4791",
									"id": 2750,
									"mutability": "mutable",
									"name": "controller",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 3128,
									"src": "2156:29:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IController_$1523",
										"typeString": "contract IController"
									},
									"typeName": {
										"contractScope": null,
										"id": 2749,
										"name": "IController",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1523,
										"src": "2156:11:17",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IController_$1523",
											"typeString": "contract IController"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2759,
										"nodeType": "Block",
										"src": "2292:70:17",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2755,
															"name": "_setToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2752,
															"src": "2334:9:17",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISetToken_$1867",
																"typeString": "contract ISetToken"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_ISetToken_$1867",
																"typeString": "contract ISetToken"
															}
														],
														"id": 2754,
														"name": "_validateOnlyManagerAndValidSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3042,
														"src": "2302:31:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_contract$_ISetToken_$1867_$returns$__$",
															"typeString": "function (contract ISetToken) view"
														}
													},
													"id": 2756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2302:42:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2757,
												"nodeType": "ExpressionStatement",
												"src": "2302:42:17"
											},
											{
												"id": 2758,
												"nodeType": "PlaceholderStatement",
												"src": "2354:1:17"
											}
										]
									},
									"documentation": null,
									"id": 2760,
									"name": "onlyManagerAndValidSet",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 2753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2752,
												"mutability": "mutable",
												"name": "_setToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2760,
												"src": "2271:19:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISetToken_$1867",
													"typeString": "contract ISetToken"
												},
												"typeName": {
													"contractScope": null,
													"id": 2751,
													"name": "ISetToken",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1867,
													"src": "2271:9:17",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISetToken_$1867",
														"typeString": "contract ISetToken"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2270:21:17"
									},
									"src": "2239:123:17",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2772,
										"nodeType": "Block",
										"src": "2430:71:17",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2767,
															"name": "_setToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2762,
															"src": "2464:9:17",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISetToken_$1867",
																"typeString": "contract ISetToken"
															}
														},
														{
															"argumentTypes": null,
															"id": 2768,
															"name": "_caller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2764,
															"src": "2475:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_ISetToken_$1867",
																"typeString": "contract ISetToken"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2766,
														"name": "_validateOnlySetManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3059,
														"src": "2440:23:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_contract$_ISetToken_$1867_$_t_address_$returns$__$",
															"typeString": "function (contract ISetToken,address) view"
														}
													},
													"id": 2769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2440:43:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2770,
												"nodeType": "ExpressionStatement",
												"src": "2440:43:17"
											},
											{
												"id": 2771,
												"nodeType": "PlaceholderStatement",
												"src": "2493:1:17"
											}
										]
									},
									"documentation": null,
									"id": 2773,
									"name": "onlySetManager",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 2765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2762,
												"mutability": "mutable",
												"name": "_setToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2773,
												"src": "2392:19:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISetToken_$1867",
													"typeString": "contract ISetToken"
												},
												"typeName": {
													"contractScope": null,
													"id": 2761,
													"name": "ISetToken",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1867,
													"src": "2392:9:17",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISetToken_$1867",
														"typeString": "contract ISetToken"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2764,
												"mutability": "mutable",
												"name": "_caller",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2773,
												"src": "2413:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2763,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2413:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2391:38:17"
									},
									"src": "2368:133:17",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2782,
										"nodeType": "Block",
										"src": "2564:74:17",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2778,
															"name": "_setToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2775,
															"src": "2610:9:17",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISetToken_$1867",
																"typeString": "contract ISetToken"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_ISetToken_$1867",
																"typeString": "contract ISetToken"
															}
														],
														"id": 2777,
														"name": "_validateOnlyValidAndInitializedSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3073,
														"src": "2574:35:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_contract$_ISetToken_$1867_$returns$__$",
															"typeString": "function (contract ISetToken) view"
														}
													},
													"id": 2779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2574:46:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2780,
												"nodeType": "ExpressionStatement",
												"src": "2574:46:17"
											},
											{
												"id": 2781,
												"nodeType": "PlaceholderStatement",
												"src": "2630:1:17"
											}
										]
									},
									"documentation": null,
									"id": 2783,
									"name": "onlyValidAndInitializedSet",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 2776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2775,
												"mutability": "mutable",
												"name": "_setToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2783,
												"src": "2543:19:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISetToken_$1867",
													"typeString": "contract ISetToken"
												},
												"typeName": {
													"contractScope": null,
													"id": 2774,
													"name": "ISetToken",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1867,
													"src": "2543:9:17",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISetToken_$1867",
														"typeString": "contract ISetToken"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2542:21:17"
									},
									"src": "2507:131:17",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2793,
										"nodeType": "Block",
										"src": "2778:58:17",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2789,
															"name": "_setToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2786,
															"src": "2808:9:17",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISetToken_$1867",
																"typeString": "contract ISetToken"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_ISetToken_$1867",
																"typeString": "contract ISetToken"
															}
														],
														"id": 2788,
														"name": "_validateOnlyModule",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3102,
														"src": "2788:19:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_contract$_ISetToken_$1867_$returns$__$",
															"typeString": "function (contract ISetToken) view"
														}
													},
													"id": 2790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2788:30:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2791,
												"nodeType": "ExpressionStatement",
												"src": "2788:30:17"
											},
											{
												"id": 2792,
												"nodeType": "PlaceholderStatement",
												"src": "2828:1:17"
											}
										]
									},
									"documentation": {
										"id": 2784,
										"nodeType": "StructuredDocumentation",
										"src": "2644:88:17",
										"text": " Throws if the sender is not a SetToken's module or module not enabled"
									},
									"id": 2794,
									"name": "onlyModule",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 2787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2786,
												"mutability": "mutable",
												"name": "_setToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2794,
												"src": "2757:19:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISetToken_$1867",
													"typeString": "contract ISetToken"
												},
												"typeName": {
													"contractScope": null,
													"id": 2785,
													"name": "ISetToken",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1867,
													"src": "2757:9:17",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISetToken_$1867",
														"typeString": "contract ISetToken"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2756:21:17"
									},
									"src": "2737:99:17",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2804,
										"nodeType": "Block",
										"src": "3040:70:17",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2800,
															"name": "_setToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2797,
															"src": "3082:9:17",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISetToken_$1867",
																"typeString": "contract ISetToken"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_ISetToken_$1867",
																"typeString": "contract ISetToken"
															}
														],
														"id": 2799,
														"name": "_validateOnlyValidAndPendingSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3127,
														"src": "3050:31:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_contract$_ISetToken_$1867_$returns$__$",
															"typeString": "function (contract ISetToken) view"
														}
													},
													"id": 2801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3050:42:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2802,
												"nodeType": "ExpressionStatement",
												"src": "3050:42:17"
											},
											{
												"id": 2803,
												"nodeType": "PlaceholderStatement",
												"src": "3102:1:17"
											}
										]
									},
									"documentation": {
										"id": 2795,
										"nodeType": "StructuredDocumentation",
										"src": "2842:140:17",
										"text": " Utilized during module initializations to check that the module is in pending state\n and that the SetToken is valid"
									},
									"id": 2805,
									"name": "onlyValidAndPendingSet",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 2798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2797,
												"mutability": "mutable",
												"name": "_setToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2805,
												"src": "3019:19:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISetToken_$1867",
													"typeString": "contract ISetToken"
												},
												"typeName": {
													"contractScope": null,
													"id": 2796,
													"name": "ISetToken",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1867,
													"src": "3019:9:17",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISetToken_$1867",
														"typeString": "contract ISetToken"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3018:21:17"
									},
									"src": "2987:123:17",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2815,
										"nodeType": "Block",
										"src": "3365:41:17",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 2813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2811,
														"name": "controller",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2750,
														"src": "3375:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IController_$1523",
															"typeString": "contract IController"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 2812,
														"name": "_controller",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2808,
														"src": "3388:11:17",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IController_$1523",
															"typeString": "contract IController"
														}
													},
													"src": "3375:24:17",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IController_$1523",
														"typeString": "contract IController"
													}
												},
												"id": 2814,
												"nodeType": "ExpressionStatement",
												"src": "3375:24:17"
											}
										]
									},
									"documentation": {
										"id": 2806,
										"nodeType": "StructuredDocumentation",
										"src": "3165:151:17",
										"text": " Set state variables and map asset pairs to their oracles\n @param _controller             Address of controller contract"
									},
									"id": 2816,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2808,
												"mutability": "mutable",
												"name": "_controller",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2816,
												"src": "3333:23:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IController_$1523",
													"typeString": "contract IController"
												},
												"typeName": {
													"contractScope": null,
													"id": 2807,
													"name": "IController",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1523,
													"src": "3333:11:17",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IController_$1523",
														"typeString": "contract IController"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3332:25:17"
									},
									"returnParameters": {
										"id": 2810,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3365:0:17"
									},
									"scope": 3128,
									"src": "3321:85:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2837,
										"nodeType": "Block",
										"src": "3908:74:17",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2831,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2819,
															"src": "3945:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$611",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"id": 2832,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2821,
															"src": "3953:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2833,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2823,
															"src": "3960:3:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2834,
															"name": "_quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2825,
															"src": "3965:9:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$611",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 2828,
															"name": "ExplicitERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2497,
															"src": "3918:13:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ExplicitERC20_$2497_$",
																"typeString": "type(library ExplicitERC20)"
															}
														},
														"id": 2830,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2496,
														"src": "3918:26:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$611_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 2835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3918:57:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2836,
												"nodeType": "ExpressionStatement",
												"src": "3918:57:17"
											}
										]
									},
									"documentation": {
										"id": 2817,
										"nodeType": "StructuredDocumentation",
										"src": "3468:342:17",
										"text": " Transfers tokens from an address (that has set allowance on the module).\n @param  _token          The address of the ERC20 token\n @param  _from           The address to transfer from\n @param  _to             The address to transfer to\n @param  _quantity       The number of tokens to transfer"
									},
									"id": 2838,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2819,
												"mutability": "mutable",
												"name": "_token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2838,
												"src": "3837:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$611",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 2818,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 611,
													"src": "3837:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$611",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2821,
												"mutability": "mutable",
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2838,
												"src": "3852:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2820,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3852:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2823,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2838,
												"src": "3867:11:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2822,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3867:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2825,
												"mutability": "mutable",
												"name": "_quantity",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2838,
												"src": "3880:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3836:62:17"
									},
									"returnParameters": {
										"id": 2827,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3908:0:17"
									},
									"scope": 3128,
									"src": "3815:167:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2856,
										"nodeType": "Block",
										"src": "4206:136:17",
										"statements": [
											{
												"assignments": [
													2847
												],
												"declarations": [
													{
														"constant": false,
														"id": 2847,
														"mutability": "mutable",
														"name": "integrationHash",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2856,
														"src": "4217:23:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2846,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4217:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2851,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2849,
															"name": "_integrationName",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2841,
															"src": "4255:16:17",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2848,
														"name": "getNameHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3019,
														"src": "4243:11:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (string memory) pure returns (bytes32)"
														}
													},
													"id": 2850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4243:29:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4217:55:17"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2853,
															"name": "integrationHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2847,
															"src": "4319:15:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2852,
														"name": "getAndValidateAdapterWithHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2891,
														"src": "4289:29:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32) view returns (address)"
														}
													},
													"id": 2854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4289:46:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2845,
												"id": 2855,
												"nodeType": "Return",
												"src": "4282:53:17"
											}
										]
									},
									"documentation": {
										"id": 2839,
										"nodeType": "StructuredDocumentation",
										"src": "3988:119:17",
										"text": " Gets the integration for the module with the passed in name. Validates that the address is not empty"
									},
									"id": 2857,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAndValidateAdapter",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2841,
												"mutability": "mutable",
												"name": "_integrationName",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2857,
												"src": "4143:30:17",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2840,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4143:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4142:32:17"
									},
									"returnParameters": {
										"id": 2845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2844,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2857,
												"src": "4197:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2843,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4197:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4196:9:17"
									},
									"scope": 3128,
									"src": "4112:230:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2890,
										"nodeType": "Block",
										"src": "4568:259:17",
										"statements": [
											{
												"assignments": [
													2866
												],
												"declarations": [
													{
														"constant": false,
														"id": 2866,
														"mutability": "mutable",
														"name": "adapter",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2890,
														"src": "4579:15:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2865,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4579:7:17",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2877,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2873,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "4684:4:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ModuleBase_$3128",
																		"typeString": "contract ModuleBase"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ModuleBase_$3128",
																		"typeString": "contract ModuleBase"
																	}
																],
																"id": 2872,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4676:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2871,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4676:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 2874,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4676:13:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2875,
															"name": "_integrationHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2860,
															"src": "4703:16:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"argumentTypes": null,
																	"id": 2867,
																	"name": "controller",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2750,
																	"src": "4597:10:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IController_$1523",
																		"typeString": "contract IController"
																	}
																},
																"id": 2868,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "getIntegrationRegistry",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4156,
																"src": "4597:33:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_contract$_IController_$1523_$returns$_t_contract$_IIntegrationRegistry_$1562_$bound_to$_t_contract$_IController_$1523_$",
																	"typeString": "function (contract IController) view returns (contract IIntegrationRegistry)"
																}
															},
															"id": 2869,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4597:35:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IIntegrationRegistry_$1562",
																"typeString": "contract IIntegrationRegistry"
															}
														},
														"id": 2870,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getIntegrationAdapterWithHash",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1552,
														"src": "4597:65:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (address,bytes32) view external returns (address)"
														}
													},
													"id": 2876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4597:132:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4579:150:17"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2884,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2879,
																"name": "adapter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2866,
																"src": "4748:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 2882,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4767:1:17",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2881,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4759:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2880,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4759:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 2883,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4759:10:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "4748:21:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4d7573742062652076616c69642061646170746572",
															"id": 2885,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4771:23:17",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_588d2f3372c0d658253c286260bc0f77ed7dcd15870b2e0c6014d85cb6d97dfb",
																"typeString": "literal_string \"Must be valid adapter\""
															},
															"value": "Must be valid adapter"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_588d2f3372c0d658253c286260bc0f77ed7dcd15870b2e0c6014d85cb6d97dfb",
																"typeString": "literal_string \"Must be valid adapter\""
															}
														],
														"id": 2878,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4740:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4740:55:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2887,
												"nodeType": "ExpressionStatement",
												"src": "4740:55:17"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2888,
													"name": "adapter",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2866,
													"src": "4813:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2864,
												"id": 2889,
												"nodeType": "Return",
												"src": "4806:14:17"
											}
										]
									},
									"documentation": {
										"id": 2858,
										"nodeType": "StructuredDocumentation",
										"src": "4348:119:17",
										"text": " Gets the integration for the module with the passed in hash. Validates that the address is not empty"
									},
									"id": 2891,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAndValidateAdapterWithHash",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2860,
												"mutability": "mutable",
												"name": "_integrationHash",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2891,
												"src": "4511:24:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2859,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4511:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4510:26:17"
									},
									"returnParameters": {
										"id": 2864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2863,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2891,
												"src": "4559:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2862,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4559:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4558:9:17"
									},
									"scope": 3128,
									"src": "4472:355:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2917,
										"nodeType": "Block",
										"src": "5024:142:17",
										"statements": [
											{
												"assignments": [
													2902
												],
												"declarations": [
													{
														"constant": false,
														"id": 2902,
														"mutability": "mutable",
														"name": "feePercentage",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2917,
														"src": "5034:21:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2901,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5034:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2911,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2907,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "5090:4:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ModuleBase_$3128",
																		"typeString": "contract ModuleBase"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ModuleBase_$3128",
																		"typeString": "contract ModuleBase"
																	}
																],
																"id": 2906,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5082:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2905,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5082:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 2908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5082:13:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2909,
															"name": "_feeIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2894,
															"src": "5097:9:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 2903,
															"name": "controller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2750,
															"src": "5058:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IController_$1523",
																"typeString": "contract IController"
															}
														},
														"id": 2904,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getModuleFee",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1494,
														"src": "5058:23:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) view external returns (uint256)"
														}
													},
													"id": 2910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5058:49:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5034:73:17"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2914,
															"name": "feePercentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2902,
															"src": "5145:13:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 2912,
															"name": "_quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2896,
															"src": "5124:9:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2913,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "preciseMul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3725,
														"src": "5124:20:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5124:35:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2900,
												"id": 2916,
												"nodeType": "Return",
												"src": "5117:42:17"
											}
										]
									},
									"documentation": {
										"id": 2892,
										"nodeType": "StructuredDocumentation",
										"src": "4833:95:17",
										"text": " Gets the total fee for this module of the passed in index (fee % * quantity)"
									},
									"id": 2918,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getModuleFee",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2894,
												"mutability": "mutable",
												"name": "_feeIndex",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2918,
												"src": "4955:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2893,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4955:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2896,
												"mutability": "mutable",
												"name": "_quantity",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2918,
												"src": "4974:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2895,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4974:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4954:38:17"
									},
									"returnParameters": {
										"id": 2900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2899,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2918,
												"src": "5015:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5015:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5014:9:17"
									},
									"scope": 3128,
									"src": "4933:233:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2943,
										"nodeType": "Block",
										"src": "5392:143:17",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2928,
														"name": "_feeQuantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2925,
														"src": "5406:12:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 2929,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5421:1:17",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5406:16:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 2942,
												"nodeType": "IfStatement",
												"src": "5402:127:17",
												"trueBody": {
													"id": 2941,
													"nodeType": "Block",
													"src": "5424:105:17",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 2934,
																		"name": "_token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2923,
																		"src": "5469:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"argumentTypes": null,
																				"id": 2935,
																				"name": "controller",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2750,
																				"src": "5477:10:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IController_$1523",
																					"typeString": "contract IController"
																				}
																			},
																			"id": 2936,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "feeRecipient",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1485,
																			"src": "5477:23:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 2937,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5477:25:17",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 2938,
																		"name": "_feeQuantity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2925,
																		"src": "5504:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 2931,
																		"name": "_setToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2921,
																		"src": "5438:9:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ISetToken_$1867",
																			"typeString": "contract ISetToken"
																		}
																	},
																	"id": 2933,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "strictInvokeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2635,
																	"src": "5438:30:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ISetToken_$1867_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ISetToken_$1867_$",
																		"typeString": "function (contract ISetToken,address,address,uint256)"
																	}
																},
																"id": 2939,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5438:79:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2940,
															"nodeType": "ExpressionStatement",
															"src": "5438:79:17"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2919,
										"nodeType": "StructuredDocumentation",
										"src": "5172:111:17",
										"text": " Pays the _feeQuantity from the _setToken denominated in _token to the protocol fee recipient"
									},
									"id": 2944,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "payProtocolFeeFromSetToken",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2921,
												"mutability": "mutable",
												"name": "_setToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2944,
												"src": "5324:19:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISetToken_$1867",
													"typeString": "contract ISetToken"
												},
												"typeName": {
													"contractScope": null,
													"id": 2920,
													"name": "ISetToken",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1867,
													"src": "5324:9:17",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISetToken_$1867",
														"typeString": "contract ISetToken"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2923,
												"mutability": "mutable",
												"name": "_token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2944,
												"src": "5345:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2922,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5345:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2925,
												"mutability": "mutable",
												"name": "_feeQuantity",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2944,
												"src": "5361:20:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5361:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5323:59:17"
									},
									"returnParameters": {
										"id": 2927,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5392:0:17"
									},
									"scope": 3128,
									"src": "5288:247:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2960,
										"nodeType": "Block",
										"src": "5724:64:17",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2956,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "5775:4:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ModuleBase_$3128",
																		"typeString": "contract ModuleBase"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ModuleBase_$3128",
																		"typeString": "contract ModuleBase"
																	}
																],
																"id": 2955,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5767:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2954,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5767:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 2957,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5767:13:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 2952,
															"name": "_setToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2947,
															"src": "5741:9:17",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISetToken_$1867",
																"typeString": "contract ISetToken"
															}
														},
														"id": 2953,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isPendingModule",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1861,
														"src": "5741:25:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
															"typeString": "function (address) view external returns (bool)"
														}
													},
													"id": 2958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5741:40:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2951,
												"id": 2959,
												"nodeType": "Return",
												"src": "5734:47:17"
											}
										]
									},
									"documentation": {
										"id": 2945,
										"nodeType": "StructuredDocumentation",
										"src": "5541:93:17",
										"text": " Returns true if the module is in process of initialization on the SetToken"
									},
									"id": 2961,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isSetPendingInitialization",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2947,
												"mutability": "mutable",
												"name": "_setToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2961,
												"src": "5675:19:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISetToken_$1867",
													"typeString": "contract ISetToken"
												},
												"typeName": {
													"contractScope": null,
													"id": 2946,
													"name": "ISetToken",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1867,
													"src": "5675:9:17",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISetToken_$1867",
														"typeString": "contract ISetToken"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5674:21:17"
									},
									"returnParameters": {
										"id": 2951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2950,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2961,
												"src": "5718:4:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2949,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5718:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5717:6:17"
									},
									"scope": 3128,
									"src": "5639:149:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2977,
										"nodeType": "Block",
										"src": "5960:55:17",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"argumentTypes": null,
																"id": 2971,
																"name": "_setToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2964,
																"src": "5977:9:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ISetToken_$1867",
																	"typeString": "contract ISetToken"
																}
															},
															"id": 2972,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "manager",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1761,
															"src": "5977:17:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																"typeString": "function () view external returns (address)"
															}
														},
														"id": 2973,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5977:19:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"id": 2974,
														"name": "_toCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2966,
														"src": "6000:8:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5977:31:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2970,
												"id": 2976,
												"nodeType": "Return",
												"src": "5970:38:17"
											}
										]
									},
									"documentation": {
										"id": 2962,
										"nodeType": "StructuredDocumentation",
										"src": "5794:72:17",
										"text": " Returns true if the address is the SetToken's manager"
									},
									"id": 2978,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isSetManager",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2964,
												"mutability": "mutable",
												"name": "_setToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2978,
												"src": "5893:19:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISetToken_$1867",
													"typeString": "contract ISetToken"
												},
												"typeName": {
													"contractScope": null,
													"id": 2963,
													"name": "ISetToken",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1867,
													"src": "5893:9:17",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISetToken_$1867",
														"typeString": "contract ISetToken"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2966,
												"mutability": "mutable",
												"name": "_toCheck",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2978,
												"src": "5914:16:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2965,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5914:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5892:39:17"
									},
									"returnParameters": {
										"id": 2970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2969,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2978,
												"src": "5954:4:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2968,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5954:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5953:6:17"
									},
									"scope": 3128,
									"src": "5871:144:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3002,
										"nodeType": "Block",
										"src": "6235:120:17",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 3000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 2990,
																		"name": "_setToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2981,
																		"src": "6277:9:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ISetToken_$1867",
																			"typeString": "contract ISetToken"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_ISetToken_$1867",
																			"typeString": "contract ISetToken"
																		}
																	],
																	"id": 2989,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6269:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2988,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6269:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 2991,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6269:18:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 2986,
																"name": "controller",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2750,
																"src": "6252:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IController_$1523",
																	"typeString": "contract IController"
																}
															},
															"id": 2987,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "isSet",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1508,
															"src": "6252:16:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
																"typeString": "function (address) view external returns (bool)"
															}
														},
														"id": 2992,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6252:36:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 2997,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -28,
																		"src": "6342:4:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ModuleBase_$3128",
																			"typeString": "contract ModuleBase"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_ModuleBase_$3128",
																			"typeString": "contract ModuleBase"
																		}
																	],
																	"id": 2996,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6334:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2995,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6334:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 2998,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6334:13:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 2993,
																"name": "_setToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2981,
																"src": "6304:9:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ISetToken_$1867",
																	"typeString": "contract ISetToken"
																}
															},
															"id": 2994,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "isInitializedModule",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1854,
															"src": "6304:29:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
																"typeString": "function (address) view external returns (bool)"
															}
														},
														"id": 2999,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6304:44:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6252:96:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2985,
												"id": 3001,
												"nodeType": "Return",
												"src": "6245:103:17"
											}
										]
									},
									"documentation": {
										"id": 2979,
										"nodeType": "StructuredDocumentation",
										"src": "6021:126:17",
										"text": " Returns true if SetToken must be enabled on the controller \n and module is registered on the SetToken"
									},
									"id": 3003,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isSetValidAndInitialized",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2981,
												"mutability": "mutable",
												"name": "_setToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3003,
												"src": "6186:19:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISetToken_$1867",
													"typeString": "contract ISetToken"
												},
												"typeName": {
													"contractScope": null,
													"id": 2980,
													"name": "ISetToken",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1867,
													"src": "6186:9:17",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISetToken_$1867",
														"typeString": "contract ISetToken"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6185:21:17"
									},
									"returnParameters": {
										"id": 2985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2984,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3003,
												"src": "6229:4:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2983,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6229:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6228:6:17"
									},
									"scope": 3128,
									"src": "6152:203:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3018,
										"nodeType": "Block",
										"src": "6503:47:17",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 3014,
																	"name": "_name",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3006,
																	"src": "6536:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 3013,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6530:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 3012,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "6530:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 3015,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6530:12:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 3011,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -8,
														"src": "6520:9:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 3016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6520:23:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 3010,
												"id": 3017,
												"nodeType": "Return",
												"src": "6513:30:17"
											}
										]
									},
									"documentation": {
										"id": 3004,
										"nodeType": "StructuredDocumentation",
										"src": "6361:64:17",
										"text": " Hashes the string and returns a bytes32 value"
									},
									"id": 3019,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getNameHash",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 3007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3006,
												"mutability": "mutable",
												"name": "_name",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3019,
												"src": "6451:19:17",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3005,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6451:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6450:21:17"
									},
									"returnParameters": {
										"id": 3010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3009,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3019,
												"src": "6494:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3008,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6493:9:17"
									},
									"scope": 3128,
									"src": "6430:120:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3041,
										"nodeType": "Block",
										"src": "6846:189:17",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 3027,
																	"name": "_setToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3022,
																	"src": "6876:9:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ISetToken_$1867",
																		"typeString": "contract ISetToken"
																	}
																},
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 3028,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "6887:3:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 3029,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "6887:10:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ISetToken_$1867",
																		"typeString": "contract ISetToken"
																	},
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 3026,
																"name": "isSetManager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2978,
																"src": "6863:12:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_contract$_ISetToken_$1867_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (contract ISetToken,address) view returns (bool)"
																}
															},
															"id": 3030,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6863:35:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4d7573742062652074686520536574546f6b656e206d616e61676572",
															"id": 3031,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6900:30:17",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dad22cceaf1c2bcb4f71f8a925b3dcb99ddd6e3e073d4462aac2f6768b3203f3",
																"typeString": "literal_string \"Must be the SetToken manager\""
															},
															"value": "Must be the SetToken manager"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dad22cceaf1c2bcb4f71f8a925b3dcb99ddd6e3e073d4462aac2f6768b3203f3",
																"typeString": "literal_string \"Must be the SetToken manager\""
															}
														],
														"id": 3025,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6855:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6855:76:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3033,
												"nodeType": "ExpressionStatement",
												"src": "6855:76:17"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 3036,
																	"name": "_setToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3022,
																	"src": "6973:9:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ISetToken_$1867",
																		"typeString": "contract ISetToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ISetToken_$1867",
																		"typeString": "contract ISetToken"
																	}
																],
																"id": 3035,
																"name": "isSetValidAndInitialized",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3003,
																"src": "6948:24:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_contract$_ISetToken_$1867_$returns$_t_bool_$",
																	"typeString": "function (contract ISetToken) view returns (bool)"
																}
															},
															"id": 3037,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6948:35:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4d75737420626520612076616c696420616e6420696e697469616c697a656420536574546f6b656e",
															"id": 3038,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6985:42:17",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1fcc3e3955409d6b02186ac2472220bab8a0b25b585ba8ad15c35a24925b6450",
																"typeString": "literal_string \"Must be a valid and initialized SetToken\""
															},
															"value": "Must be a valid and initialized SetToken"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1fcc3e3955409d6b02186ac2472220bab8a0b25b585ba8ad15c35a24925b6450",
																"typeString": "literal_string \"Must be a valid and initialized SetToken\""
															}
														],
														"id": 3034,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6940:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6940:88:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3040,
												"nodeType": "ExpressionStatement",
												"src": "6940:88:17"
											}
										]
									},
									"documentation": {
										"id": 3020,
										"nodeType": "StructuredDocumentation",
										"src": "6675:90:17",
										"text": " Caller must SetToken manager and SetToken must be valid and initialized"
									},
									"id": 3042,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_validateOnlyManagerAndValidSet",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 3023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3022,
												"mutability": "mutable",
												"name": "_setToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3042,
												"src": "6811:19:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISetToken_$1867",
													"typeString": "contract ISetToken"
												},
												"typeName": {
													"contractScope": null,
													"id": 3021,
													"name": "ISetToken",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1867,
													"src": "6811:9:17",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISetToken_$1867",
														"typeString": "contract ISetToken"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6810:21:17"
									},
									"returnParameters": {
										"id": 3024,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6846:0:17"
									},
									"scope": 3128,
									"src": "6770:265:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3058,
										"nodeType": "Block",
										"src": "7178:90:17",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 3052,
																	"name": "_setToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3045,
																	"src": "7209:9:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ISetToken_$1867",
																		"typeString": "contract ISetToken"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 3053,
																	"name": "_caller",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3047,
																	"src": "7220:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ISetToken_$1867",
																		"typeString": "contract ISetToken"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3051,
																"name": "isSetManager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2978,
																"src": "7196:12:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_contract$_ISetToken_$1867_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (contract ISetToken,address) view returns (bool)"
																}
															},
															"id": 3054,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7196:32:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4d7573742062652074686520536574546f6b656e206d616e61676572",
															"id": 3055,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7230:30:17",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dad22cceaf1c2bcb4f71f8a925b3dcb99ddd6e3e073d4462aac2f6768b3203f3",
																"typeString": "literal_string \"Must be the SetToken manager\""
															},
															"value": "Must be the SetToken manager"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dad22cceaf1c2bcb4f71f8a925b3dcb99ddd6e3e073d4462aac2f6768b3203f3",
																"typeString": "literal_string \"Must be the SetToken manager\""
															}
														],
														"id": 3050,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7188:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7188:73:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3057,
												"nodeType": "ExpressionStatement",
												"src": "7188:73:17"
											}
										]
									},
									"documentation": {
										"id": 3043,
										"nodeType": "StructuredDocumentation",
										"src": "7041:47:17",
										"text": " Caller must SetToken manager"
									},
									"id": 3059,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_validateOnlySetManager",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 3048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3045,
												"mutability": "mutable",
												"name": "_setToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3059,
												"src": "7126:19:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISetToken_$1867",
													"typeString": "contract ISetToken"
												},
												"typeName": {
													"contractScope": null,
													"id": 3044,
													"name": "ISetToken",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1867,
													"src": "7126:9:17",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISetToken_$1867",
														"typeString": "contract ISetToken"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3047,
												"mutability": "mutable",
												"name": "_caller",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3059,
												"src": "7147:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3046,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7147:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7125:38:17"
									},
									"returnParameters": {
										"id": 3049,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7178:0:17"
									},
									"scope": 3128,
									"src": "7093:175:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3072,
										"nodeType": "Block",
										"src": "7416:105:17",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 3067,
																	"name": "_setToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3062,
																	"src": "7459:9:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ISetToken_$1867",
																		"typeString": "contract ISetToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ISetToken_$1867",
																		"typeString": "contract ISetToken"
																	}
																],
																"id": 3066,
																"name": "isSetValidAndInitialized",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3003,
																"src": "7434:24:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_contract$_ISetToken_$1867_$returns$_t_bool_$",
																	"typeString": "function (contract ISetToken) view returns (bool)"
																}
															},
															"id": 3068,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7434:35:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4d75737420626520612076616c696420616e6420696e697469616c697a656420536574546f6b656e",
															"id": 3069,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7471:42:17",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1fcc3e3955409d6b02186ac2472220bab8a0b25b585ba8ad15c35a24925b6450",
																"typeString": "literal_string \"Must be a valid and initialized SetToken\""
															},
															"value": "Must be a valid and initialized SetToken"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1fcc3e3955409d6b02186ac2472220bab8a0b25b585ba8ad15c35a24925b6450",
																"typeString": "literal_string \"Must be a valid and initialized SetToken\""
															}
														],
														"id": 3065,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7426:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7426:88:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3071,
												"nodeType": "ExpressionStatement",
												"src": "7426:88:17"
											}
										]
									},
									"documentation": {
										"id": 3060,
										"nodeType": "StructuredDocumentation",
										"src": "7274:57:17",
										"text": " SetToken must be valid and initialized"
									},
									"id": 3073,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_validateOnlyValidAndInitializedSet",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 3063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3062,
												"mutability": "mutable",
												"name": "_setToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3073,
												"src": "7381:19:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISetToken_$1867",
													"typeString": "contract ISetToken"
												},
												"typeName": {
													"contractScope": null,
													"id": 3061,
													"name": "ISetToken",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1867,
													"src": "7381:9:17",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISetToken_$1867",
														"typeString": "contract ISetToken"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7380:21:17"
									},
									"returnParameters": {
										"id": 3064,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7416:0:17"
									},
									"scope": 3128,
									"src": "7336:185:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3101,
										"nodeType": "Block",
										"src": "7693:284:17",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_enum$_ModuleState_$1627",
																"typeString": "enum ISetToken.ModuleState"
															},
															"id": 3088,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 3082,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "7747:3:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 3083,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "7747:10:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 3080,
																		"name": "_setToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3076,
																		"src": "7724:9:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ISetToken_$1867",
																			"typeString": "contract ISetToken"
																		}
																	},
																	"id": 3081,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "moduleStates",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1768,
																	"src": "7724:22:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_enum$_ModuleState_$1627_$",
																		"typeString": "function (address) view external returns (enum ISetToken.ModuleState)"
																	}
																},
																"id": 3084,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7724:34:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_ModuleState_$1627",
																	"typeString": "enum ISetToken.ModuleState"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 3085,
																		"name": "ISetToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1867,
																		"src": "7762:9:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ISetToken_$1867_$",
																			"typeString": "type(contract ISetToken)"
																		}
																	},
																	"id": 3086,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "ModuleState",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1627,
																	"src": "7762:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_ModuleState_$1627_$",
																		"typeString": "type(enum ISetToken.ModuleState)"
																	}
																},
																"id": 3087,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "INITIALIZED",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "7762:33:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_ModuleState_$1627",
																	"typeString": "enum ISetToken.ModuleState"
																}
															},
															"src": "7724:71:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f6e6c7920746865206d6f64756c652063616e2063616c6c",
															"id": 3089,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7809:26:17",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_79b81f5344dd33b205c19edf9493dcc6a8f9bc11420db1fa5854628cca0b6fb6",
																"typeString": "literal_string \"Only the module can call\""
															},
															"value": "Only the module can call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_79b81f5344dd33b205c19edf9493dcc6a8f9bc11420db1fa5854628cca0b6fb6",
																"typeString": "literal_string \"Only the module can call\""
															}
														],
														"id": 3079,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7703:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7703:142:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3091,
												"nodeType": "ExpressionStatement",
												"src": "7703:142:17"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 3095,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "7897:3:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 3096,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "7897:10:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 3093,
																	"name": "controller",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2750,
																	"src": "7877:10:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IController_$1523",
																		"typeString": "contract IController"
																	}
																},
																"id": 3094,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "isModule",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1501,
																"src": "7877:19:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view external returns (bool)"
																}
															},
															"id": 3097,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7877:31:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4d6f64756c65206d75737420626520656e61626c6564206f6e20636f6e74726f6c6c6572",
															"id": 3098,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7922:38:17",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d9c944a3ac456db4a9d8c5955e9f818627c45a33c17b5580dc475a1fc92ee9e4",
																"typeString": "literal_string \"Module must be enabled on controller\""
															},
															"value": "Module must be enabled on controller"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d9c944a3ac456db4a9d8c5955e9f818627c45a33c17b5580dc475a1fc92ee9e4",
																"typeString": "literal_string \"Module must be enabled on controller\""
															}
														],
														"id": 3092,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7856:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7856:114:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3100,
												"nodeType": "ExpressionStatement",
												"src": "7856:114:17"
											}
										]
									},
									"documentation": {
										"id": 3074,
										"nodeType": "StructuredDocumentation",
										"src": "7527:97:17",
										"text": " Caller must be initialized module and module must be enabled on the controller"
									},
									"id": 3102,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_validateOnlyModule",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 3077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3076,
												"mutability": "mutable",
												"name": "_setToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3102,
												"src": "7658:19:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISetToken_$1867",
													"typeString": "contract ISetToken"
												},
												"typeName": {
													"contractScope": null,
													"id": 3075,
													"name": "ISetToken",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1867,
													"src": "7658:9:17",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISetToken_$1867",
														"typeString": "contract ISetToken"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7657:21:17"
									},
									"returnParameters": {
										"id": 3078,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7693:0:17"
									},
									"scope": 3128,
									"src": "7629:348:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3126,
										"nodeType": "Block",
										"src": "8154:191:17",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 3113,
																			"name": "_setToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3105,
																			"src": "8197:9:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ISetToken_$1867",
																				"typeString": "contract ISetToken"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_ISetToken_$1867",
																				"typeString": "contract ISetToken"
																			}
																		],
																		"id": 3112,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8189:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 3111,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8189:7:17",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 3114,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8189:18:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 3109,
																	"name": "controller",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2750,
																	"src": "8172:10:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IController_$1523",
																		"typeString": "contract IController"
																	}
																},
																"id": 3110,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "isSet",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1508,
																"src": "8172:16:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view external returns (bool)"
																}
															},
															"id": 3115,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8172:36:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4d75737420626520636f6e74726f6c6c65722d656e61626c656420536574546f6b656e",
															"id": 3116,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8210:37:17",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_da40ebd88447b33ee570622f2f9262f8ef3f045fce8a9574c6d8ec4698c74500",
																"typeString": "literal_string \"Must be controller-enabled SetToken\""
															},
															"value": "Must be controller-enabled SetToken"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_da40ebd88447b33ee570622f2f9262f8ef3f045fce8a9574c6d8ec4698c74500",
																"typeString": "literal_string \"Must be controller-enabled SetToken\""
															}
														],
														"id": 3108,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8164:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8164:84:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3118,
												"nodeType": "ExpressionStatement",
												"src": "8164:84:17"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 3121,
																	"name": "_setToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3105,
																	"src": "8293:9:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ISetToken_$1867",
																		"typeString": "contract ISetToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ISetToken_$1867",
																		"typeString": "contract ISetToken"
																	}
																],
																"id": 3120,
																"name": "isSetPendingInitialization",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2961,
																"src": "8266:26:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_contract$_ISetToken_$1867_$returns$_t_bool_$",
																	"typeString": "function (contract ISetToken) view returns (bool)"
																}
															},
															"id": 3122,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8266:37:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4d7573742062652070656e64696e6720696e697469616c697a6174696f6e",
															"id": 3123,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8305:32:17",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_36437773d10c40aefaa275a785087309e90b8f71c3204c6d2a33d8bab98865ee",
																"typeString": "literal_string \"Must be pending initialization\""
															},
															"value": "Must be pending initialization"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_36437773d10c40aefaa275a785087309e90b8f71c3204c6d2a33d8bab98865ee",
																"typeString": "literal_string \"Must be pending initialization\""
															}
														],
														"id": 3119,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8258:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8258:80:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3125,
												"nodeType": "ExpressionStatement",
												"src": "8258:80:17"
											}
										]
									},
									"documentation": {
										"id": 3103,
										"nodeType": "StructuredDocumentation",
										"src": "7983:90:17",
										"text": " SetToken must be in a pending state and module must be in pending state"
									},
									"id": 3127,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_validateOnlyValidAndPendingSet",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 3106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3105,
												"mutability": "mutable",
												"name": "_setToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3127,
												"src": "8119:19:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISetToken_$1867",
													"typeString": "contract ISetToken"
												},
												"typeName": {
													"contractScope": null,
													"id": 3104,
													"name": "ISetToken",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1867,
													"src": "8119:9:17",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISetToken_$1867",
														"typeString": "contract ISetToken"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8118:21:17"
									},
									"returnParameters": {
										"id": 3107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8154:0:17"
									},
									"scope": 3128,
									"src": "8078:267:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3129,
							"src": "1697:6650:17"
						}
					],
					"src": "655:7692:17"
				},
				"id": 17
			},
			"contracts/lib/Position.sol": {
				"ast": {
					"absolutePath": "contracts/lib/Position.sol",
					"exportedSymbols": {
						"Position": [
							3611
						]
					},
					"id": 3612,
					"license": "Apache License",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3130,
							"literals": [
								"solidity",
								"0.6",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "655:23:18"
						},
						{
							"id": 3131,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "679:35:18"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 3133,
							"nodeType": "ImportDirective",
							"scope": 3612,
							"sourceUnit": 612,
							"src": "716:72:18",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 3132,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "725:6:18",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/SafeCast.sol",
							"file": "@openzeppelin/contracts/utils/SafeCast.sol",
							"id": 3135,
							"nodeType": "ImportDirective",
							"scope": 3612,
							"sourceUnit": 1474,
							"src": "789:70:18",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 3134,
										"name": "SafeCast",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "798:8:18",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/math/SafeMath.sol",
							"id": 3137,
							"nodeType": "ImportDirective",
							"scope": 3612,
							"sourceUnit": 355,
							"src": "860:69:18",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 3136,
										"name": "SafeMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "869:8:18",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/math/SignedSafeMath.sol",
							"file": "@openzeppelin/contracts/math/SignedSafeMath.sol",
							"id": 3139,
							"nodeType": "ImportDirective",
							"scope": 3612,
							"sourceUnit": 534,
							"src": "930:81:18",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 3138,
										"name": "SignedSafeMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "939:14:18",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/ISetToken.sol",
							"file": "../interfaces/ISetToken.sol",
							"id": 3141,
							"nodeType": "ImportDirective",
							"scope": 3612,
							"sourceUnit": 1868,
							"src": "1013:56:18",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 3140,
										"name": "ISetToken",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "1022:9:18",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/lib/PreciseUnitMath.sol",
							"file": "./PreciseUnitMath.sol",
							"id": 3143,
							"nodeType": "ImportDirective",
							"scope": 3612,
							"sourceUnit": 4121,
							"src": "1070:56:18",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 3142,
										"name": "PreciseUnitMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "1079:15:18",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3144,
								"nodeType": "StructuredDocumentation",
								"src": "1129:244:18",
								"text": " @title Position\n @author Set Protocol\n Collection of helper functions for handling and updating SetToken Positions\n CHANGELOG:\n  - Updated editExternalPosition to work when no external position is associated with module"
							},
							"fullyImplemented": true,
							"id": 3611,
							"linearizedBaseContracts": [
								3611
							],
							"name": "Position",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 3147,
									"libraryName": {
										"contractScope": null,
										"id": 3145,
										"name": "SafeCast",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1473,
										"src": "1403:8:18",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeCast_$1473",
											"typeString": "library SafeCast"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1397:27:18",
									"typeName": {
										"id": 3146,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1416:7:18",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 3150,
									"libraryName": {
										"contractScope": null,
										"id": 3148,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 354,
										"src": "1435:8:18",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$354",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1429:27:18",
									"typeName": {
										"id": 3149,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1448:7:18",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 3153,
									"libraryName": {
										"contractScope": null,
										"id": 3151,
										"name": "SafeCast",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1473,
										"src": "1467:8:18",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeCast_$1473",
											"typeString": "library SafeCast"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1461:26:18",
									"typeName": {
										"id": 3152,
										"name": "int256",
										"nodeType": "ElementaryTypeName",
										"src": "1480:6:18",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									}
								},
								{
									"id": 3156,
									"libraryName": {
										"contractScope": null,
										"id": 3154,
										"name": "SignedSafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 533,
										"src": "1498:14:18",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SignedSafeMath_$533",
											"typeString": "library SignedSafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1492:32:18",
									"typeName": {
										"id": 3155,
										"name": "int256",
										"nodeType": "ElementaryTypeName",
										"src": "1517:6:18",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									}
								},
								{
									"id": 3159,
									"libraryName": {
										"contractScope": null,
										"id": 3157,
										"name": "PreciseUnitMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 4120,
										"src": "1535:15:18",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_PreciseUnitMath_$4120",
											"typeString": "library PreciseUnitMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1529:34:18",
									"typeName": {
										"id": 3158,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1555:7:18",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"body": {
										"id": 3176,
										"nodeType": "Block",
										"src": "1833:76:18",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 3171,
																"name": "_component",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3164,
																"src": "1887:10:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 3169,
																"name": "_setToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3162,
																"src": "1850:9:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ISetToken_$1867",
																	"typeString": "contract ISetToken"
																}
															},
															"id": 3170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "getDefaultPositionRealUnit",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1781,
															"src": "1850:36:18",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_int256_$",
																"typeString": "function (address) view external returns (int256)"
															}
														},
														"id": 3172,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1850:48:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 3173,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1901:1:18",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1850:52:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3168,
												"id": 3175,
												"nodeType": "Return",
												"src": "1843:59:18"
											}
										]
									},
									"documentation": {
										"id": 3160,
										"nodeType": "StructuredDocumentation",
										"src": "1613:118:18",
										"text": " Returns whether the SetToken has a default position for a given component (if the real unit is > 0)"
									},
									"id": 3177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasDefaultPosition",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 3165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3162,
												"mutability": "mutable",
												"name": "_setToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3177,
												"src": "1764:19:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISetToken_$1867",
													"typeString": "contract ISetToken"
												},
												"typeName": {
													"contractScope": null,
													"id": 3161,
													"name": "ISetToken",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1867,
													"src": "1764:9:18",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISetToken_$1867",
														"typeString": "contract ISetToken"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3164,
												"mutability": "mutable",
												"name": "_component",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3177,
												"src": "1785:18:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1785:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1763:41:18"
									},
									"returnParameters": {
										"id": 3168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3167,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3177,
												"src": "1827:4:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3166,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1827:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1826:6:18"
									},
									"scope": 3611,
									"src": "1736:173:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3195,
										"nodeType": "Block",
										"src": "2146:83:18",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 3189,
																	"name": "_component",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3182,
																	"src": "2200:10:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 3187,
																	"name": "_setToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3180,
																	"src": "2163:9:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ISetToken_$1867",
																		"typeString": "contract ISetToken"
																	}
																},
																"id": 3188,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "getExternalPositionModules",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1804,
																"src": "2163:36:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
																	"typeString": "function (address) view external returns (address[] memory)"
																}
															},
															"id": 3190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2163:48:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 3191,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "2163:55:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 3192,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2221:1:18",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2163:59:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3186,
												"id": 3194,
												"nodeType": "Return",
												"src": "2156:66:18"
											}
										]
									},
									"documentation": {
										"id": 3178,
										"nodeType": "StructuredDocumentation",
										"src": "1915:128:18",
										"text": " Returns whether the SetToken has an external position for a given component (if # of position modules is > 0)"
									},
									"id": 3196,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasExternalPosition",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 3183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3180,
												"mutability": "mutable",
												"name": "_setToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3196,
												"src": "2077:19:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISetToken_$1867",
													"typeString": "contract ISetToken"
												},
												"typeName": {
													"contractScope": null,
													"id": 3179,
													"name": "ISetToken",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1867,
													"src": "2077:9:18",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISetToken_$1867",
														"typeString": "contract ISetToken"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3182,
												"mutability": "mutable",
												"name": "_component",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3196,
												"src": "2098:18:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2098:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2076:41:18"
									},
									"returnParameters": {
										"id": 3186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3185,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3196,
												"src": "2140:4:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3184,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2140:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2139:6:18"
									},
									"scope": 3611,
									"src": "2048:181:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3217,
										"nodeType": "Block",
										"src": "2492:92:18",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 3210,
																"name": "_component",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3201,
																"src": "2546:10:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 3208,
																"name": "_setToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3199,
																"src": "2509:9:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ISetToken_$1867",
																	"typeString": "contract ISetToken"
																}
															},
															"id": 3209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "getDefaultPositionRealUnit",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1781,
															"src": "2509:36:18",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_int256_$",
																"typeString": "function (address) view external returns (int256)"
															}
														},
														"id": 3211,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2509:48:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"argumentTypes": null,
																"id": 3212,
																"name": "_unit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3203,
																"src": "2561:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "toInt256",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1472,
															"src": "2561:14:18",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_int256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256) pure returns (int256)"
															}
														},
														"id": 3214,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2561:16:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "2509:68:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3207,
												"id": 3216,
												"nodeType": "Return",
												"src": "2502:75:18"
											}
										]
									},
									"documentation": {
										"id": 3197,
										"nodeType": "StructuredDocumentation",
										"src": "2239:129:18",
										"text": " Returns whether the SetToken component default position real unit is greater than or equal to units passed in."
									},
									"id": 3218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasSufficientDefaultUnits",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 3204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3199,
												"mutability": "mutable",
												"name": "_setToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3218,
												"src": "2408:19:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISetToken_$1867",
													"typeString": "contract ISetToken"
												},
												"typeName": {
													"contractScope": null,
													"id": 3198,
													"name": "ISetToken",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1867,
													"src": "2408:9:18",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISetToken_$1867",
														"typeString": "contract ISetToken"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3201,
												"mutability": "mutable",
												"name": "_component",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3218,
												"src": "2429:18:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3203,
												"mutability": "mutable",
												"name": "_unit",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3218,
												"src": "2449:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2449:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2407:56:18"
									},
									"returnParameters": {
										"id": 3207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3206,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3218,
												"src": "2486:4:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3205,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2486:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2485:6:18"
									},
									"scope": 3611,
									"src": "2373:211:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3242,
										"nodeType": "Block",
										"src": "2935:113:18",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 3234,
																"name": "_component",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3223,
																"src": "2989:10:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"argumentTypes": null,
																"id": 3235,
																"name": "_positionModule",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3225,
																"src": "3001:15:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 3232,
																"name": "_setToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3221,
																"src": "2951:9:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ISetToken_$1867",
																	"typeString": "contract ISetToken"
																}
															},
															"id": 3233,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "getExternalPositionRealUnit",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1790,
															"src": "2951:37:18",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_int256_$",
																"typeString": "function (address,address) view external returns (int256)"
															}
														},
														"id": 3236,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2951:66:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"argumentTypes": null,
																"id": 3237,
																"name": "_unit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3227,
																"src": "3021:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "toInt256",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1472,
															"src": "3021:14:18",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_int256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256) pure returns (int256)"
															}
														},
														"id": 3239,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3021:16:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "2951:86:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3231,
												"id": 3241,
												"nodeType": "Return",
												"src": "2944:93:18"
											}
										]
									},
									"documentation": {
										"id": 3219,
										"nodeType": "StructuredDocumentation",
										"src": "2590:129:18",
										"text": " Returns whether the SetToken component external position is greater than or equal to the real units passed in."
									},
									"id": 3243,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasSufficientExternalUnits",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 3228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3221,
												"mutability": "mutable",
												"name": "_setToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3243,
												"src": "2769:19:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISetToken_$1867",
													"typeString": "contract ISetToken"
												},
												"typeName": {
													"contractScope": null,
													"id": 3220,
													"name": "ISetToken",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1867,
													"src": "2769:9:18",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISetToken_$1867",
														"typeString": "contract ISetToken"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3223,
												"mutability": "mutable",
												"name": "_component",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3243,
												"src": "2798:18:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2798:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3225,
												"mutability": "mutable",
												"name": "_positionModule",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3243,
												"src": "2826:23:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2826:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3227,
												"mutability": "mutable",
												"name": "_unit",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3243,
												"src": "2859:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2859:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2759:119:18"
									},
									"returnParameters": {
										"id": 3231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3230,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3243,
												"src": "2925:4:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3229,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2925:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2924:6:18"
									},
									"scope": 3611,
									"src": "2724:324:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3310,
										"nodeType": "Block",
										"src": "3669:728:18",
										"statements": [
											{
												"assignments": [
													3254
												],
												"declarations": [
													{
														"constant": false,
														"id": 3254,
														"mutability": "mutable",
														"name": "isPositionFound",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 3310,
														"src": "3679:20:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 3253,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3679:4:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 3259,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 3256,
															"name": "_setToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3246,
															"src": "3721:9:18",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISetToken_$1867",
																"typeString": "contract ISetToken"
															}
														},
														{
															"argumentTypes": null,
															"id": 3257,
															"name": "_component",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3248,
															"src": "3732:10:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_ISetToken_$1867",
																"typeString": "contract ISetToken"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3255,
														"name": "hasDefaultPosition",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3177,
														"src": "3702:18:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_contract$_ISetToken_$1867_$_t_address_$returns$_t_bool_$",
															"typeString": "function (contract ISetToken,address) view returns (bool)"
														}
													},
													"id": 3258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3702:41:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3679:64:18"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 3265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 3261,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "3757:16:18",
														"subExpression": {
															"argumentTypes": null,
															"id": 3260,
															"name": "isPositionFound",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3254,
															"src": "3758:15:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3264,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 3262,
															"name": "_newUnit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3250,
															"src": "3777:8:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 3263,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3788:1:18",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3777:12:18",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3757:32:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 3284,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 3280,
															"name": "isPositionFound",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3254,
															"src": "4043:15:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 3281,
																"name": "_newUnit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3250,
																"src": "4062:8:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 3282,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4074:1:18",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4062:13:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "4043:32:18",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": null,
													"id": 3299,
													"nodeType": "IfStatement",
													"src": "4039:275:18",
													"trueBody": {
														"id": 3298,
														"nodeType": "Block",
														"src": "4077:237:18",
														"statements": [
															{
																"condition": {
																	"argumentTypes": null,
																	"id": 3289,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "4189:43:18",
																	"subExpression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 3286,
																				"name": "_setToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3246,
																				"src": "4210:9:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_ISetToken_$1867",
																					"typeString": "contract ISetToken"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"id": 3287,
																				"name": "_component",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3248,
																				"src": "4221:10:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_ISetToken_$1867",
																					"typeString": "contract ISetToken"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 3285,
																			"name": "hasExternalPosition",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3196,
																			"src": "4190:19:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_contract$_ISetToken_$1867_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (contract ISetToken,address) view returns (bool)"
																			}
																		},
																		"id": 3288,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4190:42:18",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": null,
																"id": 3297,
																"nodeType": "IfStatement",
																"src": "4185:119:18",
																"trueBody": {
																	"id": 3296,
																	"nodeType": "Block",
																	"src": "4234:70:18",
																	"statements": [
																		{
																			"expression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 3293,
																						"name": "_component",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3248,
																						"src": "4278:10:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"id": 3290,
																						"name": "_setToken",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3246,
																						"src": "4252:9:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_ISetToken_$1867",
																							"typeString": "contract ISetToken"
																						}
																					},
																					"id": 3292,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "removeComponent",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1663,
																					"src": "4252:25:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
																						"typeString": "function (address) external"
																					}
																				},
																				"id": 3294,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4252:37:18",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$__$",
																					"typeString": "tuple()"
																				}
																			},
																			"id": 3295,
																			"nodeType": "ExpressionStatement",
																			"src": "4252:37:18"
																		}
																	]
																}
															}
														]
													}
												},
												"id": 3300,
												"nodeType": "IfStatement",
												"src": "3753:561:18",
												"trueBody": {
													"id": 3279,
													"nodeType": "Block",
													"src": "3791:242:18",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"id": 3270,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "3911:43:18",
																"subExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 3267,
																			"name": "_setToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3246,
																			"src": "3932:9:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ISetToken_$1867",
																				"typeString": "contract ISetToken"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 3268,
																			"name": "_component",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3248,
																			"src": "3943:10:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_ISetToken_$1867",
																				"typeString": "contract ISetToken"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 3266,
																		"name": "hasExternalPosition",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3196,
																		"src": "3912:19:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_contract$_ISetToken_$1867_$_t_address_$returns$_t_bool_$",
																			"typeString": "function (contract ISetToken,address) view returns (bool)"
																		}
																	},
																	"id": 3269,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3912:42:18",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 3278,
															"nodeType": "IfStatement",
															"src": "3907:116:18",
															"trueBody": {
																"id": 3277,
																"nodeType": "Block",
																"src": "3956:67:18",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 3274,
																					"name": "_component",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3248,
																					"src": "3997:10:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 3271,
																					"name": "_setToken",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3246,
																					"src": "3974:9:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_ISetToken_$1867",
																						"typeString": "contract ISetToken"
																					}
																				},
																				"id": 3273,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "addComponent",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1658,
																				"src": "3974:22:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
																					"typeString": "function (address) external"
																				}
																			},
																			"id": 3275,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3974:34:18",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 3276,
																		"nodeType": "ExpressionStatement",
																		"src": "3974:34:18"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 3304,
															"name": "_component",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3248,
															"src": "4358:10:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"argumentTypes": null,
																	"id": 3305,
																	"name": "_newUnit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3250,
																	"src": "4370:8:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 3306,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "toInt256",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1472,
																"src": "4370:17:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_int256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (int256)"
																}
															},
															"id": 3307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4370:19:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 3301,
															"name": "_setToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3246,
															"src": "4324:9:18",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISetToken_$1867",
																"typeString": "contract ISetToken"
															}
														},
														"id": 3303,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "editDefaultPositionUnit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1670,
														"src": "4324:33:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_int256_$returns$__$",
															"typeString": "function (address,int256) external"
														}
													},
													"id": 3308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4324:66:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3309,
												"nodeType": "ExpressionStatement",
												"src": "4324:66:18"
											}
										]
									},
									"documentation": {
										"id": 3244,
										"nodeType": "StructuredDocumentation",
										"src": "3054:513:18",
										"text": " If the position does not exist, create a new Position and add to the SetToken. If it already exists,\n then set the position units. If the new units is 0, remove the position. Handles adding/removing of \n components where needed (in light of potential external positions).\n @param _setToken           Address of SetToken being modified\n @param _component          Address of the component\n @param _newUnit            Quantity of Position units - must be >= 0"
									},
									"id": 3311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "editDefaultPosition",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 3251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3246,
												"mutability": "mutable",
												"name": "_setToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3311,
												"src": "3601:19:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISetToken_$1867",
													"typeString": "contract ISetToken"
												},
												"typeName": {
													"contractScope": null,
													"id": 3245,
													"name": "ISetToken",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1867,
													"src": "3601:9:18",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISetToken_$1867",
														"typeString": "contract ISetToken"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3248,
												"mutability": "mutable",
												"name": "_component",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3311,
												"src": "3622:18:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3622:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3250,
												"mutability": "mutable",
												"name": "_newUnit",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3311,
												"src": "3642:16:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3642:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3600:59:18"
									},
									"returnParameters": {
										"id": 3252,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3669:0:18"
									},
									"scope": 3611,
									"src": "3572:825:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3444,
										"nodeType": "Block",
										"src": "5738:1313:18",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 3325,
														"name": "_newUnit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3320,
														"src": "5752:8:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 3326,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5764:1:18",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5752:13:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 3442,
													"nodeType": "Block",
													"src": "6290:755:18",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3384,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 3381,
																				"name": "_data",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3322,
																				"src": "6312:5:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 3382,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "6312:12:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 3383,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6328:1:18",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "6312:17:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "5061737365642064617461206d757374206265206e756c6c",
																		"id": 3385,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6331:26:18",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_cba8f96c63e71fff51fd2e76c4021a7d0a67bd7ace6908e319daf211b7f1e0d7",
																			"typeString": "literal_string \"Passed data must be null\""
																		},
																		"value": "Passed data must be null"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_cba8f96c63e71fff51fd2e76c4021a7d0a67bd7ace6908e319daf211b7f1e0d7",
																			"typeString": "literal_string \"Passed data must be null\""
																		}
																	],
																	"id": 3380,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "6304:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 3386,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6304:54:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3387,
															"nodeType": "ExpressionStatement",
															"src": "6304:54:18"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3394,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 3390,
																			"name": "_component",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3316,
																			"src": "6518:10:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 3391,
																			"name": "_module",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3318,
																			"src": "6530:7:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 3388,
																			"name": "_setToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3314,
																			"src": "6480:9:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ISetToken_$1867",
																				"typeString": "contract ISetToken"
																			}
																		},
																		"id": 3389,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "getExternalPositionRealUnit",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1790,
																		"src": "6480:37:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_int256_$",
																			"typeString": "function (address,address) view external returns (int256)"
																		}
																	},
																	"id": 3392,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6480:58:18",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 3393,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6542:1:18",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6480:63:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 3441,
															"nodeType": "IfStatement",
															"src": "6476:559:18",
															"trueBody": {
																"id": 3440,
																"nodeType": "Block",
																"src": "6545:490:18",
																"statements": [
																	{
																		"assignments": [
																			3399
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 3399,
																				"mutability": "mutable",
																				"name": "positionModules",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 3440,
																				"src": "6563:32:18",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																					"typeString": "address[]"
																				},
																				"typeName": {
																					"baseType": {
																						"id": 3397,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "6563:7:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"id": 3398,
																					"length": null,
																					"nodeType": "ArrayTypeName",
																					"src": "6563:9:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																						"typeString": "address[]"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 3404,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 3402,
																					"name": "_component",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3316,
																					"src": "6635:10:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 3400,
																					"name": "_setToken",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3314,
																					"src": "6598:9:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_ISetToken_$1867",
																						"typeString": "contract ISetToken"
																					}
																				},
																				"id": 3401,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "getExternalPositionModules",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1804,
																				"src": "6598:36:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
																					"typeString": "function (address) view external returns (address[] memory)"
																				}
																			},
																			"id": 3403,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6598:48:18",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "6563:83:18"
																	},
																	{
																		"condition": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 3410,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 3407,
																							"name": "_component",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3316,
																							"src": "6705:10:18",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"expression": {
																							"argumentTypes": null,
																							"id": 3405,
																							"name": "_setToken",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3314,
																							"src": "6668:9:18",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_ISetToken_$1867",
																								"typeString": "contract ISetToken"
																							}
																						},
																						"id": 3406,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "getDefaultPositionRealUnit",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1781,
																						"src": "6668:36:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_int256_$",
																							"typeString": "function (address) view external returns (int256)"
																						}
																					},
																					"id": 3408,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6668:48:18",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "30",
																					"id": 3409,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "6720:1:18",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "6668:53:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3414,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 3411,
																						"name": "positionModules",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3399,
																						"src": "6725:15:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																							"typeString": "address[] memory"
																						}
																					},
																					"id": 3412,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "length",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": null,
																					"src": "6725:22:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "31",
																					"id": 3413,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "6751:1:18",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "6725:27:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "6668:84:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": null,
																		"id": 3432,
																		"nodeType": "IfStatement",
																		"src": "6664:280:18",
																		"trueBody": {
																			"id": 3431,
																			"nodeType": "Block",
																			"src": "6754:190:18",
																			"statements": [
																				{
																					"expression": {
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"commonType": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								"id": 3421,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"argumentTypes": null,
																									"baseExpression": {
																										"argumentTypes": null,
																										"id": 3417,
																										"name": "positionModules",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 3399,
																										"src": "6784:15:18",
																										"typeDescriptions": {
																											"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																											"typeString": "address[] memory"
																										}
																									},
																									"id": 3419,
																									"indexExpression": {
																										"argumentTypes": null,
																										"hexValue": "30",
																										"id": 3418,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "6800:1:18",
																										"subdenomination": null,
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										},
																										"value": "0"
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "6784:18:18",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "==",
																								"rightExpression": {
																									"argumentTypes": null,
																									"id": 3420,
																									"name": "_module",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3318,
																									"src": "6806:7:18",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"src": "6784:29:18",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								}
																							},
																							{
																								"argumentTypes": null,
																								"hexValue": "45787465726e616c20706f736974696f6e73206d757374206265203020746f2072656d6f766520636f6d706f6e656e74",
																								"id": 3422,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "string",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "6815:50:18",
																								"subdenomination": null,
																								"typeDescriptions": {
																									"typeIdentifier": "t_stringliteral_7e349983fa2ac32b8826baf49eb721632a792afb55bc49b3b69fbcbb4d0e412f",
																									"typeString": "literal_string \"External positions must be 0 to remove component\""
																								},
																								"value": "External positions must be 0 to remove component"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								},
																								{
																									"typeIdentifier": "t_stringliteral_7e349983fa2ac32b8826baf49eb721632a792afb55bc49b3b69fbcbb4d0e412f",
																									"typeString": "literal_string \"External positions must be 0 to remove component\""
																								}
																							],
																							"id": 3416,
																							"name": "require",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [
																								-18,
																								-18
																							],
																							"referencedDeclaration": -18,
																							"src": "6776:7:18",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																								"typeString": "function (bool,string memory) pure"
																							}
																						},
																						"id": 3423,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "6776:90:18",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 3424,
																					"nodeType": "ExpressionStatement",
																					"src": "6776:90:18"
																				},
																				{
																					"expression": {
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"id": 3428,
																								"name": "_component",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3316,
																								"src": "6914:10:18",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							],
																							"expression": {
																								"argumentTypes": null,
																								"id": 3425,
																								"name": "_setToken",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3314,
																								"src": "6888:9:18",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_ISetToken_$1867",
																									"typeString": "contract ISetToken"
																								}
																							},
																							"id": 3427,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "removeComponent",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1663,
																							"src": "6888:25:18",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
																								"typeString": "function (address) external"
																							}
																						},
																						"id": 3429,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "6888:37:18",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 3430,
																					"nodeType": "ExpressionStatement",
																					"src": "6888:37:18"
																				}
																			]
																		}
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 3436,
																					"name": "_component",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3316,
																					"src": "7000:10:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 3437,
																					"name": "_module",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3318,
																					"src": "7012:7:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 3433,
																					"name": "_setToken",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3314,
																					"src": "6961:9:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_ISetToken_$1867",
																						"typeString": "contract ISetToken"
																					}
																				},
																				"id": 3435,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "removeExternalPositionModule",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1684,
																				"src": "6961:38:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
																					"typeString": "function (address,address) external"
																				}
																			},
																			"id": 3438,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6961:59:18",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 3439,
																		"nodeType": "ExpressionStatement",
																		"src": "6961:59:18"
																	}
																]
															}
														}
													]
												},
												"id": 3443,
												"nodeType": "IfStatement",
												"src": "5748:1297:18",
												"trueBody": {
													"id": 3379,
													"nodeType": "Block",
													"src": "5767:517:18",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"id": 3332,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "5785:34:18",
																"subExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 3330,
																			"name": "_component",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3316,
																			"src": "5808:10:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 3328,
																			"name": "_setToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3314,
																			"src": "5786:9:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ISetToken_$1867",
																				"typeString": "contract ISetToken"
																			}
																		},
																		"id": 3329,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "isComponent",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1829,
																		"src": "5786:21:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
																			"typeString": "function (address) view external returns (bool)"
																		}
																	},
																	"id": 3331,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5786:33:18",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"argumentTypes": null,
																	"id": 3352,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "5972:56:18",
																	"subExpression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 3349,
																				"name": "_component",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3316,
																				"src": "6008:10:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"id": 3350,
																				"name": "_module",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3318,
																				"src": "6020:7:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 3347,
																				"name": "_setToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3314,
																				"src": "5973:9:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_ISetToken_$1867",
																					"typeString": "contract ISetToken"
																				}
																			},
																			"id": 3348,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "isExternalPositionModule",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1822,
																			"src": "5973:34:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view external returns (bool)"
																			}
																		},
																		"id": 3351,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5973:55:18",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": null,
																"id": 3361,
																"nodeType": "IfStatement",
																"src": "5968:151:18",
																"trueBody": {
																	"id": 3360,
																	"nodeType": "Block",
																	"src": "6030:89:18",
																	"statements": [
																		{
																			"expression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 3356,
																						"name": "_component",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3316,
																						"src": "6084:10:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"argumentTypes": null,
																						"id": 3357,
																						"name": "_module",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3318,
																						"src": "6096:7:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"id": 3353,
																						"name": "_setToken",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3314,
																						"src": "6048:9:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_ISetToken_$1867",
																							"typeString": "contract ISetToken"
																						}
																					},
																					"id": 3355,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "addExternalPositionModule",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1677,
																					"src": "6048:35:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
																						"typeString": "function (address,address) external"
																					}
																				},
																				"id": 3358,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6048:56:18",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$__$",
																					"typeString": "tuple()"
																				}
																			},
																			"id": 3359,
																			"nodeType": "ExpressionStatement",
																			"src": "6048:56:18"
																		}
																	]
																}
															},
															"id": 3362,
															"nodeType": "IfStatement",
															"src": "5781:338:18",
															"trueBody": {
																"id": 3346,
																"nodeType": "Block",
																"src": "5821:141:18",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 3336,
																					"name": "_component",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3316,
																					"src": "5862:10:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 3333,
																					"name": "_setToken",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3314,
																					"src": "5839:9:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_ISetToken_$1867",
																						"typeString": "contract ISetToken"
																					}
																				},
																				"id": 3335,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "addComponent",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1658,
																				"src": "5839:22:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
																					"typeString": "function (address) external"
																				}
																			},
																			"id": 3337,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5839:34:18",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 3338,
																		"nodeType": "ExpressionStatement",
																		"src": "5839:34:18"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 3342,
																					"name": "_component",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3316,
																					"src": "5927:10:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 3343,
																					"name": "_module",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3318,
																					"src": "5939:7:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 3339,
																					"name": "_setToken",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3314,
																					"src": "5891:9:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_ISetToken_$1867",
																						"typeString": "contract ISetToken"
																					}
																				},
																				"id": 3341,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "addExternalPositionModule",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1677,
																				"src": "5891:35:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
																					"typeString": "function (address,address) external"
																				}
																			},
																			"id": 3344,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5891:56:18",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 3345,
																		"nodeType": "ExpressionStatement",
																		"src": "5891:56:18"
																	}
																]
															}
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 3366,
																		"name": "_component",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3316,
																		"src": "6167:10:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 3367,
																		"name": "_module",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3318,
																		"src": "6179:7:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 3368,
																		"name": "_newUnit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3320,
																		"src": "6188:8:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 3363,
																		"name": "_setToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3314,
																		"src": "6132:9:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ISetToken_$1867",
																			"typeString": "contract ISetToken"
																		}
																	},
																	"id": 3365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "editExternalPositionUnit",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1693,
																	"src": "6132:34:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_int256_$returns$__$",
																		"typeString": "function (address,address,int256) external"
																	}
																},
																"id": 3369,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6132:65:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3370,
															"nodeType": "ExpressionStatement",
															"src": "6132:65:18"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 3374,
																		"name": "_component",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3316,
																		"src": "6246:10:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 3375,
																		"name": "_module",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3318,
																		"src": "6258:7:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 3376,
																		"name": "_data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3322,
																		"src": "6267:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 3371,
																		"name": "_setToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3314,
																		"src": "6211:9:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ISetToken_$1867",
																			"typeString": "contract ISetToken"
																		}
																	},
																	"id": 3373,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "editExternalPositionData",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1702,
																	"src": "6211:34:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (address,address,bytes memory) external"
																	}
																},
																"id": 3377,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6211:62:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3378,
															"nodeType": "ExpressionStatement",
															"src": "6211:62:18"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3312,
										"nodeType": "StructuredDocumentation",
										"src": "4403:1138:18",
										"text": " Update an external position and remove and external positions or components if necessary. The logic flows as follows:\n 1) If component is not already added then add component and external position. \n 2) If component is added but no existing external position using the passed module exists then add the external position.\n 3) If the existing position is being added to then just update the unit and data\n 4) If the position is being closed and no other external positions or default positions are associated with the component\n    then untrack the component and remove external position.\n 5) If the position is being closed and other existing positions still exist for the component then just remove the\n    external position.\n @param _setToken         SetToken being updated\n @param _component        Component position being updated\n @param _module           Module external position is associated with\n @param _newUnit          Position units of new external position\n @param _data             Arbitrary data associated with the position"
									},
									"id": 3445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "editExternalPosition",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 3323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3314,
												"mutability": "mutable",
												"name": "_setToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3445,
												"src": "5585:19:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISetToken_$1867",
													"typeString": "contract ISetToken"
												},
												"typeName": {
													"contractScope": null,
													"id": 3313,
													"name": "ISetToken",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1867,
													"src": "5585:9:18",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISetToken_$1867",
														"typeString": "contract ISetToken"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3316,
												"mutability": "mutable",
												"name": "_component",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3445,
												"src": "5614:18:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5614:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3318,
												"mutability": "mutable",
												"name": "_module",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3445,
												"src": "5642:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3317,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5642:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3320,
												"mutability": "mutable",
												"name": "_newUnit",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3445,
												"src": "5667:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3319,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "5667:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3322,
												"mutability": "mutable",
												"name": "_data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3445,
												"src": "5692:18:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3321,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5692:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5575:141:18"
									},
									"returnParameters": {
										"id": 3324,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5738:0:18"
									},
									"scope": 3611,
									"src": "5546:1505:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3460,
										"nodeType": "Block",
										"src": "7457:65:18",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 3457,
															"name": "_positionUnit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3450,
															"src": "7501:13:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 3455,
															"name": "_setTokenSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3448,
															"src": "7474:15:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3456,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "preciseMul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3725,
														"src": "7474:26:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 3458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7474:41:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3454,
												"id": 3459,
												"nodeType": "Return",
												"src": "7467:48:18"
											}
										]
									},
									"documentation": {
										"id": 3446,
										"nodeType": "StructuredDocumentation",
										"src": "7057:282:18",
										"text": " Get total notional amount of Default position\n @param _setTokenSupply     Supply of SetToken in precise units (10^18)\n @param _positionUnit       Quantity of Position units\n @return                    Total notional amount of units"
									},
									"id": 3461,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDefaultTotalNotional",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 3451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3448,
												"mutability": "mutable",
												"name": "_setTokenSupply",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3461,
												"src": "7377:23:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7377:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3450,
												"mutability": "mutable",
												"name": "_positionUnit",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3461,
												"src": "7402:21:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7402:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7376:48:18"
									},
									"returnParameters": {
										"id": 3454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3453,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3461,
												"src": "7448:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3452,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7448:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7447:9:18"
									},
									"scope": 3611,
									"src": "7344:178:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3476,
										"nodeType": "Block",
										"src": "7928:66:18",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 3473,
															"name": "_setTokenSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3464,
															"src": "7971:15:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 3471,
															"name": "_totalNotional",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3466,
															"src": "7945:14:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3472,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "preciseDiv",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3799,
														"src": "7945:25:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 3474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7945:42:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3470,
												"id": 3475,
												"nodeType": "Return",
												"src": "7938:49:18"
											}
										]
									},
									"documentation": {
										"id": 3462,
										"nodeType": "StructuredDocumentation",
										"src": "7528:282:18",
										"text": " Get position unit from total notional amount\n @param _setTokenSupply     Supply of SetToken in precise units (10^18)\n @param _totalNotional      Total notional amount of component prior to\n @return                    Default position unit"
									},
									"id": 3477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDefaultPositionUnit",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 3467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3464,
												"mutability": "mutable",
												"name": "_setTokenSupply",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3477,
												"src": "7847:23:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7847:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3466,
												"mutability": "mutable",
												"name": "_totalNotional",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3477,
												"src": "7872:22:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7872:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7846:49:18"
									},
									"returnParameters": {
										"id": 3470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3469,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3477,
												"src": "7919:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7919:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7918:9:18"
									},
									"scope": 3611,
									"src": "7815:179:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3503,
										"nodeType": "Block",
										"src": "8373:165:18",
										"statements": [
											{
												"assignments": [
													3488
												],
												"declarations": [
													{
														"constant": false,
														"id": 3488,
														"mutability": "mutable",
														"name": "positionUnit",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 3503,
														"src": "8383:19:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3487,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "8383:6:18",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 3493,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 3491,
															"name": "_component",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3482,
															"src": "8442:10:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 3489,
															"name": "_setToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3480,
															"src": "8405:9:18",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISetToken_$1867",
																"typeString": "contract ISetToken"
															}
														},
														"id": 3490,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getDefaultPositionRealUnit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1781,
														"src": "8405:36:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_int256_$",
															"typeString": "function (address) view external returns (int256)"
														}
													},
													"id": 3492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8405:48:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8383:70:18"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"argumentTypes": null,
																	"id": 3498,
																	"name": "positionUnit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3488,
																	"src": "8506:12:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"id": 3499,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "toUint256",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1299,
																"src": "8506:22:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$bound_to$_t_int256_$",
																	"typeString": "function (int256) pure returns (uint256)"
																}
															},
															"id": 3500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8506:24:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"argumentTypes": null,
																	"id": 3494,
																	"name": "_setToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3480,
																	"src": "8471:9:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ISetToken_$1867",
																		"typeString": "contract ISetToken"
																	}
																},
																"id": 3495,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "totalSupply",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 542,
																"src": "8471:21:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																	"typeString": "function () view external returns (uint256)"
																}
															},
															"id": 3496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8471:23:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3497,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "preciseMul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3725,
														"src": "8471:34:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 3501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8471:60:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3486,
												"id": 3502,
												"nodeType": "Return",
												"src": "8464:67:18"
											}
										]
									},
									"documentation": {
										"id": 3478,
										"nodeType": "StructuredDocumentation",
										"src": "8000:262:18",
										"text": " Get the total tracked balance - total supply * position unit\n @param _setToken           Address of the SetToken\n @param _component          Address of the component\n @return                    Notional tracked balance"
									},
									"id": 3504,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDefaultTrackedBalance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 3483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3480,
												"mutability": "mutable",
												"name": "_setToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3504,
												"src": "8301:19:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISetToken_$1867",
													"typeString": "contract ISetToken"
												},
												"typeName": {
													"contractScope": null,
													"id": 3479,
													"name": "ISetToken",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1867,
													"src": "8301:9:18",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISetToken_$1867",
														"typeString": "contract ISetToken"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3482,
												"mutability": "mutable",
												"name": "_component",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3504,
												"src": "8322:18:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3481,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8322:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8300:41:18"
									},
									"returnParameters": {
										"id": 3486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3485,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3504,
												"src": "8364:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8364:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8363:9:18"
									},
									"scope": 3611,
									"src": "8267:271:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3576,
										"nodeType": "Block",
										"src": "9348:647:18",
										"statements": [
											{
												"assignments": [
													3523
												],
												"declarations": [
													{
														"constant": false,
														"id": 3523,
														"mutability": "mutable",
														"name": "currentBalance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 3576,
														"src": "9358:22:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3522,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9358:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 3533,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 3530,
																	"name": "_setToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3507,
																	"src": "9420:9:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ISetToken_$1867",
																		"typeString": "contract ISetToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ISetToken_$1867",
																		"typeString": "contract ISetToken"
																	}
																],
																"id": 3529,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9412:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3528,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9412:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 3531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9412:18:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 3525,
																	"name": "_component",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3509,
																	"src": "9390:10:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3524,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 611,
																"src": "9383:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$611_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 3526,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9383:18:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$611",
																"typeString": "contract IERC20"
															}
														},
														"id": 3527,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 550,
														"src": "9383:28:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 3532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9383:48:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9358:73:18"
											},
											{
												"assignments": [
													3535
												],
												"declarations": [
													{
														"constant": false,
														"id": 3535,
														"mutability": "mutable",
														"name": "positionUnit",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 3576,
														"src": "9441:20:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3534,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9441:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 3542,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 3538,
																	"name": "_component",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3509,
																	"src": "9501:10:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 3536,
																	"name": "_setToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3507,
																	"src": "9464:9:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ISetToken_$1867",
																		"typeString": "contract ISetToken"
																	}
																},
																"id": 3537,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "getDefaultPositionRealUnit",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1781,
																"src": "9464:36:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_int256_$",
																	"typeString": "function (address) view external returns (int256)"
																}
															},
															"id": 3539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9464:48:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"id": 3540,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "toUint256",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1299,
														"src": "9464:58:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$bound_to$_t_int256_$",
															"typeString": "function (int256) pure returns (uint256)"
														}
													},
													"id": 3541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9464:60:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9441:83:18"
											},
											{
												"assignments": [
													3544
												],
												"declarations": [
													{
														"constant": false,
														"id": 3544,
														"mutability": "mutable",
														"name": "newTokenUnit",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 3576,
														"src": "9535:20:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3543,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9535:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 3545,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "9535:20:18"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 3546,
														"name": "currentBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3523,
														"src": "9569:14:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 3547,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9586:1:18",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9569:18:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 3563,
													"nodeType": "Block",
													"src": "9819:41:18",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 3561,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 3559,
																	"name": "newTokenUnit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3544,
																	"src": "9833:12:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 3560,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9848:1:18",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "9833:16:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3562,
															"nodeType": "ExpressionStatement",
															"src": "9833:16:18"
														}
													]
												},
												"id": 3564,
												"nodeType": "IfStatement",
												"src": "9565:295:18",
												"trueBody": {
													"id": 3558,
													"nodeType": "Block",
													"src": "9589:224:18",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 3556,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 3549,
																	"name": "newTokenUnit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3544,
																	"src": "9603:12:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 3551,
																			"name": "_setTotalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3511,
																			"src": "9668:15:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 3552,
																			"name": "_componentPreviousBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3513,
																			"src": "9701:25:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 3553,
																			"name": "currentBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3523,
																			"src": "9744:14:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 3554,
																			"name": "positionUnit",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3535,
																			"src": "9776:12:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3550,
																		"name": "calculateDefaultEditPositionUnit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3610,
																		"src": "9618:32:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256,uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 3555,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9618:184:18",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9603:199:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3557,
															"nodeType": "ExpressionStatement",
															"src": "9603:199:18"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 3566,
															"name": "_setToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3507,
															"src": "9890:9:18",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISetToken_$1867",
																"typeString": "contract ISetToken"
															}
														},
														{
															"argumentTypes": null,
															"id": 3567,
															"name": "_component",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3509,
															"src": "9901:10:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 3568,
															"name": "newTokenUnit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3544,
															"src": "9913:12:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_ISetToken_$1867",
																"typeString": "contract ISetToken"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3565,
														"name": "editDefaultPosition",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3311,
														"src": "9870:19:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ISetToken_$1867_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract ISetToken,address,uint256)"
														}
													},
													"id": 3569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9870:56:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3570,
												"nodeType": "ExpressionStatement",
												"src": "9870:56:18"
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"id": 3571,
															"name": "currentBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3523,
															"src": "9945:14:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 3572,
															"name": "positionUnit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3535,
															"src": "9961:12:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 3573,
															"name": "newTokenUnit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3544,
															"src": "9975:12:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 3574,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "9944:44:18",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256)"
													}
												},
												"functionReturnParameters": 3521,
												"id": 3575,
												"nodeType": "Return",
												"src": "9937:51:18"
											}
										]
									},
									"documentation": {
										"id": 3505,
										"nodeType": "StructuredDocumentation",
										"src": "8544:555:18",
										"text": " Calculates the new default position unit and performs the edit with the new unit\n @param _setToken                 Address of the SetToken\n @param _component                Address of the component\n @param _setTotalSupply           Current SetToken supply\n @param _componentPreviousBalance Pre-action component balance\n @return                          Current component balance\n @return                          Previous position unit\n @return                          New position unit"
									},
									"id": 3577,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateAndEditDefaultPosition",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 3514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3507,
												"mutability": "mutable",
												"name": "_setToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3577,
												"src": "9154:19:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISetToken_$1867",
													"typeString": "contract ISetToken"
												},
												"typeName": {
													"contractScope": null,
													"id": 3506,
													"name": "ISetToken",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1867,
													"src": "9154:9:18",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISetToken_$1867",
														"typeString": "contract ISetToken"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3509,
												"mutability": "mutable",
												"name": "_component",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3577,
												"src": "9183:18:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9183:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3511,
												"mutability": "mutable",
												"name": "_setTotalSupply",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3577,
												"src": "9211:23:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9211:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3513,
												"mutability": "mutable",
												"name": "_componentPreviousBalance",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3577,
												"src": "9244:33:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9244:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9144:139:18"
									},
									"returnParameters": {
										"id": 3521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3516,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3577,
												"src": "9317:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9317:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3518,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3577,
												"src": "9326:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9326:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3520,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3577,
												"src": "9335:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3519,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9335:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9316:27:18"
									},
									"scope": 3611,
									"src": "9104:891:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3609,
										"nodeType": "Block",
										"src": "10917:328:18",
										"statements": [
											{
												"assignments": [
													3592
												],
												"declarations": [
													{
														"constant": false,
														"id": 3592,
														"mutability": "mutable",
														"name": "airdroppedAmount",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 3609,
														"src": "11059:24:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3591,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11059:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 3600,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 3597,
																	"name": "_setTokenSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3580,
																	"src": "11136:15:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 3595,
																	"name": "_prePositionUnit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3586,
																	"src": "11108:16:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 3596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "preciseMul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3725,
																"src": "11108:27:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 3598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11108:44:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 3593,
															"name": "_preTotalNotional",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3582,
															"src": "11086:17:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3594,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 203,
														"src": "11086:21:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 3599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11086:67:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11059:94:18"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 3606,
															"name": "_setTokenSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3580,
															"src": "11222:15:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 3603,
																	"name": "airdroppedAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3592,
																	"src": "11193:16:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 3601,
																	"name": "_postTotalNotional",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3584,
																	"src": "11170:18:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 3602,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 203,
																"src": "11170:22:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 3604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11170:40:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3605,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "preciseDiv",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3799,
														"src": "11170:51:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 3607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11170:68:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3590,
												"id": 3608,
												"nodeType": "Return",
												"src": "11163:75:18"
											}
										]
									},
									"documentation": {
										"id": 3578,
										"nodeType": "StructuredDocumentation",
										"src": "10001:665:18",
										"text": " Calculate the new position unit given total notional values pre and post executing an action that changes SetToken state\n The intention is to make updates to the units without accidentally picking up airdropped assets as well.\n @param _setTokenSupply     Supply of SetToken in precise units (10^18)\n @param _preTotalNotional   Total notional amount of component prior to executing action\n @param _postTotalNotional  Total notional amount of component after the executing action\n @param _prePositionUnit    Position unit of SetToken prior to executing action\n @return                    New position unit"
									},
									"id": 3610,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateDefaultEditPositionUnit",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 3587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3580,
												"mutability": "mutable",
												"name": "_setTokenSupply",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3610,
												"src": "10722:23:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10722:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3582,
												"mutability": "mutable",
												"name": "_preTotalNotional",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3610,
												"src": "10755:25:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10755:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3584,
												"mutability": "mutable",
												"name": "_postTotalNotional",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3610,
												"src": "10790:26:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10790:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3586,
												"mutability": "mutable",
												"name": "_prePositionUnit",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3610,
												"src": "10826:24:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10826:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10712:144:18"
									},
									"returnParameters": {
										"id": 3590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3589,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3610,
												"src": "10904:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10904:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10903:9:18"
									},
									"scope": 3611,
									"src": "10671:574:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3612,
							"src": "1374:9873:18"
						}
					],
					"src": "655:10593:18"
				},
				"id": 18
			},
			"contracts/lib/PreciseUnitMath.sol": {
				"ast": {
					"absolutePath": "contracts/lib/PreciseUnitMath.sol",
					"exportedSymbols": {
						"PreciseUnitMath": [
							4120
						]
					},
					"id": 4121,
					"license": "Apache License",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3613,
							"literals": [
								"solidity",
								"0.6",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "655:23:19"
						},
						{
							"id": 3614,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "679:33:19"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/SafeCast.sol",
							"file": "@openzeppelin/contracts/utils/SafeCast.sol",
							"id": 3616,
							"nodeType": "ImportDirective",
							"scope": 4121,
							"sourceUnit": 1474,
							"src": "714:70:19",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 3615,
										"name": "SafeCast",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "723:8:19",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/math/SafeMath.sol",
							"id": 3618,
							"nodeType": "ImportDirective",
							"scope": 4121,
							"sourceUnit": 355,
							"src": "785:69:19",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 3617,
										"name": "SafeMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "794:8:19",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/math/SignedSafeMath.sol",
							"file": "@openzeppelin/contracts/math/SignedSafeMath.sol",
							"id": 3620,
							"nodeType": "ImportDirective",
							"scope": 4121,
							"sourceUnit": 534,
							"src": "855:81:19",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 3619,
										"name": "SignedSafeMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "864:14:19",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3621,
								"nodeType": "StructuredDocumentation",
								"src": "939:383:19",
								"text": " @title PreciseUnitMath\n @author Set Protocol\n Arithmetic for fixed-point numbers with 18 decimals of precision. Some functions taken from\n dYdX's BaseMath library.\n CHANGELOG:\n - 9/21/20: Added safePower function\n - 4/21/21: Added approximatelyEquals function\n - 12/13/21: Added preciseDivCeil (int overloads) function\n - 12/13/21: Added abs function"
							},
							"fullyImplemented": true,
							"id": 4120,
							"linearizedBaseContracts": [
								4120
							],
							"name": "PreciseUnitMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 3624,
									"libraryName": {
										"contractScope": null,
										"id": 3622,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 354,
										"src": "1359:8:19",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$354",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1353:27:19",
									"typeName": {
										"id": 3623,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1372:7:19",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 3627,
									"libraryName": {
										"contractScope": null,
										"id": 3625,
										"name": "SignedSafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 533,
										"src": "1391:14:19",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SignedSafeMath_$533",
											"typeString": "library SignedSafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1385:32:19",
									"typeName": {
										"id": 3626,
										"name": "int256",
										"nodeType": "ElementaryTypeName",
										"src": "1410:6:19",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									}
								},
								{
									"id": 3630,
									"libraryName": {
										"contractScope": null,
										"id": 3628,
										"name": "SafeCast",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1473,
										"src": "1428:8:19",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeCast_$1473",
											"typeString": "library SafeCast"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1422:26:19",
									"typeName": {
										"id": 3629,
										"name": "int256",
										"nodeType": "ElementaryTypeName",
										"src": "1441:6:19",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									}
								},
								{
									"constant": true,
									"id": 3635,
									"mutability": "constant",
									"name": "PRECISE_UNIT",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 4120,
									"src": "1494:49:19",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3631,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1494:7:19",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"id": 3634,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"hexValue": "3130",
											"id": 3632,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1535:2:19",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											},
											"value": "10"
										},
										"nodeType": "BinaryOperation",
										"operator": "**",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "3138",
											"id": 3633,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1541:2:19",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_18_by_1",
												"typeString": "int_const 18"
											},
											"value": "18"
										},
										"src": "1535:8:19",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 3640,
									"mutability": "constant",
									"name": "PRECISE_UNIT_INT",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 4120,
									"src": "1549:52:19",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int256",
										"typeString": "int256"
									},
									"typeName": {
										"id": 3636,
										"name": "int256",
										"nodeType": "ElementaryTypeName",
										"src": "1549:6:19",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"id": 3639,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"hexValue": "3130",
											"id": 3637,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1593:2:19",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											},
											"value": "10"
										},
										"nodeType": "BinaryOperation",
										"operator": "**",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "3138",
											"id": 3638,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1599:2:19",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_18_by_1",
												"typeString": "int_const 18"
											},
											"value": "18"
										},
										"src": "1593:8:19",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 3647,
									"mutability": "constant",
									"name": "MAX_UINT_256",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 4120,
									"src": "1642:58:19",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3641,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1642:7:19",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"expression": {
											"argumentTypes": null,
											"arguments": [
												{
													"argumentTypes": null,
													"id": 3644,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "ElementaryTypeNameExpression",
													"src": "1688:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_type$_t_uint256_$",
														"typeString": "type(uint256)"
													},
													"typeName": {
														"id": 3643,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1688:7:19",
														"typeDescriptions": {
															"typeIdentifier": null,
															"typeString": null
														}
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_type$_t_uint256_$",
														"typeString": "type(uint256)"
													}
												],
												"id": 3642,
												"name": "type",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": -27,
												"src": "1683:4:19",
												"typeDescriptions": {
													"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
													"typeString": "function () pure"
												}
											},
											"id": 3645,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "functionCall",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "1683:13:19",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_magic_meta_type_t_uint256",
												"typeString": "type(uint256)"
											}
										},
										"id": 3646,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"memberName": "max",
										"nodeType": "MemberAccess",
										"referencedDeclaration": null,
										"src": "1683:17:19",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 3654,
									"mutability": "constant",
									"name": "MAX_INT_256",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 4120,
									"src": "1746:55:19",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int256",
										"typeString": "int256"
									},
									"typeName": {
										"id": 3648,
										"name": "int256",
										"nodeType": "ElementaryTypeName",
										"src": "1746:6:19",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									},
									"value": {
										"argumentTypes": null,
										"expression": {
											"argumentTypes": null,
											"arguments": [
												{
													"argumentTypes": null,
													"id": 3651,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "ElementaryTypeNameExpression",
													"src": "1790:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_type$_t_int256_$",
														"typeString": "type(int256)"
													},
													"typeName": {
														"id": 3650,
														"name": "int256",
														"nodeType": "ElementaryTypeName",
														"src": "1790:6:19",
														"typeDescriptions": {
															"typeIdentifier": null,
															"typeString": null
														}
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_type$_t_int256_$",
														"typeString": "type(int256)"
													}
												],
												"id": 3649,
												"name": "type",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": -27,
												"src": "1785:4:19",
												"typeDescriptions": {
													"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
													"typeString": "function () pure"
												}
											},
											"id": 3652,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "functionCall",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "1785:12:19",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_magic_meta_type_t_int256",
												"typeString": "type(int256)"
											}
										},
										"id": 3653,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"memberName": "max",
										"nodeType": "MemberAccess",
										"referencedDeclaration": null,
										"src": "1785:16:19",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 3661,
									"mutability": "constant",
									"name": "MIN_INT_256",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 4120,
									"src": "1807:55:19",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int256",
										"typeString": "int256"
									},
									"typeName": {
										"id": 3655,
										"name": "int256",
										"nodeType": "ElementaryTypeName",
										"src": "1807:6:19",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									},
									"value": {
										"argumentTypes": null,
										"expression": {
											"argumentTypes": null,
											"arguments": [
												{
													"argumentTypes": null,
													"id": 3658,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "ElementaryTypeNameExpression",
													"src": "1851:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_type$_t_int256_$",
														"typeString": "type(int256)"
													},
													"typeName": {
														"id": 3657,
														"name": "int256",
														"nodeType": "ElementaryTypeName",
														"src": "1851:6:19",
														"typeDescriptions": {
															"typeIdentifier": null,
															"typeString": null
														}
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_type$_t_int256_$",
														"typeString": "type(int256)"
													}
												],
												"id": 3656,
												"name": "type",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": -27,
												"src": "1846:4:19",
												"typeDescriptions": {
													"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
													"typeString": "function () pure"
												}
											},
											"id": 3659,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "functionCall",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "1846:12:19",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_magic_meta_type_t_int256",
												"typeString": "type(int256)"
											}
										},
										"id": 3660,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"memberName": "min",
										"nodeType": "MemberAccess",
										"referencedDeclaration": null,
										"src": "1846:16:19",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3669,
										"nodeType": "Block",
										"src": "2023:36:19",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 3667,
													"name": "PRECISE_UNIT",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3635,
													"src": "2040:12:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3666,
												"id": 3668,
												"nodeType": "Return",
												"src": "2033:19:19"
											}
										]
									},
									"documentation": {
										"id": 3662,
										"nodeType": "StructuredDocumentation",
										"src": "1869:94:19",
										"text": " @dev Getter function since constants can't be read directly from libraries."
									},
									"id": 3670,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "preciseUnit",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 3663,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:2:19"
									},
									"returnParameters": {
										"id": 3666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3665,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3670,
												"src": "2014:7:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3664,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2014:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2013:9:19"
									},
									"scope": 4120,
									"src": "1968:91:19",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3678,
										"nodeType": "Block",
										"src": "2221:40:19",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 3676,
													"name": "PRECISE_UNIT_INT",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3640,
													"src": "2238:16:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3675,
												"id": 3677,
												"nodeType": "Return",
												"src": "2231:23:19"
											}
										]
									},
									"documentation": {
										"id": 3671,
										"nodeType": "StructuredDocumentation",
										"src": "2065:94:19",
										"text": " @dev Getter function since constants can't be read directly from libraries."
									},
									"id": 3679,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "preciseUnitInt",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 3672,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2187:2:19"
									},
									"returnParameters": {
										"id": 3675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3674,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3679,
												"src": "2213:6:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3673,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "2213:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2212:8:19"
									},
									"scope": 4120,
									"src": "2164:97:19",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3687,
										"nodeType": "Block",
										"src": "2420:36:19",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 3685,
													"name": "MAX_UINT_256",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3647,
													"src": "2437:12:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3684,
												"id": 3686,
												"nodeType": "Return",
												"src": "2430:19:19"
											}
										]
									},
									"documentation": {
										"id": 3680,
										"nodeType": "StructuredDocumentation",
										"src": "2267:94:19",
										"text": " @dev Getter function since constants can't be read directly from libraries."
									},
									"id": 3688,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "maxUint256",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 3681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2385:2:19"
									},
									"returnParameters": {
										"id": 3684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3683,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3688,
												"src": "2411:7:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3682,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2411:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2410:9:19"
									},
									"scope": 4120,
									"src": "2366:90:19",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3696,
										"nodeType": "Block",
										"src": "2613:35:19",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 3694,
													"name": "MAX_INT_256",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3654,
													"src": "2630:11:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3693,
												"id": 3695,
												"nodeType": "Return",
												"src": "2623:18:19"
											}
										]
									},
									"documentation": {
										"id": 3689,
										"nodeType": "StructuredDocumentation",
										"src": "2462:94:19",
										"text": " @dev Getter function since constants can't be read directly from libraries."
									},
									"id": 3697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "maxInt256",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 3690,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2579:2:19"
									},
									"returnParameters": {
										"id": 3693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3692,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3697,
												"src": "2605:6:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3691,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "2605:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2604:8:19"
									},
									"scope": 4120,
									"src": "2561:87:19",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3705,
										"nodeType": "Block",
										"src": "2805:35:19",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 3703,
													"name": "MIN_INT_256",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3661,
													"src": "2822:11:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3702,
												"id": 3704,
												"nodeType": "Return",
												"src": "2815:18:19"
											}
										]
									},
									"documentation": {
										"id": 3698,
										"nodeType": "StructuredDocumentation",
										"src": "2654:94:19",
										"text": " @dev Getter function since constants can't be read directly from libraries."
									},
									"id": 3706,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "minInt256",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 3699,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2771:2:19"
									},
									"returnParameters": {
										"id": 3702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3701,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3706,
												"src": "2797:6:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3700,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "2797:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2796:8:19"
									},
									"scope": 4120,
									"src": "2753:87:19",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3724,
										"nodeType": "Block",
										"src": "3100:50:19",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 3721,
															"name": "PRECISE_UNIT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3635,
															"src": "3130:12:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 3718,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3711,
																	"src": "3123:1:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 3716,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3709,
																	"src": "3117:1:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 3717,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 237,
																"src": "3117:5:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 3719,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3117:8:19",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3720,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 259,
														"src": "3117:12:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 3722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3117:26:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3715,
												"id": 3723,
												"nodeType": "Return",
												"src": "3110:33:19"
											}
										]
									},
									"documentation": {
										"id": 3707,
										"nodeType": "StructuredDocumentation",
										"src": "2846:175:19",
										"text": " @dev Multiplies value a by value b (result is rounded down). It's assumed that the value b is the significand\n of a number with 18 decimals precision."
									},
									"id": 3725,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "preciseMul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 3712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3709,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3725,
												"src": "3046:9:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3046:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3711,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3725,
												"src": "3057:9:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3057:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3045:22:19"
									},
									"returnParameters": {
										"id": 3715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3714,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3725,
												"src": "3091:7:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3713,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3091:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3090:9:19"
									},
									"scope": 4120,
									"src": "3026:124:19",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3743,
										"nodeType": "Block",
										"src": "3415:54:19",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 3740,
															"name": "PRECISE_UNIT_INT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3640,
															"src": "3445:16:19",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 3737,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3730,
																	"src": "3438:1:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 3735,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3728,
																	"src": "3432:1:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"id": 3736,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 412,
																"src": "3432:5:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$",
																	"typeString": "function (int256,int256) pure returns (int256)"
																}
															},
															"id": 3738,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3432:8:19",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"id": 3739,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 452,
														"src": "3432:12:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$",
															"typeString": "function (int256,int256) pure returns (int256)"
														}
													},
													"id": 3741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3432:30:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3734,
												"id": 3742,
												"nodeType": "Return",
												"src": "3425:37:19"
											}
										]
									},
									"documentation": {
										"id": 3726,
										"nodeType": "StructuredDocumentation",
										"src": "3156:183:19",
										"text": " @dev Multiplies value a by value b (result is rounded towards zero). It's assumed that the value b is the\n significand of a number with 18 decimals precision."
									},
									"id": 3744,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "preciseMul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 3731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3728,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3744,
												"src": "3364:8:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3727,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3730,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3744,
												"src": "3374:8:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3729,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3374:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3363:20:19"
									},
									"returnParameters": {
										"id": 3734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3733,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3744,
												"src": "3407:6:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3732,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3407:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3406:8:19"
									},
									"scope": 4120,
									"src": "3344:125:19",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3779,
										"nodeType": "Block",
										"src": "3731:128:19",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 3760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3756,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 3754,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3747,
															"src": "3745:1:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 3755,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3750:1:19",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3745:6:19",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3759,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 3757,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3749,
															"src": "3755:1:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 3758,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3760:1:19",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3755:6:19",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3745:16:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 3764,
												"nodeType": "IfStatement",
												"src": "3741:55:19",
												"trueBody": {
													"id": 3763,
													"nodeType": "Block",
													"src": "3763:33:19",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 3761,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3784:1:19",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 3753,
															"id": 3762,
															"nodeType": "Return",
															"src": "3777:8:19"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "31",
															"id": 3776,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3850:1:19",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 3773,
																	"name": "PRECISE_UNIT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3635,
																	"src": "3832:12:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "31",
																			"id": 3770,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3825:1:19",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 3767,
																					"name": "b",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3749,
																					"src": "3818:1:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 3765,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3747,
																					"src": "3812:1:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 3766,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 237,
																				"src": "3812:5:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 3768,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3812:8:19",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3769,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 203,
																		"src": "3812:12:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 3771,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3812:15:19",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 3772,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 259,
																"src": "3812:19:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 3774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3812:33:19",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3775,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 181,
														"src": "3812:37:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 3777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3812:40:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3753,
												"id": 3778,
												"nodeType": "Return",
												"src": "3805:47:19"
											}
										]
									},
									"documentation": {
										"id": 3745,
										"nodeType": "StructuredDocumentation",
										"src": "3475:173:19",
										"text": " @dev Multiplies value a by value b (result is rounded up). It's assumed that the value b is the significand\n of a number with 18 decimals precision."
									},
									"id": 3780,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "preciseMulCeil",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 3750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3747,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3780,
												"src": "3677:9:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3746,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3677:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3749,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3780,
												"src": "3688:9:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3748,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3688:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3676:22:19"
									},
									"returnParameters": {
										"id": 3753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3752,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3780,
												"src": "3722:7:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3722:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3721:9:19"
									},
									"scope": 4120,
									"src": "3653:206:19",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3798,
										"nodeType": "Block",
										"src": "4020:50:19",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 3795,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3785,
															"src": "4061:1:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 3792,
																	"name": "PRECISE_UNIT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3635,
																	"src": "4043:12:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 3790,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3783,
																	"src": "4037:1:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 3791,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 237,
																"src": "4037:5:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 3793,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4037:19:19",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3794,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 259,
														"src": "4037:23:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 3796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4037:26:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3789,
												"id": 3797,
												"nodeType": "Return",
												"src": "4030:33:19"
											}
										]
									},
									"documentation": {
										"id": 3781,
										"nodeType": "StructuredDocumentation",
										"src": "3865:76:19",
										"text": " @dev Divides value a by value b (result is rounded down)."
									},
									"id": 3799,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "preciseDiv",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 3786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3783,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3799,
												"src": "3966:9:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3782,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3966:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3785,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3799,
												"src": "3977:9:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3977:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3965:22:19"
									},
									"returnParameters": {
										"id": 3789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3788,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3799,
												"src": "4011:7:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4011:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4010:9:19"
									},
									"scope": 4120,
									"src": "3946:124:19",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3817,
										"nodeType": "Block",
										"src": "4234:54:19",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 3814,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3804,
															"src": "4279:1:19",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 3811,
																	"name": "PRECISE_UNIT_INT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3640,
																	"src": "4257:16:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 3809,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3802,
																	"src": "4251:1:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"id": 3810,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 412,
																"src": "4251:5:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$",
																	"typeString": "function (int256,int256) pure returns (int256)"
																}
															},
															"id": 3812,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4251:23:19",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"id": 3813,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 452,
														"src": "4251:27:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$",
															"typeString": "function (int256,int256) pure returns (int256)"
														}
													},
													"id": 3815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4251:30:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3808,
												"id": 3816,
												"nodeType": "Return",
												"src": "4244:37:19"
											}
										]
									},
									"documentation": {
										"id": 3800,
										"nodeType": "StructuredDocumentation",
										"src": "4077:81:19",
										"text": " @dev Divides value a by value b (result is rounded towards 0)."
									},
									"id": 3818,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "preciseDiv",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 3805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3802,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3818,
												"src": "4183:8:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3801,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4183:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3804,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3818,
												"src": "4193:8:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3803,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4193:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4182:20:19"
									},
									"returnParameters": {
										"id": 3808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3807,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3818,
												"src": "4226:6:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3806,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4226:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4225:8:19"
									},
									"scope": 4120,
									"src": "4163:125:19",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3854,
										"nodeType": "Block",
										"src": "4466:122:19",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3831,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 3829,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3823,
																"src": "4484:1:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 3830,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4489:1:19",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4484:6:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "43616e74206469766964652062792030",
															"id": 3832,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4492:18:19",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fed161350d7ed4af3658c640f591e5bd305a046c539743836d1be4b0cb839850",
																"typeString": "literal_string \"Cant divide by 0\""
															},
															"value": "Cant divide by 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fed161350d7ed4af3658c640f591e5bd305a046c539743836d1be4b0cb839850",
																"typeString": "literal_string \"Cant divide by 0\""
															}
														],
														"id": 3828,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4476:7:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4476:35:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3834,
												"nodeType": "ExpressionStatement",
												"src": "4476:35:19"
											},
											{
												"expression": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3837,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 3835,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3821,
															"src": "4529:1:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 3836,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4533:1:19",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4529:5:19",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 3851,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4580:1:19",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"id": 3852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "4529:52:19",
													"trueExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "31",
																"id": 3849,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4575:1:19",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																}
															],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 3846,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3823,
																		"src": "4568:1:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"hexValue": "31",
																				"id": 3843,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4561:1:19",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 3840,
																						"name": "PRECISE_UNIT",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3635,
																						"src": "4543:12:19",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"id": 3838,
																						"name": "a",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3821,
																						"src": "4537:1:19",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 3839,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 237,
																					"src": "4537:5:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 3841,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4537:19:19",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 3842,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sub",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 203,
																			"src": "4537:23:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 3844,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4537:26:19",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3845,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 259,
																	"src": "4537:30:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 3847,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4537:33:19",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 181,
															"src": "4537:37:19",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 3850,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4537:40:19",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3827,
												"id": 3853,
												"nodeType": "Return",
												"src": "4522:59:19"
											}
										]
									},
									"documentation": {
										"id": 3819,
										"nodeType": "StructuredDocumentation",
										"src": "4294:89:19",
										"text": " @dev Divides value a by value b (result is rounded up or away from 0)."
									},
									"id": 3855,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "preciseDivCeil",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 3824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3821,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3855,
												"src": "4412:9:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3823,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3855,
												"src": "4423:9:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3822,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4411:22:19"
									},
									"returnParameters": {
										"id": 3827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3826,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3855,
												"src": "4457:7:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3825,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4456:9:19"
									},
									"scope": 4120,
									"src": "4388:200:19",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3907,
										"nodeType": "Block",
										"src": "4857:322:19",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 3868,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 3866,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3860,
																"src": "4875:1:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 3867,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4880:1:19",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4875:6:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "43616e74206469766964652062792030",
															"id": 3869,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4883:18:19",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fed161350d7ed4af3658c640f591e5bd305a046c539743836d1be4b0cb839850",
																"typeString": "literal_string \"Cant divide by 0\""
															},
															"value": "Cant divide by 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fed161350d7ed4af3658c640f591e5bd305a046c539743836d1be4b0cb839850",
																"typeString": "literal_string \"Cant divide by 0\""
															}
														],
														"id": 3865,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4867:7:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4867:35:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3871,
												"nodeType": "ExpressionStatement",
												"src": "4867:35:19"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 3877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 3872,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3858,
														"src": "4921:1:19",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 3875,
																"name": "PRECISE_UNIT_INT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3640,
																"src": "4931:16:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 3873,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3858,
																"src": "4925:1:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"id": 3874,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "mul",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 412,
															"src": "4925:5:19",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$",
																"typeString": "function (int256,int256) pure returns (int256)"
															}
														},
														"id": 3876,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4925:23:19",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "4921:27:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 3878,
												"nodeType": "ExpressionStatement",
												"src": "4921:27:19"
											},
											{
												"assignments": [
													3880
												],
												"declarations": [
													{
														"constant": false,
														"id": 3880,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 3907,
														"src": "4958:8:19",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3879,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "4958:6:19",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 3885,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 3883,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3860,
															"src": "4975:1:19",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 3881,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3858,
															"src": "4969:1:19",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"id": 3882,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 452,
														"src": "4969:5:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$",
															"typeString": "function (int256,int256) pure returns (int256)"
														}
													},
													"id": 3884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4969:8:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4958:19:19"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3888,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 3886,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3858,
															"src": "4992:1:19",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"argumentTypes": null,
															"id": 3887,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3860,
															"src": "4996:1:19",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "4992:5:19",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 3889,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5001:1:19",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4992:10:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 3904,
												"nodeType": "IfStatement",
												"src": "4988:166:19",
												"trueBody": {
													"id": 3903,
													"nodeType": "Block",
													"src": "5004:150:19",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"condition": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3895,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 3893,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 3891,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3858,
																					"src": "5121:1:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "^",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 3892,
																					"name": "b",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3860,
																					"src": "5125:1:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"src": "5121:5:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 3894,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5129:1:19",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "5121:9:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 3896,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "5120:11:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"argumentTypes": null,
																	"id": 3900,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "--",
																	"prefix": true,
																	"src": "5140:3:19",
																	"subExpression": {
																		"argumentTypes": null,
																		"id": 3899,
																		"name": "c",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3880,
																		"src": "5142:1:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"id": 3901,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "5120:23:19",
																"trueExpression": {
																	"argumentTypes": null,
																	"id": 3898,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": true,
																	"src": "5134:3:19",
																	"subExpression": {
																		"argumentTypes": null,
																		"id": 3897,
																		"name": "c",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3880,
																		"src": "5136:1:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"id": 3902,
															"nodeType": "ExpressionStatement",
															"src": "5120:23:19"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 3905,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3880,
													"src": "5171:1:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3864,
												"id": 3906,
												"nodeType": "Return",
												"src": "5164:8:19"
											}
										]
									},
									"documentation": {
										"id": 3856,
										"nodeType": "StructuredDocumentation",
										"src": "4594:183:19",
										"text": " @dev Divides value a by value b (result is rounded up or away from 0). When `a` is 0, 0 is\n returned. When `b` is 0, method reverts with divide-by-zero error."
									},
									"id": 3908,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "preciseDivCeil",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 3861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3858,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3908,
												"src": "4806:8:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3857,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4806:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3860,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3908,
												"src": "4816:8:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3859,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4816:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4805:20:19"
									},
									"returnParameters": {
										"id": 3864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3863,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3908,
												"src": "4849:6:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3862,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4849:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4848:8:19"
									},
									"scope": 4120,
									"src": "4782:397:19",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3963,
										"nodeType": "Block",
										"src": "5387:248:19",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 3921,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 3919,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3913,
																"src": "5405:1:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 3920,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5410:1:19",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5405:6:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "43616e74206469766964652062792030",
															"id": 3922,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5413:18:19",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fed161350d7ed4af3658c640f591e5bd305a046c539743836d1be4b0cb839850",
																"typeString": "literal_string \"Cant divide by 0\""
															},
															"value": "Cant divide by 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fed161350d7ed4af3658c640f591e5bd305a046c539743836d1be4b0cb839850",
																"typeString": "literal_string \"Cant divide by 0\""
															}
														],
														"id": 3918,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5397:7:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5397:35:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3924,
												"nodeType": "ExpressionStatement",
												"src": "5397:35:19"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3933,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3928,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 3926,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3911,
																	"src": "5450:1:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 3927,
																	"name": "MIN_INT_256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3661,
																	"src": "5455:11:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "5450:16:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3932,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 3929,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3913,
																	"src": "5470:1:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 3931,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "-",
																	"prefix": true,
																	"src": "5475:2:19",
																	"subExpression": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 3930,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5476:1:19",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_minus_1_by_1",
																		"typeString": "int_const -1"
																	}
																},
																"src": "5470:7:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5450:27:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "496e76616c696420696e707574",
															"id": 3934,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5479:15:19",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_af39b50065ba9648c753f781fa674704d13ce8309cf446a262799d7aceba8e5b",
																"typeString": "literal_string \"Invalid input\""
															},
															"value": "Invalid input"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_af39b50065ba9648c753f781fa674704d13ce8309cf446a262799d7aceba8e5b",
																"typeString": "literal_string \"Invalid input\""
															}
														],
														"id": 3925,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5442:7:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5442:53:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3936,
												"nodeType": "ExpressionStatement",
												"src": "5442:53:19"
											},
											{
												"assignments": [
													3938
												],
												"declarations": [
													{
														"constant": false,
														"id": 3938,
														"mutability": "mutable",
														"name": "result",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 3963,
														"src": "5506:13:19",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3937,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "5506:6:19",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 3943,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 3941,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3913,
															"src": "5528:1:19",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 3939,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3911,
															"src": "5522:1:19",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"id": 3940,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 452,
														"src": "5522:5:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$",
															"typeString": "function (int256,int256) pure returns (int256)"
														}
													},
													"id": 3942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5522:8:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5506:24:19"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 3954,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3948,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 3946,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 3944,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3911,
																"src": "5544:1:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"argumentTypes": null,
																"id": 3945,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3913,
																"src": "5548:1:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "5544:5:19",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 3947,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5552:1:19",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5544:9:19",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3953,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 3951,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 3949,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3911,
																"src": "5557:1:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"argumentTypes": null,
																"id": 3950,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3913,
																"src": "5561:1:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "5557:5:19",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 3952,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5566:1:19",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5557:10:19",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5544:23:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 3960,
												"nodeType": "IfStatement",
												"src": "5540:65:19",
												"trueBody": {
													"id": 3959,
													"nodeType": "Block",
													"src": "5569:36:19",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 3957,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 3955,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3938,
																	"src": "5583:6:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 3956,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5593:1:19",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "5583:11:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"id": 3958,
															"nodeType": "ExpressionStatement",
															"src": "5583:11:19"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 3961,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3938,
													"src": "5622:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3917,
												"id": 3962,
												"nodeType": "Return",
												"src": "5615:13:19"
											}
										]
									},
									"documentation": {
										"id": 3909,
										"nodeType": "StructuredDocumentation",
										"src": "5185:129:19",
										"text": " @dev Divides value a by value b (result is rounded down - positive numbers toward 0 and negative away from 0)."
									},
									"id": 3964,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "divDown",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 3914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3911,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3964,
												"src": "5336:8:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3910,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "5336:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3913,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3964,
												"src": "5346:8:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3912,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "5346:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5335:20:19"
									},
									"returnParameters": {
										"id": 3917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3916,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3964,
												"src": "5379:6:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3915,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "5379:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5378:8:19"
									},
									"scope": 4120,
									"src": "5319:316:19",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3982,
										"nodeType": "Block",
										"src": "5922:59:19",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 3977,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3969,
																	"src": "5953:1:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 3975,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3967,
																	"src": "5947:1:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"id": 3976,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 412,
																"src": "5947:5:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$",
																	"typeString": "function (int256,int256) pure returns (int256)"
																}
															},
															"id": 3978,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5947:8:19",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"argumentTypes": null,
															"id": 3979,
															"name": "PRECISE_UNIT_INT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3640,
															"src": "5957:16:19",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 3974,
														"name": "divDown",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3964,
														"src": "5939:7:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
															"typeString": "function (int256,int256) pure returns (int256)"
														}
													},
													"id": 3980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5939:35:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3973,
												"id": 3981,
												"nodeType": "Return",
												"src": "5932:42:19"
											}
										]
									},
									"documentation": {
										"id": 3965,
										"nodeType": "StructuredDocumentation",
										"src": "5641:193:19",
										"text": " @dev Multiplies value a by value b where rounding is towards the lesser number.\n (positive values are rounded towards zero and negative values are rounded away from 0)."
									},
									"id": 3983,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "conservativePreciseMul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 3970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3967,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3983,
												"src": "5871:8:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3966,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "5871:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3969,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3983,
												"src": "5881:8:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3968,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "5881:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5870:20:19"
									},
									"returnParameters": {
										"id": 3973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3972,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3983,
												"src": "5914:6:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3971,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "5914:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5913:8:19"
									},
									"scope": 4120,
									"src": "5839:142:19",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4001,
										"nodeType": "Block",
										"src": "6265:59:19",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 3996,
																	"name": "PRECISE_UNIT_INT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3640,
																	"src": "6296:16:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 3994,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3986,
																	"src": "6290:1:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"id": 3995,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 412,
																"src": "6290:5:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$",
																	"typeString": "function (int256,int256) pure returns (int256)"
																}
															},
															"id": 3997,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6290:23:19",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"argumentTypes": null,
															"id": 3998,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3988,
															"src": "6315:1:19",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 3993,
														"name": "divDown",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3964,
														"src": "6282:7:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
															"typeString": "function (int256,int256) pure returns (int256)"
														}
													},
													"id": 3999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6282:35:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3992,
												"id": 4000,
												"nodeType": "Return",
												"src": "6275:42:19"
											}
										]
									},
									"documentation": {
										"id": 3984,
										"nodeType": "StructuredDocumentation",
										"src": "5987:190:19",
										"text": " @dev Divides value a by value b where rounding is towards the lesser number.\n (positive values are rounded towards zero and negative values are rounded away from 0)."
									},
									"id": 4002,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "conservativePreciseDiv",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 3989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3986,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 4002,
												"src": "6214:8:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3985,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "6214:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3988,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 4002,
												"src": "6224:8:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3987,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "6224:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6213:20:19"
									},
									"returnParameters": {
										"id": 3992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3991,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 4002,
												"src": "6257:6:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3990,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "6257:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6256:8:19"
									},
									"scope": 4120,
									"src": "6182:142:19",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4048,
										"nodeType": "Block",
										"src": "6543:317:19",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4015,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 4013,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4005,
																"src": "6561:1:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 4014,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6565:1:19",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6561:5:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "56616c7565206d75737420626520706f736974697665",
															"id": 4016,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6568:24:19",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6b17df485e9fb24391f0a5f6e971ff9213a414eba780dcd7eaae085293f2e1e6",
																"typeString": "literal_string \"Value must be positive\""
															},
															"value": "Value must be positive"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6b17df485e9fb24391f0a5f6e971ff9213a414eba780dcd7eaae085293f2e1e6",
																"typeString": "literal_string \"Value must be positive\""
															}
														],
														"id": 4012,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6553:7:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6553:40:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4018,
												"nodeType": "ExpressionStatement",
												"src": "6553:40:19"
											},
											{
												"assignments": [
													4020
												],
												"declarations": [
													{
														"constant": false,
														"id": 4020,
														"mutability": "mutable",
														"name": "result",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 4048,
														"src": "6604:14:19",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 4019,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6604:7:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 4022,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "31",
													"id": 4021,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6621:1:19",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6604:18:19"
											},
											{
												"body": {
													"id": 4044,
													"nodeType": "Block",
													"src": "6665:165:19",
													"statements": [
														{
															"assignments": [
																4034
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 4034,
																	"mutability": "mutable",
																	"name": "previousResult",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 4044,
																	"src": "6679:22:19",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 4033,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6679:7:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 4036,
															"initialValue": {
																"argumentTypes": null,
																"id": 4035,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4020,
																"src": "6704:6:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6679:31:19"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 4042,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 4037,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4020,
																	"src": "6789:6:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 4040,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4005,
																			"src": "6817:1:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 4038,
																			"name": "previousResult",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4034,
																			"src": "6798:14:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 4039,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 237,
																		"src": "6798:18:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 4041,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6798:21:19",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6789:30:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 4043,
															"nodeType": "ExpressionStatement",
															"src": "6789:30:19"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 4027,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4024,
														"src": "6652:1:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 4028,
														"name": "pow",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4007,
														"src": "6656:3:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6652:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4045,
												"initializationExpression": {
													"assignments": [
														4024
													],
													"declarations": [
														{
															"constant": false,
															"id": 4024,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 4045,
															"src": "6637:9:19",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 4023,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6637:7:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 4026,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 4025,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6649:1:19",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6637:13:19"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 4031,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "6661:3:19",
														"subExpression": {
															"argumentTypes": null,
															"id": 4030,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4024,
															"src": "6661:1:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 4032,
													"nodeType": "ExpressionStatement",
													"src": "6661:3:19"
												},
												"nodeType": "ForStatement",
												"src": "6632:198:19"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 4046,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4020,
													"src": "6847:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 4011,
												"id": 4047,
												"nodeType": "Return",
												"src": "6840:13:19"
											}
										]
									},
									"documentation": {
										"id": 4003,
										"nodeType": "StructuredDocumentation",
										"src": "6330:83:19",
										"text": " @dev Performs the power on a specified value, reverts on overflow."
									},
									"id": 4049,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safePower",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 4008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4005,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 4049,
												"src": "6446:9:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4004,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6446:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4007,
												"mutability": "mutable",
												"name": "pow",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 4049,
												"src": "6465:11:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4006,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6465:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6436:46:19"
									},
									"returnParameters": {
										"id": 4011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4010,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 4049,
												"src": "6530:7:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4009,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6530:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6529:9:19"
									},
									"scope": 4120,
									"src": "6418:442:19",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4075,
										"nodeType": "Block",
										"src": "7043:62:19",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 4073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 4066,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 4061,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4052,
															"src": "7060:1:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 4064,
																	"name": "range",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4056,
																	"src": "7071:5:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 4062,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4054,
																	"src": "7065:1:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 4063,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 181,
																"src": "7065:5:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 4065,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7065:12:19",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7060:17:19",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 4072,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 4067,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4052,
															"src": "7081:1:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 4070,
																	"name": "range",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4056,
																	"src": "7092:5:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 4068,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4054,
																	"src": "7086:1:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 4069,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 203,
																"src": "7086:5:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 4071,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7086:12:19",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7081:17:19",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "7060:38:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 4060,
												"id": 4074,
												"nodeType": "Return",
												"src": "7053:45:19"
											}
										]
									},
									"documentation": {
										"id": 4050,
										"nodeType": "StructuredDocumentation",
										"src": "6866:77:19",
										"text": " @dev Returns true if a =~ b within range, false otherwise."
									},
									"id": 4076,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approximatelyEquals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 4057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4052,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 4076,
												"src": "6977:9:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4051,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6977:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4054,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 4076,
												"src": "6988:9:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6988:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4056,
												"mutability": "mutable",
												"name": "range",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 4076,
												"src": "6999:13:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4055,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6999:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6976:37:19"
									},
									"returnParameters": {
										"id": 4060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4059,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 4076,
												"src": "7037:4:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 4058,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7037:4:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7036:6:19"
									},
									"scope": 4120,
									"src": "6948:157:19",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4099,
										"nodeType": "Block",
										"src": "7240:70:19",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 4086,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 4084,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4079,
															"src": "7257:1:19",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 4085,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7262:1:19",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "7257:6:19",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 4093,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "7288:2:19",
																		"subExpression": {
																			"argumentTypes": null,
																			"hexValue": "31",
																			"id": 4092,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7289:1:19",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_minus_1_by_1",
																			"typeString": "int_const -1"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_minus_1_by_1",
																			"typeString": "int_const -1"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 4090,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4079,
																		"src": "7282:1:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 4091,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 412,
																	"src": "7282:5:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$",
																		"typeString": "function (int256,int256) pure returns (int256)"
																	}
																},
																"id": 4094,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7282:9:19",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"id": 4095,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "toUint256",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1299,
															"src": "7282:19:19",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$bound_to$_t_int256_$",
																"typeString": "function (int256) pure returns (uint256)"
															}
														},
														"id": 4096,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7282:21:19",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 4097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "7257:46:19",
													"trueExpression": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"argumentTypes": null,
																"id": 4087,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4079,
																"src": "7266:1:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"id": 4088,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "toUint256",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1299,
															"src": "7266:11:19",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$bound_to$_t_int256_$",
																"typeString": "function (int256) pure returns (uint256)"
															}
														},
														"id": 4089,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7266:13:19",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 4083,
												"id": 4098,
												"nodeType": "Return",
												"src": "7250:53:19"
											}
										]
									},
									"documentation": {
										"id": 4077,
										"nodeType": "StructuredDocumentation",
										"src": "7111:72:19",
										"text": " Returns the absolute value of int256 `a` as a uint256"
									},
									"id": 4100,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 4080,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4079,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 4100,
												"src": "7201:8:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4078,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "7201:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7200:10:19"
									},
									"returnParameters": {
										"id": 4083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4082,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 4100,
												"src": "7234:4:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4081,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7234:4:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7233:6:19"
									},
									"scope": 4120,
									"src": "7188:122:19",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4118,
										"nodeType": "Block",
										"src": "7419:82:19",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 4111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 4109,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4103,
																"src": "7437:1:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"id": 4110,
																"name": "MIN_INT_256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3661,
																"src": "7441:11:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "7437:15:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "496e76657273696f6e206f766572666c6f77",
															"id": 4112,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7454:20:19",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dda5a0f9ae005fbe58c6069fe83fb5ddf2c879da6b9018975c0a849bc0c47137",
																"typeString": "literal_string \"Inversion overflow\""
															},
															"value": "Inversion overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dda5a0f9ae005fbe58c6069fe83fb5ddf2c879da6b9018975c0a849bc0c47137",
																"typeString": "literal_string \"Inversion overflow\""
															}
														],
														"id": 4108,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7429:7:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7429:46:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4114,
												"nodeType": "ExpressionStatement",
												"src": "7429:46:19"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 4116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "-",
													"prefix": true,
													"src": "7492:2:19",
													"subExpression": {
														"argumentTypes": null,
														"id": 4115,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4103,
														"src": "7493:1:19",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 4107,
												"id": 4117,
												"nodeType": "Return",
												"src": "7485:9:19"
											}
										]
									},
									"documentation": {
										"id": 4101,
										"nodeType": "StructuredDocumentation",
										"src": "7316:44:19",
										"text": " Returns the negation of a"
									},
									"id": 4119,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "neg",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 4104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4103,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 4119,
												"src": "7378:8:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4102,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "7378:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7377:10:19"
									},
									"returnParameters": {
										"id": 4107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4106,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 4119,
												"src": "7411:6:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4105,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "7411:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7410:8:19"
									},
									"scope": 4120,
									"src": "7365:136:19",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 4121,
							"src": "1323:6180:19"
						}
					],
					"src": "655:6849:19"
				},
				"id": 19
			},
			"contracts/lib/ResourceIdentifier.sol": {
				"ast": {
					"absolutePath": "contracts/lib/ResourceIdentifier.sol",
					"exportedSymbols": {
						"ResourceIdentifier": [
							4189
						]
					},
					"id": 4190,
					"license": "Apache License",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 4122,
							"literals": [
								"solidity",
								"0.6",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "655:23:20"
						},
						{
							"absolutePath": "contracts/interfaces/IController.sol",
							"file": "../interfaces/IController.sol",
							"id": 4124,
							"nodeType": "ImportDirective",
							"scope": 4190,
							"sourceUnit": 1524,
							"src": "680:60:20",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 4123,
										"name": "IController",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "689:11:20",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IIntegrationRegistry.sol",
							"file": "../interfaces/IIntegrationRegistry.sol",
							"id": 4126,
							"nodeType": "ImportDirective",
							"scope": 4190,
							"sourceUnit": 1563,
							"src": "741:78:20",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 4125,
										"name": "IIntegrationRegistry",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "750:20:20",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IPriceOracle.sol",
							"file": "../interfaces/IPriceOracle.sol",
							"id": 4128,
							"nodeType": "ImportDirective",
							"scope": 4190,
							"sourceUnit": 1616,
							"src": "820:62:20",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 4127,
										"name": "IPriceOracle",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "829:12:20",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/ISetValuer.sol",
							"file": "../interfaces/ISetValuer.sol",
							"id": 4130,
							"nodeType": "ImportDirective",
							"scope": 4190,
							"sourceUnit": 1882,
							"src": "883:58:20",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 4129,
										"name": "ISetValuer",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "892:10:20",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 4131,
								"nodeType": "StructuredDocumentation",
								"src": "943:165:20",
								"text": " @title ResourceIdentifier\n @author Set Protocol\n A collection of utility functions to fetch information related to Resource contracts in the system"
							},
							"fullyImplemented": true,
							"id": 4189,
							"linearizedBaseContracts": [
								4189
							],
							"name": "ResourceIdentifier",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 4134,
									"mutability": "constant",
									"name": "INTEGRATION_REGISTRY_RESOURCE_ID",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 4189,
									"src": "1213:62:20",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4132,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1213:7:20",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 4133,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1274:1:20",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 4137,
									"mutability": "constant",
									"name": "PRICE_ORACLE_RESOURCE_ID",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 4189,
									"src": "1343:54:20",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4135,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1343:7:20",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "31",
										"id": 4136,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1396:1:20",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 4140,
									"mutability": "constant",
									"name": "SET_VALUER_RESOURCE_ID",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 4189,
									"src": "1472:52:20",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4138,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1472:7:20",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "32",
										"id": 4139,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1523:1:20",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4155,
										"nodeType": "Block",
										"src": "1838:102:20",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 4151,
																	"name": "INTEGRATION_REGISTRY_RESOURCE_ID",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4134,
																	"src": "1899:32:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 4149,
																	"name": "_controller",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4143,
																	"src": "1876:11:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IController_$1523",
																		"typeString": "contract IController"
																	}
																},
																"id": 4150,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "resourceId",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1522,
																"src": "1876:22:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																	"typeString": "function (uint256) view external returns (address)"
																}
															},
															"id": 4152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1876:56:20",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 4148,
														"name": "IIntegrationRegistry",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1562,
														"src": "1855:20:20",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IIntegrationRegistry_$1562_$",
															"typeString": "type(contract IIntegrationRegistry)"
														}
													},
													"id": 4153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1855:78:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIntegrationRegistry_$1562",
														"typeString": "contract IIntegrationRegistry"
													}
												},
												"functionReturnParameters": 4147,
												"id": 4154,
												"nodeType": "Return",
												"src": "1848:85:20"
											}
										]
									},
									"documentation": {
										"id": 4141,
										"nodeType": "StructuredDocumentation",
										"src": "1577:154:20",
										"text": " Gets the instance of integration registry stored on Controller. Note: IntegrationRegistry is stored as index 0 on\n the Controller"
									},
									"id": 4156,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getIntegrationRegistry",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 4144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4143,
												"mutability": "mutable",
												"name": "_controller",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 4156,
												"src": "1768:23:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IController_$1523",
													"typeString": "contract IController"
												},
												"typeName": {
													"contractScope": null,
													"id": 4142,
													"name": "IController",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1523,
													"src": "1768:11:20",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IController_$1523",
														"typeString": "contract IController"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1767:25:20"
									},
									"returnParameters": {
										"id": 4147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4146,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 4156,
												"src": "1816:20:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIntegrationRegistry_$1562",
													"typeString": "contract IIntegrationRegistry"
												},
												"typeName": {
													"contractScope": null,
													"id": 4145,
													"name": "IIntegrationRegistry",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1562,
													"src": "1816:20:20",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIntegrationRegistry_$1562",
														"typeString": "contract IIntegrationRegistry"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1815:22:20"
									},
									"scope": 4189,
									"src": "1736:204:20",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4171,
										"nodeType": "Block",
										"src": "2157:86:20",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 4167,
																	"name": "PRICE_ORACLE_RESOURCE_ID",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4137,
																	"src": "2210:24:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 4165,
																	"name": "_controller",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4159,
																	"src": "2187:11:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IController_$1523",
																		"typeString": "contract IController"
																	}
																},
																"id": 4166,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "resourceId",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1522,
																"src": "2187:22:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																	"typeString": "function (uint256) view external returns (address)"
																}
															},
															"id": 4168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2187:48:20",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 4164,
														"name": "IPriceOracle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1615,
														"src": "2174:12:20",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IPriceOracle_$1615_$",
															"typeString": "type(contract IPriceOracle)"
														}
													},
													"id": 4169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2174:62:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IPriceOracle_$1615",
														"typeString": "contract IPriceOracle"
													}
												},
												"functionReturnParameters": 4163,
												"id": 4170,
												"nodeType": "Return",
												"src": "2167:69:20"
											}
										]
									},
									"documentation": {
										"id": 4157,
										"nodeType": "StructuredDocumentation",
										"src": "1946:120:20",
										"text": " Gets instance of price oracle on Controller. Note: PriceOracle is stored as index 1 on the Controller"
									},
									"id": 4172,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPriceOracle",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 4160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4159,
												"mutability": "mutable",
												"name": "_controller",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 4172,
												"src": "2095:23:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IController_$1523",
													"typeString": "contract IController"
												},
												"typeName": {
													"contractScope": null,
													"id": 4158,
													"name": "IController",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1523,
													"src": "2095:11:20",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IController_$1523",
														"typeString": "contract IController"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2094:25:20"
									},
									"returnParameters": {
										"id": 4163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4162,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 4172,
												"src": "2143:12:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IPriceOracle_$1615",
													"typeString": "contract IPriceOracle"
												},
												"typeName": {
													"contractScope": null,
													"id": 4161,
													"name": "IPriceOracle",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1615,
													"src": "2143:12:20",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IPriceOracle_$1615",
														"typeString": "contract IPriceOracle"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2142:14:20"
									},
									"scope": 4189,
									"src": "2071:172:20",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4187,
										"nodeType": "Block",
										"src": "2456:82:20",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 4183,
																	"name": "SET_VALUER_RESOURCE_ID",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4140,
																	"src": "2507:22:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 4181,
																	"name": "_controller",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4175,
																	"src": "2484:11:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IController_$1523",
																		"typeString": "contract IController"
																	}
																},
																"id": 4182,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "resourceId",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1522,
																"src": "2484:22:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																	"typeString": "function (uint256) view external returns (address)"
																}
															},
															"id": 4184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2484:46:20",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 4180,
														"name": "ISetValuer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1881,
														"src": "2473:10:20",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ISetValuer_$1881_$",
															"typeString": "type(contract ISetValuer)"
														}
													},
													"id": 4185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2473:58:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISetValuer_$1881",
														"typeString": "contract ISetValuer"
													}
												},
												"functionReturnParameters": 4179,
												"id": 4186,
												"nodeType": "Return",
												"src": "2466:65:20"
											}
										]
									},
									"documentation": {
										"id": 4173,
										"nodeType": "StructuredDocumentation",
										"src": "2249:120:20",
										"text": " Gets the instance of Set valuer on Controller. Note: SetValuer is stored as index 2 on the Controller"
									},
									"id": 4188,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSetValuer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 4176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4175,
												"mutability": "mutable",
												"name": "_controller",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 4188,
												"src": "2396:23:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IController_$1523",
													"typeString": "contract IController"
												},
												"typeName": {
													"contractScope": null,
													"id": 4174,
													"name": "IController",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1523,
													"src": "2396:11:20",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IController_$1523",
														"typeString": "contract IController"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2395:25:20"
									},
									"returnParameters": {
										"id": 4179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4178,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 4188,
												"src": "2444:10:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISetValuer_$1881",
													"typeString": "contract ISetValuer"
												},
												"typeName": {
													"contractScope": null,
													"id": 4177,
													"name": "ISetValuer",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1881,
													"src": "2444:10:20",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISetValuer_$1881",
														"typeString": "contract ISetValuer"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2443:12:20"
									},
									"scope": 4189,
									"src": "2374:164:20",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 4190,
							"src": "1109:1431:20"
						}
					],
					"src": "655:1885:20"
				},
				"id": 20
			},
			"contracts/modules/BasicIssuanceModule.sol": {
				"ast": {
					"absolutePath": "contracts/modules/BasicIssuanceModule.sol",
					"exportedSymbols": {
						"BasicIssuanceModule": [
							4644
						]
					},
					"id": 4645,
					"license": "Apache License",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 4191,
							"literals": [
								"solidity",
								"0.6",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "651:23:21"
						},
						{
							"id": 4192,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "675:35:21"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 4194,
							"nodeType": "ImportDirective",
							"scope": 4645,
							"sourceUnit": 612,
							"src": "712:72:21",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 4193,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "721:6:21",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"id": 4196,
							"nodeType": "ImportDirective",
							"scope": 4645,
							"sourceUnit": 1161,
							"src": "785:84:21",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 4195,
										"name": "ReentrancyGuard",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "794:15:21",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/SafeCast.sol",
							"file": "@openzeppelin/contracts/utils/SafeCast.sol",
							"id": 4198,
							"nodeType": "ImportDirective",
							"scope": 4645,
							"sourceUnit": 1474,
							"src": "870:70:21",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 4197,
										"name": "SafeCast",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "879:8:21",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/math/SafeMath.sol",
							"id": 4200,
							"nodeType": "ImportDirective",
							"scope": 4645,
							"sourceUnit": 355,
							"src": "941:69:21",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 4199,
										"name": "SafeMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "950:8:21",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IController.sol",
							"file": "../interfaces/IController.sol",
							"id": 4202,
							"nodeType": "ImportDirective",
							"scope": 4645,
							"sourceUnit": 1524,
							"src": "1012:60:21",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 4201,
										"name": "IController",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "1021:11:21",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IManagerIssuanceHook.sol",
							"file": "../interfaces/IManagerIssuanceHook.sol",
							"id": 4204,
							"nodeType": "ImportDirective",
							"scope": 4645,
							"sourceUnit": 1590,
							"src": "1073:78:21",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 4203,
										"name": "IManagerIssuanceHook",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "1082:20:21",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/lib/Invoke.sol",
							"file": "../lib/Invoke.sol",
							"id": 4206,
							"nodeType": "ImportDirective",
							"scope": 4645,
							"sourceUnit": 2690,
							"src": "1152:43:21",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 4205,
										"name": "Invoke",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "1161:6:21",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/ISetToken.sol",
							"file": "../interfaces/ISetToken.sol",
							"id": 4208,
							"nodeType": "ImportDirective",
							"scope": 4645,
							"sourceUnit": 1868,
							"src": "1196:56:21",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 4207,
										"name": "ISetToken",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "1205:9:21",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/lib/ModuleBase.sol",
							"file": "../lib/ModuleBase.sol",
							"id": 4210,
							"nodeType": "ImportDirective",
							"scope": 4645,
							"sourceUnit": 3129,
							"src": "1253:51:21",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 4209,
										"name": "ModuleBase",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "1262:10:21",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/lib/Position.sol",
							"file": "../lib/Position.sol",
							"id": 4212,
							"nodeType": "ImportDirective",
							"scope": 4645,
							"sourceUnit": 3612,
							"src": "1305:47:21",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 4211,
										"name": "Position",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "1314:8:21",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/lib/PreciseUnitMath.sol",
							"file": "../lib/PreciseUnitMath.sol",
							"id": 4214,
							"nodeType": "ImportDirective",
							"scope": 4645,
							"sourceUnit": 4121,
							"src": "1353:61:21",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 4213,
										"name": "PreciseUnitMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "1362:15:21",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 4216,
										"name": "ModuleBase",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 3128,
										"src": "1669:10:21",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ModuleBase_$3128",
											"typeString": "contract ModuleBase"
										}
									},
									"id": 4217,
									"nodeType": "InheritanceSpecifier",
									"src": "1669:10:21"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 4218,
										"name": "ReentrancyGuard",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1160,
										"src": "1681:15:21",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ReentrancyGuard_$1160",
											"typeString": "contract ReentrancyGuard"
										}
									},
									"id": 4219,
									"nodeType": "InheritanceSpecifier",
									"src": "1681:15:21"
								}
							],
							"contractDependencies": [
								1160,
								1597,
								3128
							],
							"contractKind": "contract",
							"documentation": {
								"id": 4215,
								"nodeType": "StructuredDocumentation",
								"src": "1416:220:21",
								"text": " @title BasicIssuanceModule\n @author Set Protocol\n Module that enables issuance and redemption functionality on a SetToken. This is a module that is\n required to bring the totalSupply of a Set above 0."
							},
							"fullyImplemented": true,
							"id": 4644,
							"linearizedBaseContracts": [
								4644,
								1160,
								3128,
								1597
							],
							"name": "BasicIssuanceModule",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 4222,
									"libraryName": {
										"contractScope": null,
										"id": 4220,
										"name": "Invoke",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2689,
										"src": "1709:6:21",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Invoke_$2689",
											"typeString": "library Invoke"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1703:27:21",
									"typeName": {
										"contractScope": null,
										"id": 4221,
										"name": "ISetToken",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1867,
										"src": "1720:9:21",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ISetToken_$1867",
											"typeString": "contract ISetToken"
										}
									}
								},
								{
									"id": 4225,
									"libraryName": {
										"contractScope": null,
										"id": 4223,
										"name": "Position",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 3611,
										"src": "1741:8:21",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Position_$3611",
											"typeString": "library Position"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1735:38:21",
									"typeName": {
										"contractScope": null,
										"id": 4224,
										"name": "ISetToken.Position",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1638,
										"src": "1754:18:21",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Position_$1638_storage_ptr",
											"typeString": "struct ISetToken.Position"
										}
									}
								},
								{
									"id": 4228,
									"libraryName": {
										"contractScope": null,
										"id": 4226,
										"name": "Position",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 3611,
										"src": "1784:8:21",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Position_$3611",
											"typeString": "library Position"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1778:29:21",
									"typeName": {
										"contractScope": null,
										"id": 4227,
										"name": "ISetToken",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1867,
										"src": "1797:9:21",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ISetToken_$1867",
											"typeString": "contract ISetToken"
										}
									}
								},
								{
									"id": 4231,
									"libraryName": {
										"contractScope": null,
										"id": 4229,
										"name": "PreciseUnitMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 4120,
										"src": "1818:15:21",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_PreciseUnitMath_$4120",
											"typeString": "library PreciseUnitMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1812:34:21",
									"typeName": {
										"id": 4230,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1838:7:21",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 4234,
									"libraryName": {
										"contractScope": null,
										"id": 4232,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 354,
										"src": "1857:8:21",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$354",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1851:27:21",
									"typeName": {
										"id": 4233,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1870:7:21",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 4237,
									"libraryName": {
										"contractScope": null,
										"id": 4235,
										"name": "SafeCast",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1473,
										"src": "1889:8:21",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeCast_$1473",
											"typeString": "library SafeCast"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1883:26:21",
									"typeName": {
										"id": 4236,
										"name": "int256",
										"nodeType": "ElementaryTypeName",
										"src": "1902:6:21",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									}
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 4249,
									"name": "SetTokenIssued",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 4248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4239,
												"indexed": true,
												"mutability": "mutable",
												"name": "_setToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 4249,
												"src": "1989:25:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1989:7:21",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4241,
												"indexed": true,
												"mutability": "mutable",
												"name": "_issuer",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 4249,
												"src": "2024:23:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2024:7:21",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4243,
												"indexed": true,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 4249,
												"src": "2057:19:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2057:7:21",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4245,
												"indexed": false,
												"mutability": "mutable",
												"name": "_hookContract",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 4249,
												"src": "2086:21:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2086:7:21",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4247,
												"indexed": false,
												"mutability": "mutable",
												"name": "_quantity",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 4249,
												"src": "2117:17:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2117:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1979:161:21"
									},
									"src": "1959:182:21"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 4259,
									"name": "SetTokenRedeemed",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 4258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4251,
												"indexed": true,
												"mutability": "mutable",
												"name": "_setToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 4259,
												"src": "2178:25:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2178:7:21",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4253,
												"indexed": true,
												"mutability": "mutable",
												"name": "_redeemer",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 4259,
												"src": "2213:25:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2213:7:21",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4255,
												"indexed": true,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 4259,
												"src": "2248:19:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2248:7:21",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4257,
												"indexed": false,
												"mutability": "mutable",
												"name": "_quantity",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 4259,
												"src": "2277:17:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2277:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2168:132:21"
									},
									"src": "2146:155:21"
								},
								{
									"constant": false,
									"functionSelector": "dfe75335",
									"id": 4263,
									"mutability": "mutable",
									"name": "managerIssuanceHook",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 4644,
									"src": "2419:69:21",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_contract$_ISetToken_$1867_$_t_contract$_IManagerIssuanceHook_$1589_$",
										"typeString": "mapping(contract ISetToken => contract IManagerIssuanceHook)"
									},
									"typeName": {
										"id": 4262,
										"keyType": {
											"contractScope": null,
											"id": 4260,
											"name": "ISetToken",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 1867,
											"src": "2427:9:21",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_ISetToken_$1867",
												"typeString": "contract ISetToken"
											}
										},
										"nodeType": "Mapping",
										"src": "2419:42:21",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_contract$_ISetToken_$1867_$_t_contract$_IManagerIssuanceHook_$1589_$",
											"typeString": "mapping(contract ISetToken => contract IManagerIssuanceHook)"
										},
										"valueType": {
											"contractScope": null,
											"id": 4261,
											"name": "IManagerIssuanceHook",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 1589,
											"src": "2440:20:21",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IManagerIssuanceHook_$1589",
												"typeString": "contract IManagerIssuanceHook"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 4272,
										"nodeType": "Block",
										"src": "2747:2:21",
										"statements": []
									},
									"documentation": {
										"id": 4264,
										"nodeType": "StructuredDocumentation",
										"src": "2544:130:21",
										"text": " Set state controller state variable\n @param _controller             Address of controller contract"
									},
									"id": 4273,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"id": 4269,
													"name": "_controller",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4266,
													"src": "2734:11:21",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IController_$1523",
														"typeString": "contract IController"
													}
												}
											],
											"id": 4270,
											"modifierName": {
												"argumentTypes": null,
												"id": 4268,
												"name": "ModuleBase",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 3128,
												"src": "2723:10:21",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_ModuleBase_$3128_$",
													"typeString": "type(contract ModuleBase)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2723:23:21"
										}
									],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 4267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4266,
												"mutability": "mutable",
												"name": "_controller",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 4273,
												"src": "2691:23:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IController_$1523",
													"typeString": "contract IController"
												},
												"typeName": {
													"contractScope": null,
													"id": 4265,
													"name": "IController",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1523,
													"src": "2691:11:21",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IController_$1523",
														"typeString": "contract IController"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2690:25:21"
									},
									"returnParameters": {
										"id": 4271,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2747:0:21"
									},
									"scope": 4644,
									"src": "2679:70:21",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 4367,
										"nodeType": "Block",
										"src": "3440:877:21",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 4289,
																"name": "_quantity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4278,
																"src": "3458:9:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 4290,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3470:1:21",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3458:13:21",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4973737565207175616e74697479206d757374206265203e2030",
															"id": 4292,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3473:28:21",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4623d84a3f31f2e82f0cc179958d100a6d27f2937e04c05f4e5c45407c46244b",
																"typeString": "literal_string \"Issue quantity must be > 0\""
															},
															"value": "Issue quantity must be > 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4623d84a3f31f2e82f0cc179958d100a6d27f2937e04c05f4e5c45407c46244b",
																"typeString": "literal_string \"Issue quantity must be > 0\""
															}
														],
														"id": 4288,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3450:7:21",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3450:52:21",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4294,
												"nodeType": "ExpressionStatement",
												"src": "3450:52:21"
											},
											{
												"assignments": [
													4296
												],
												"declarations": [
													{
														"constant": false,
														"id": 4296,
														"mutability": "mutable",
														"name": "hookContract",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 4367,
														"src": "3513:20:21",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 4295,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3513:7:21",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 4304,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 4298,
															"name": "_setToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4276,
															"src": "3555:9:21",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISetToken_$1867",
																"typeString": "contract ISetToken"
															}
														},
														{
															"argumentTypes": null,
															"id": 4299,
															"name": "_quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4278,
															"src": "3566:9:21",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 4300,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "3577:3:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 4301,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3577:10:21",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 4302,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4280,
															"src": "3589:3:21",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_ISetToken_$1867",
																"typeString": "contract ISetToken"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 4297,
														"name": "_callPreIssueHooks",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4643,
														"src": "3536:18:21",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ISetToken_$1867_$_t_uint256_$_t_address_$_t_address_$returns$_t_address_$",
															"typeString": "function (contract ISetToken,uint256,address,address) returns (address)"
														}
													},
													"id": 4303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3536:57:21",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3513:80:21"
											},
											{
												"assignments": [
													4309,
													4312
												],
												"declarations": [
													{
														"constant": false,
														"id": 4309,
														"mutability": "mutable",
														"name": "components",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 4367,
														"src": "3618:27:21",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 4307,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3618:7:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 4308,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "3618:9:21",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 4312,
														"mutability": "mutable",
														"name": "componentQuantities",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 4367,
														"src": "3659:36:21",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 4310,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3659:7:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 4311,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "3659:9:21",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 4317,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 4314,
															"name": "_setToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4276,
															"src": "3742:9:21",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISetToken_$1867",
																"typeString": "contract ISetToken"
															}
														},
														{
															"argumentTypes": null,
															"id": 4315,
															"name": "_quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4278,
															"src": "3753:9:21",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_ISetToken_$1867",
																"typeString": "contract ISetToken"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4313,
														"name": "getRequiredComponentUnitsForIssue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4592,
														"src": "3708:33:21",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_contract$_ISetToken_$1867_$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (contract ISetToken,uint256) view returns (address[] memory,uint256[] memory)"
														}
													},
													"id": 4316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3708:55:21",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(address[] memory,uint256[] memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3604:159:21"
											},
											{
												"body": {
													"id": 4346,
													"nodeType": "Block",
													"src": "3901:248:21",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 4331,
																					"name": "components",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4309,
																					"src": "4006:10:21",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																						"typeString": "address[] memory"
																					}
																				},
																				"id": 4333,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 4332,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4319,
																					"src": "4017:1:21",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "4006:13:21",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 4330,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 611,
																			"src": "3999:6:21",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$611_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 4334,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3999:21:21",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$611",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 4335,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "4038:3:21",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 4336,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "4038:10:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 4339,
																				"name": "_setToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4276,
																				"src": "4074:9:21",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_ISetToken_$1867",
																					"typeString": "contract ISetToken"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_ISetToken_$1867",
																					"typeString": "contract ISetToken"
																				}
																			],
																			"id": 4338,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4066:7:21",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 4337,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4066:7:21",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 4340,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4066:18:21",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 4341,
																			"name": "componentQuantities",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4312,
																			"src": "4102:19:21",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 4343,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 4342,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4319,
																			"src": "4122:1:21",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4102:22:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$611",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4329,
																	"name": "transferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2838,
																	"src": "3969:12:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$611_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 4344,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3969:169:21",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4345,
															"nodeType": "ExpressionStatement",
															"src": "3969:169:21"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 4322,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4319,
														"src": "3873:1:21",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 4323,
															"name": "components",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4309,
															"src": "3877:10:21",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 4324,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "3877:17:21",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3873:21:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4347,
												"initializationExpression": {
													"assignments": [
														4319
													],
													"declarations": [
														{
															"constant": false,
															"id": 4319,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 4347,
															"src": "3858:9:21",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 4318,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3858:7:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 4321,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 4320,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3870:1:21",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3858:13:21"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 4327,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3896:3:21",
														"subExpression": {
															"argumentTypes": null,
															"id": 4326,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4319,
															"src": "3896:1:21",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 4328,
													"nodeType": "ExpressionStatement",
													"src": "3896:3:21"
												},
												"nodeType": "ForStatement",
												"src": "3853:296:21"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 4351,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4280,
															"src": "4203:3:21",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 4352,
															"name": "_quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4278,
															"src": "4208:9:21",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 4348,
															"name": "_setToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4276,
															"src": "4188:9:21",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISetToken_$1867",
																"typeString": "contract ISetToken"
															}
														},
														"id": 4350,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1725,
														"src": "4188:14:21",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 4353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4188:30:21",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4354,
												"nodeType": "ExpressionStatement",
												"src": "4188:30:21"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 4358,
																	"name": "_setToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4276,
																	"src": "4257:9:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ISetToken_$1867",
																		"typeString": "contract ISetToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ISetToken_$1867",
																		"typeString": "contract ISetToken"
																	}
																],
																"id": 4357,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4249:7:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 4356,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4249:7:21",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 4359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4249:18:21",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 4360,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "4269:3:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 4361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "4269:10:21",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 4362,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4280,
															"src": "4281:3:21",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 4363,
															"name": "hookContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4296,
															"src": "4286:12:21",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 4364,
															"name": "_quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4278,
															"src": "4300:9:21",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4355,
														"name": "SetTokenIssued",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4249,
														"src": "4234:14:21",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,address,uint256)"
														}
													},
													"id": 4365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4234:76:21",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4366,
												"nodeType": "EmitStatement",
												"src": "4229:81:21"
											}
										]
									},
									"documentation": {
										"id": 4274,
										"nodeType": "StructuredDocumentation",
										"src": "2811:438:21",
										"text": " Deposits the SetToken's position components into the SetToken and mints the SetToken of the given quantity\n to the specified _to address. This function only handles Default Positions (positionState = 0).\n @param _setToken             Instance of the SetToken contract\n @param _quantity             Quantity of the SetToken to mint\n @param _to                   Address to mint SetToken to"
									},
									"functionSelector": "6d78f47a",
									"id": 4368,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 4283,
											"modifierName": {
												"argumentTypes": null,
												"id": 4282,
												"name": "nonReentrant",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1159,
												"src": "3377:12:21",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3377:12:21"
										},
										{
											"arguments": [
												{
													"argumentTypes": null,
													"id": 4285,
													"name": "_setToken",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4276,
													"src": "3425:9:21",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISetToken_$1867",
														"typeString": "contract ISetToken"
													}
												}
											],
											"id": 4286,
											"modifierName": {
												"argumentTypes": null,
												"id": 4284,
												"name": "onlyValidAndInitializedSet",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2783,
												"src": "3398:26:21",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_contract$_ISetToken_$1867_$",
													"typeString": "modifier (contract ISetToken)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3398:37:21"
										}
									],
									"name": "issue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 4281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4276,
												"mutability": "mutable",
												"name": "_setToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 4368,
												"src": "3278:19:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISetToken_$1867",
													"typeString": "contract ISetToken"
												},
												"typeName": {
													"contractScope": null,
													"id": 4275,
													"name": "ISetToken",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1867,
													"src": "3278:9:21",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISetToken_$1867",
														"typeString": "contract ISetToken"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4278,
												"mutability": "mutable",
												"name": "_quantity",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 4368,
												"src": "3307:17:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3307:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4280,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 4368,
												"src": "3334:11:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3334:7:21",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3268:83:21"
									},
									"returnParameters": {
										"id": 4287,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3440:0:21"
									},
									"scope": 4644,
									"src": "3254:1063:21",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 4470,
										"nodeType": "Block",
										"src": "4921:1158:21",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 4384,
																"name": "_quantity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4373,
																"src": "4939:9:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 4385,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4951:1:21",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4939:13:21",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "52656465656d207175616e74697479206d757374206265203e2030",
															"id": 4387,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4954:29:21",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2e262b1c56043d2fd108f0dd34c851339c3c02c79afe926f9e26c5bbbbc0b4b0",
																"typeString": "literal_string \"Redeem quantity must be > 0\""
															},
															"value": "Redeem quantity must be > 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2e262b1c56043d2fd108f0dd34c851339c3c02c79afe926f9e26c5bbbbc0b4b0",
																"typeString": "literal_string \"Redeem quantity must be > 0\""
															}
														],
														"id": 4383,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4931:7:21",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4931:53:21",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4389,
												"nodeType": "ExpressionStatement",
												"src": "4931:53:21"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 4393,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "5111:3:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 4394,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5111:10:21",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 4395,
															"name": "_quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4373,
															"src": "5123:9:21",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 4390,
															"name": "_setToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4371,
															"src": "5096:9:21",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISetToken_$1867",
																"typeString": "contract ISetToken"
															}
														},
														"id": 4392,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "burn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1732,
														"src": "5096:14:21",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 4396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5096:37:21",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4397,
												"nodeType": "ExpressionStatement",
												"src": "5096:37:21"
											},
											{
												"assignments": [
													4402
												],
												"declarations": [
													{
														"constant": false,
														"id": 4402,
														"mutability": "mutable",
														"name": "components",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 4470,
														"src": "5229:27:21",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 4400,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5229:7:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 4401,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "5229:9:21",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 4406,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"id": 4403,
															"name": "_setToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4371,
															"src": "5259:9:21",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISetToken_$1867",
																"typeString": "contract ISetToken"
															}
														},
														"id": 4404,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getComponents",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1796,
														"src": "5259:23:21",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$",
															"typeString": "function () view external returns (address[] memory)"
														}
													},
													"id": 4405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5259:25:21",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5229:55:21"
											},
											{
												"body": {
													"id": 4457,
													"nodeType": "Block",
													"src": "5342:651:21",
													"statements": [
														{
															"assignments": [
																4419
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 4419,
																	"mutability": "mutable",
																	"name": "component",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 4457,
																	"src": "5356:17:21",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 4418,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5356:7:21",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 4423,
															"initialValue": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 4420,
																	"name": "components",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4402,
																	"src": "5376:10:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 4422,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 4421,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4408,
																	"src": "5387:1:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5376:13:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5356:33:21"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 4429,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "!",
																		"prefix": true,
																		"src": "5411:41:21",
																		"subExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 4427,
																					"name": "component",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4419,
																					"src": "5442:9:21",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 4425,
																					"name": "_setToken",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4371,
																					"src": "5412:9:21",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_ISetToken_$1867",
																						"typeString": "contract ISetToken"
																					}
																				},
																				"id": 4426,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "hasExternalPosition",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 3196,
																				"src": "5412:29:21",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_contract$_ISetToken_$1867_$_t_address_$returns$_t_bool_$bound_to$_t_contract$_ISetToken_$1867_$",
																					"typeString": "function (contract ISetToken,address) view returns (bool)"
																				}
																			},
																			"id": 4428,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5412:40:21",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "4f6e6c792064656661756c7420706f736974696f6e732061726520737570706f72746564",
																		"id": 4430,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5454:38:21",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_31c399bc3a4e34f98a86eb6b26e59b83a833d8c58af4995e2b5058f53fab8a73",
																			"typeString": "literal_string \"Only default positions are supported\""
																		},
																		"value": "Only default positions are supported"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_31c399bc3a4e34f98a86eb6b26e59b83a833d8c58af4995e2b5058f53fab8a73",
																			"typeString": "literal_string \"Only default positions are supported\""
																		}
																	],
																	"id": 4424,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "5403:7:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 4431,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5403:90:21",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4432,
															"nodeType": "ExpressionStatement",
															"src": "5403:90:21"
														},
														{
															"assignments": [
																4434
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 4434,
																	"mutability": "mutable",
																	"name": "unit",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 4457,
																	"src": "5508:12:21",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 4433,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5508:7:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 4441,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 4437,
																				"name": "component",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4419,
																				"src": "5560:9:21",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 4435,
																				"name": "_setToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4371,
																				"src": "5523:9:21",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_ISetToken_$1867",
																					"typeString": "contract ISetToken"
																				}
																			},
																			"id": 4436,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "getDefaultPositionRealUnit",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1781,
																			"src": "5523:36:21",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_int256_$",
																				"typeString": "function (address) view external returns (int256)"
																			}
																		},
																		"id": 4438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5523:47:21",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 4439,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "toUint256",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1299,
																	"src": "5523:57:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$bound_to$_t_int256_$",
																		"typeString": "function (int256) pure returns (uint256)"
																	}
																},
																"id": 4440,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5523:59:21",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5508:74:21"
														},
														{
															"assignments": [
																4443
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 4443,
																	"mutability": "mutable",
																	"name": "componentQuantity",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 4457,
																	"src": "5711:25:21",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 4442,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5711:7:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 4448,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 4446,
																		"name": "unit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4434,
																		"src": "5760:4:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 4444,
																		"name": "_quantity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4373,
																		"src": "5739:9:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 4445,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "preciseMul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3725,
																	"src": "5739:20:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 4447,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5739:26:21",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5711:54:21"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 4452,
																		"name": "component",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4419,
																		"src": "5903:9:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 4453,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4375,
																		"src": "5930:3:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 4454,
																		"name": "componentQuantity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4443,
																		"src": "5951:17:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 4449,
																		"name": "_setToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4371,
																		"src": "5855:9:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ISetToken_$1867",
																			"typeString": "contract ISetToken"
																		}
																	},
																	"id": 4451,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "strictInvokeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2635,
																	"src": "5855:30:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ISetToken_$1867_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ISetToken_$1867_$",
																		"typeString": "function (contract ISetToken,address,address,uint256)"
																	}
																},
																"id": 4455,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5855:127:21",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4456,
															"nodeType": "ExpressionStatement",
															"src": "5855:127:21"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 4411,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4408,
														"src": "5314:1:21",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 4412,
															"name": "components",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4402,
															"src": "5318:10:21",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 4413,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "5318:17:21",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5314:21:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4458,
												"initializationExpression": {
													"assignments": [
														4408
													],
													"declarations": [
														{
															"constant": false,
															"id": 4408,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 4458,
															"src": "5299:9:21",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 4407,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5299:7:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 4410,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 4409,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5311:1:21",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5299:13:21"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 4416,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "5337:3:21",
														"subExpression": {
															"argumentTypes": null,
															"id": 4415,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4408,
															"src": "5337:1:21",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 4417,
													"nodeType": "ExpressionStatement",
													"src": "5337:3:21"
												},
												"nodeType": "ForStatement",
												"src": "5294:699:21"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 4462,
																	"name": "_setToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4371,
																	"src": "6033:9:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ISetToken_$1867",
																		"typeString": "contract ISetToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ISetToken_$1867",
																		"typeString": "contract ISetToken"
																	}
																],
																"id": 4461,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6025:7:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 4460,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6025:7:21",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 4463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6025:18:21",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 4464,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "6045:3:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 4465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "6045:10:21",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 4466,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4375,
															"src": "6057:3:21",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 4467,
															"name": "_quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4373,
															"src": "6062:9:21",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4459,
														"name": "SetTokenRedeemed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4259,
														"src": "6008:16:21",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 4468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6008:64:21",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4469,
												"nodeType": "EmitStatement",
												"src": "6003:69:21"
											}
										]
									},
									"documentation": {
										"id": 4369,
										"nodeType": "StructuredDocumentation",
										"src": "4323:406:21",
										"text": " Redeems the SetToken's positions and sends the components of the given\n quantity to the caller. This function only handles Default Positions (positionState = 0).\n @param _setToken             Instance of the SetToken contract\n @param _quantity             Quantity of the SetToken to redeem\n @param _to                   Address to send component assets to"
									},
									"functionSelector": "5c833bfd",
									"id": 4471,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 4378,
											"modifierName": {
												"argumentTypes": null,
												"id": 4377,
												"name": "nonReentrant",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1159,
												"src": "4858:12:21",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "4858:12:21"
										},
										{
											"arguments": [
												{
													"argumentTypes": null,
													"id": 4380,
													"name": "_setToken",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4371,
													"src": "4906:9:21",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISetToken_$1867",
														"typeString": "contract ISetToken"
													}
												}
											],
											"id": 4381,
											"modifierName": {
												"argumentTypes": null,
												"id": 4379,
												"name": "onlyValidAndInitializedSet",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2783,
												"src": "4879:26:21",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_contract$_ISetToken_$1867_$",
													"typeString": "modifier (contract ISetToken)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "4879:37:21"
										}
									],
									"name": "redeem",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 4376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4371,
												"mutability": "mutable",
												"name": "_setToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 4471,
												"src": "4759:19:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISetToken_$1867",
													"typeString": "contract ISetToken"
												},
												"typeName": {
													"contractScope": null,
													"id": 4370,
													"name": "ISetToken",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1867,
													"src": "4759:9:21",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISetToken_$1867",
														"typeString": "contract ISetToken"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4373,
												"mutability": "mutable",
												"name": "_quantity",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 4471,
												"src": "4788:17:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4788:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4375,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 4471,
												"src": "4815:11:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4815:7:21",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4749:83:21"
									},
									"returnParameters": {
										"id": 4382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4921:0:21"
									},
									"scope": 4644,
									"src": "4734:1345:21",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 4498,
										"nodeType": "Block",
										"src": "6689:102:21",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 4491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 4487,
															"name": "managerIssuanceHook",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4263,
															"src": "6699:19:21",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_contract$_ISetToken_$1867_$_t_contract$_IManagerIssuanceHook_$1589_$",
																"typeString": "mapping(contract ISetToken => contract IManagerIssuanceHook)"
															}
														},
														"id": 4489,
														"indexExpression": {
															"argumentTypes": null,
															"id": 4488,
															"name": "_setToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4474,
															"src": "6719:9:21",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISetToken_$1867",
																"typeString": "contract ISetToken"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6699:30:21",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IManagerIssuanceHook_$1589",
															"typeString": "contract IManagerIssuanceHook"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 4490,
														"name": "_preIssueHook",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4476,
														"src": "6732:13:21",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IManagerIssuanceHook_$1589",
															"typeString": "contract IManagerIssuanceHook"
														}
													},
													"src": "6699:46:21",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IManagerIssuanceHook_$1589",
														"typeString": "contract IManagerIssuanceHook"
													}
												},
												"id": 4492,
												"nodeType": "ExpressionStatement",
												"src": "6699:46:21"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"id": 4493,
															"name": "_setToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4474,
															"src": "6756:9:21",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISetToken_$1867",
																"typeString": "contract ISetToken"
															}
														},
														"id": 4495,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "initializeModule",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1751,
														"src": "6756:26:21",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
															"typeString": "function () external"
														}
													},
													"id": 4496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6756:28:21",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4497,
												"nodeType": "ExpressionStatement",
												"src": "6756:28:21"
											}
										]
									},
									"documentation": {
										"id": 4472,
										"nodeType": "StructuredDocumentation",
										"src": "6085:391:21",
										"text": " Initializes this module to the SetToken with issuance-related hooks. Only callable by the SetToken's manager.\n Hook addresses are optional. Address(0) means that no hook will be called\n @param _setToken             Instance of the SetToken to issue\n @param _preIssueHook         Instance of the Manager Contract with the Pre-Issuance Hook function"
									},
									"functionSelector": "485cc955",
									"id": 4499,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"id": 4479,
													"name": "_setToken",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4474,
													"src": "6620:9:21",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISetToken_$1867",
														"typeString": "contract ISetToken"
													}
												},
												{
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 4480,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "6631:3:21",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 4481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "6631:10:21",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												}
											],
											"id": 4482,
											"modifierName": {
												"argumentTypes": null,
												"id": 4478,
												"name": "onlySetManager",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2773,
												"src": "6605:14:21",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_contract$_ISetToken_$1867_$_t_address_$",
													"typeString": "modifier (contract ISetToken,address)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "6605:37:21"
										},
										{
											"arguments": [
												{
													"argumentTypes": null,
													"id": 4484,
													"name": "_setToken",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4474,
													"src": "6674:9:21",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISetToken_$1867",
														"typeString": "contract ISetToken"
													}
												}
											],
											"id": 4485,
											"modifierName": {
												"argumentTypes": null,
												"id": 4483,
												"name": "onlyValidAndPendingSet",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2805,
												"src": "6651:22:21",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_contract$_ISetToken_$1867_$",
													"typeString": "modifier (contract ISetToken)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "6651:33:21"
										}
									],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 4477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4474,
												"mutability": "mutable",
												"name": "_setToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 4499,
												"src": "6510:19:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISetToken_$1867",
													"typeString": "contract ISetToken"
												},
												"typeName": {
													"contractScope": null,
													"id": 4473,
													"name": "ISetToken",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1867,
													"src": "6510:9:21",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISetToken_$1867",
														"typeString": "contract ISetToken"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4476,
												"mutability": "mutable",
												"name": "_preIssueHook",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 4499,
												"src": "6539:34:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IManagerIssuanceHook_$1589",
													"typeString": "contract IManagerIssuanceHook"
												},
												"typeName": {
													"contractScope": null,
													"id": 4475,
													"name": "IManagerIssuanceHook",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1589,
													"src": "6539:20:21",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IManagerIssuanceHook_$1589",
														"typeString": "contract IManagerIssuanceHook"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6500:79:21"
									},
									"returnParameters": {
										"id": 4486,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6689:0:21"
									},
									"scope": 4644,
									"src": "6481:310:21",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1596
									],
									"body": {
										"id": 4508,
										"nodeType": "Block",
										"src": "6981:75:21",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "54686520426173696349737375616e63654d6f64756c65206d6f64756c652063616e6e6f742062652072656d6f766564",
															"id": 4505,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6998:50:21",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_312c870e2f52040e0b7f2f73e604ec0474ec6a33df644c0e7a7e4a483c0c9b4c",
																"typeString": "literal_string \"The BasicIssuanceModule module cannot be removed\""
															},
															"value": "The BasicIssuanceModule module cannot be removed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_312c870e2f52040e0b7f2f73e604ec0474ec6a33df644c0e7a7e4a483c0c9b4c",
																"typeString": "literal_string \"The BasicIssuanceModule module cannot be removed\""
															}
														],
														"id": 4504,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-19,
															-19
														],
														"referencedDeclaration": -19,
														"src": "6991:6:21",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory) pure"
														}
													},
													"id": 4506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6991:58:21",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4507,
												"nodeType": "ExpressionStatement",
												"src": "6991:58:21"
											}
										]
									},
									"documentation": {
										"id": 4500,
										"nodeType": "StructuredDocumentation",
										"src": "6797:137:21",
										"text": " Reverts as this module should not be removable after added. Users should always\n have a way to redeem their Sets"
									},
									"functionSelector": "847ef08d",
									"id": 4509,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "removeModule",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 4502,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6972:8:21"
									},
									"parameters": {
										"id": 4501,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6960:2:21"
									},
									"returnParameters": {
										"id": 4503,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6981:0:21"
									},
									"scope": 4644,
									"src": "6939:117:21",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 4591,
										"nodeType": "Block",
										"src": "7781:493:21",
										"statements": [
											{
												"assignments": [
													4530
												],
												"declarations": [
													{
														"constant": false,
														"id": 4530,
														"mutability": "mutable",
														"name": "components",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 4591,
														"src": "7791:27:21",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 4528,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7791:7:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 4529,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "7791:9:21",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 4534,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"id": 4531,
															"name": "_setToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4512,
															"src": "7821:9:21",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISetToken_$1867",
																"typeString": "contract ISetToken"
															}
														},
														"id": 4532,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getComponents",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1796,
														"src": "7821:23:21",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$",
															"typeString": "function () view external returns (address[] memory)"
														}
													},
													"id": 4533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7821:25:21",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7791:55:21"
											},
											{
												"assignments": [
													4539
												],
												"declarations": [
													{
														"constant": false,
														"id": 4539,
														"mutability": "mutable",
														"name": "notionalUnits",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 4591,
														"src": "7857:30:21",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 4537,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "7857:7:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 4538,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "7857:9:21",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 4546,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 4543,
																"name": "components",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4530,
																"src": "7904:10:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 4544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "7904:17:21",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4542,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "7890:13:21",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 4540,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "7894:7:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 4541,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "7894:9:21",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 4545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7890:32:21",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7857:65:21"
											},
											{
												"body": {
													"id": 4585,
													"nodeType": "Block",
													"src": "7981:242:21",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 4565,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "!",
																		"prefix": true,
																		"src": "8003:45:21",
																		"subExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"id": 4561,
																						"name": "components",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4530,
																						"src": "8034:10:21",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																							"typeString": "address[] memory"
																						}
																					},
																					"id": 4563,
																					"indexExpression": {
																						"argumentTypes": null,
																						"id": 4562,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4548,
																						"src": "8045:1:21",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "8034:13:21",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 4559,
																					"name": "_setToken",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4512,
																					"src": "8004:9:21",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_ISetToken_$1867",
																						"typeString": "contract ISetToken"
																					}
																				},
																				"id": 4560,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "hasExternalPosition",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 3196,
																				"src": "8004:29:21",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_contract$_ISetToken_$1867_$_t_address_$returns$_t_bool_$bound_to$_t_contract$_ISetToken_$1867_$",
																					"typeString": "function (contract ISetToken,address) view returns (bool)"
																				}
																			},
																			"id": 4564,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8004:44:21",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "4f6e6c792064656661756c7420706f736974696f6e732061726520737570706f72746564",
																		"id": 4566,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8050:38:21",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_31c399bc3a4e34f98a86eb6b26e59b83a833d8c58af4995e2b5058f53fab8a73",
																			"typeString": "literal_string \"Only default positions are supported\""
																		},
																		"value": "Only default positions are supported"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_31c399bc3a4e34f98a86eb6b26e59b83a833d8c58af4995e2b5058f53fab8a73",
																			"typeString": "literal_string \"Only default positions are supported\""
																		}
																	],
																	"id": 4558,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "7995:7:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 4567,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7995:94:21",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4568,
															"nodeType": "ExpressionStatement",
															"src": "7995:94:21"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 4583,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 4569,
																		"name": "notionalUnits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4539,
																		"src": "8104:13:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 4571,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 4570,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4548,
																		"src": "8118:1:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8104:16:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 4581,
																			"name": "_quantity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4514,
																			"src": "8202:9:21",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"baseExpression": {
																								"argumentTypes": null,
																								"id": 4574,
																								"name": "components",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4530,
																								"src": "8160:10:21",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																									"typeString": "address[] memory"
																								}
																							},
																							"id": 4576,
																							"indexExpression": {
																								"argumentTypes": null,
																								"id": 4575,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4548,
																								"src": "8171:1:21",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "8160:13:21",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"expression": {
																							"argumentTypes": null,
																							"id": 4572,
																							"name": "_setToken",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4512,
																							"src": "8123:9:21",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_ISetToken_$1867",
																								"typeString": "contract ISetToken"
																							}
																						},
																						"id": 4573,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "getDefaultPositionRealUnit",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1781,
																						"src": "8123:36:21",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_int256_$",
																							"typeString": "function (address) view external returns (int256)"
																						}
																					},
																					"id": 4577,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8123:51:21",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"id": 4578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "toUint256",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1299,
																				"src": "8123:61:21",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$bound_to$_t_int256_$",
																					"typeString": "function (int256) pure returns (uint256)"
																				}
																			},
																			"id": 4579,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8123:63:21",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 4580,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "preciseMulCeil",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3780,
																		"src": "8123:78:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 4582,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8123:89:21",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8104:108:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 4584,
															"nodeType": "ExpressionStatement",
															"src": "8104:108:21"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 4551,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4548,
														"src": "7953:1:21",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 4552,
															"name": "components",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4530,
															"src": "7957:10:21",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 4553,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "7957:17:21",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7953:21:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4586,
												"initializationExpression": {
													"assignments": [
														4548
													],
													"declarations": [
														{
															"constant": false,
															"id": 4548,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 4586,
															"src": "7938:9:21",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 4547,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "7938:7:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 4550,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 4549,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7950:1:21",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "7938:13:21"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 4556,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "7976:3:21",
														"subExpression": {
															"argumentTypes": null,
															"id": 4555,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4548,
															"src": "7976:1:21",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 4557,
													"nodeType": "ExpressionStatement",
													"src": "7976:3:21"
												},
												"nodeType": "ForStatement",
												"src": "7933:290:21"
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"id": 4587,
															"name": "components",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4530,
															"src": "8241:10:21",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 4588,
															"name": "notionalUnits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4539,
															"src": "8253:13:21",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"id": 4589,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "8240:27:21",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(address[] memory,uint256[] memory)"
													}
												},
												"functionReturnParameters": 4525,
												"id": 4590,
												"nodeType": "Return",
												"src": "8233:34:21"
											}
										]
									},
									"documentation": {
										"id": 4510,
										"nodeType": "StructuredDocumentation",
										"src": "7125:415:21",
										"text": " Retrieves the addresses and units required to mint a particular quantity of SetToken.\n @param _setToken             Instance of the SetToken to issue\n @param _quantity             Quantity of SetToken to issue\n @return address[]            List of component addresses\n @return uint256[]            List of component units required to issue the quantity of SetTokens"
									},
									"functionSelector": "7a4ffd03",
									"id": 4592,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"id": 4517,
													"name": "_setToken",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4512,
													"src": "7713:9:21",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISetToken_$1867",
														"typeString": "contract ISetToken"
													}
												}
											],
											"id": 4518,
											"modifierName": {
												"argumentTypes": null,
												"id": 4516,
												"name": "onlyValidAndInitializedSet",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2783,
												"src": "7686:26:21",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_contract$_ISetToken_$1867_$",
													"typeString": "modifier (contract ISetToken)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "7686:37:21"
										}
									],
									"name": "getRequiredComponentUnitsForIssue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 4515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4512,
												"mutability": "mutable",
												"name": "_setToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 4592,
												"src": "7597:19:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISetToken_$1867",
													"typeString": "contract ISetToken"
												},
												"typeName": {
													"contractScope": null,
													"id": 4511,
													"name": "ISetToken",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1867,
													"src": "7597:9:21",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISetToken_$1867",
														"typeString": "contract ISetToken"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4514,
												"mutability": "mutable",
												"name": "_quantity",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 4592,
												"src": "7626:17:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7626:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7587:62:21"
									},
									"returnParameters": {
										"id": 4525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4521,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 4592,
												"src": "7741:16:21",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 4519,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "7741:7:21",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 4520,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "7741:9:21",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4524,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 4592,
												"src": "7759:16:21",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 4522,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "7759:7:21",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 4523,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "7759:9:21",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7740:36:21"
									},
									"scope": 4644,
									"src": "7545:729:21",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 4642,
										"nodeType": "Block",
										"src": "8728:295:21",
										"statements": [
											{
												"assignments": [
													4607
												],
												"declarations": [
													{
														"constant": false,
														"id": 4607,
														"mutability": "mutable",
														"name": "preIssueHook",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 4642,
														"src": "8738:33:21",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IManagerIssuanceHook_$1589",
															"typeString": "contract IManagerIssuanceHook"
														},
														"typeName": {
															"contractScope": null,
															"id": 4606,
															"name": "IManagerIssuanceHook",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1589,
															"src": "8738:20:21",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IManagerIssuanceHook_$1589",
																"typeString": "contract IManagerIssuanceHook"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 4611,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 4608,
														"name": "managerIssuanceHook",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4263,
														"src": "8774:19:21",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_contract$_ISetToken_$1867_$_t_contract$_IManagerIssuanceHook_$1589_$",
															"typeString": "mapping(contract ISetToken => contract IManagerIssuanceHook)"
														}
													},
													"id": 4610,
													"indexExpression": {
														"argumentTypes": null,
														"id": 4609,
														"name": "_setToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4595,
														"src": "8794:9:21",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISetToken_$1867",
															"typeString": "contract ISetToken"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8774:30:21",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IManagerIssuanceHook_$1589",
														"typeString": "contract IManagerIssuanceHook"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8738:66:21"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 4620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 4614,
																"name": "preIssueHook",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4607,
																"src": "8826:12:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IManagerIssuanceHook_$1589",
																	"typeString": "contract IManagerIssuanceHook"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IManagerIssuanceHook_$1589",
																	"typeString": "contract IManagerIssuanceHook"
																}
															],
															"id": 4613,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8818:7:21",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 4612,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8818:7:21",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 4615,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8818:21:21",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 4618,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8851:1:21",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 4617,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8843:7:21",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 4616,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8843:7:21",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 4619,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8843:10:21",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "8818:35:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 4636,
												"nodeType": "IfStatement",
												"src": "8814:175:21",
												"trueBody": {
													"id": 4635,
													"nodeType": "Block",
													"src": "8855:134:21",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 4624,
																		"name": "_setToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4595,
																		"src": "8901:9:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ISetToken_$1867",
																			"typeString": "contract ISetToken"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 4625,
																		"name": "_quantity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4597,
																		"src": "8912:9:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 4626,
																		"name": "_caller",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4599,
																		"src": "8923:7:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 4627,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4601,
																		"src": "8932:3:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_ISetToken_$1867",
																			"typeString": "contract ISetToken"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 4621,
																		"name": "preIssueHook",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4607,
																		"src": "8869:12:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IManagerIssuanceHook_$1589",
																			"typeString": "contract IManagerIssuanceHook"
																		}
																	},
																	"id": 4623,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "invokePreIssueHook",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1577,
																	"src": "8869:31:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISetToken_$1867_$_t_uint256_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (contract ISetToken,uint256,address,address) external"
																	}
																},
																"id": 4628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8869:67:21",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4629,
															"nodeType": "ExpressionStatement",
															"src": "8869:67:21"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 4632,
																		"name": "preIssueHook",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4607,
																		"src": "8965:12:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IManagerIssuanceHook_$1589",
																			"typeString": "contract IManagerIssuanceHook"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IManagerIssuanceHook_$1589",
																			"typeString": "contract IManagerIssuanceHook"
																		}
																	],
																	"id": 4631,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8957:7:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 4630,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8957:7:21",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 4633,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8957:21:21",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"functionReturnParameters": 4605,
															"id": 4634,
															"nodeType": "Return",
															"src": "8950:28:21"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 4639,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9014:1:21",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 4638,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9006:7:21",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 4637,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9006:7:21",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 4640,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9006:10:21",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 4605,
												"id": 4641,
												"nodeType": "Return",
												"src": "8999:17:21"
											}
										]
									},
									"documentation": {
										"id": 4593,
										"nodeType": "StructuredDocumentation",
										"src": "8336:205:21",
										"text": " If a pre-issue hook has been configured, call the external-protocol contract. Pre-issue hook logic\n can contain arbitrary logic including validations, external function calls, etc."
									},
									"id": 4643,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callPreIssueHooks",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 4602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4595,
												"mutability": "mutable",
												"name": "_setToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 4643,
												"src": "8583:19:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISetToken_$1867",
													"typeString": "contract ISetToken"
												},
												"typeName": {
													"contractScope": null,
													"id": 4594,
													"name": "ISetToken",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1867,
													"src": "8583:9:21",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISetToken_$1867",
														"typeString": "contract ISetToken"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4597,
												"mutability": "mutable",
												"name": "_quantity",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 4643,
												"src": "8612:17:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4596,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8612:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4599,
												"mutability": "mutable",
												"name": "_caller",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 4643,
												"src": "8639:15:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8639:7:21",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4601,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 4643,
												"src": "8664:11:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8664:7:21",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8573:108:21"
									},
									"returnParameters": {
										"id": 4605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4604,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 4643,
												"src": "8715:7:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4603,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8715:7:21",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8714:9:21"
									},
									"scope": 4644,
									"src": "8546:477:21",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 4645,
							"src": "1637:7388:21"
						}
					],
					"src": "651:8374:21"
				},
				"id": 21
			}
		}
	}
}